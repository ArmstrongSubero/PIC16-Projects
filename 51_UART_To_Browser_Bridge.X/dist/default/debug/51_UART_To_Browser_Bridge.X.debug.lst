

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Apr 14 00:12:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 06/07/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1719 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     0110                     	;# 
   119     0111                     	;# 
   120     0112                     	;# 
   121     0113                     	;# 
   122     0114                     	;# 
   123     0115                     	;# 
   124     0116                     	;# 
   125     0117                     	;# 
   126     0118                     	;# 
   127     0119                     	;# 
   128     011A                     	;# 
   129     011B                     	;# 
   130     011B                     	;# 
   131     011C                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     018E                     	;# 
   135     018F                     	;# 
   136     0190                     	;# 
   137     0191                     	;# 
   138     0191                     	;# 
   139     0192                     	;# 
   140     0193                     	;# 
   141     0193                     	;# 
   142     0194                     	;# 
   143     0195                     	;# 
   144     0196                     	;# 
   145     0197                     	;# 
   146     0199                     	;# 
   147     0199                     	;# 
   148     0199                     	;# 
   149     019A                     	;# 
   150     019A                     	;# 
   151     019A                     	;# 
   152     019B                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019B                     	;# 
   157     019C                     	;# 
   158     019C                     	;# 
   159     019C                     	;# 
   160     019D                     	;# 
   161     019D                     	;# 
   162     019D                     	;# 
   163     019E                     	;# 
   164     019E                     	;# 
   165     019E                     	;# 
   166     019F                     	;# 
   167     019F                     	;# 
   168     019F                     	;# 
   169     019F                     	;# 
   170     019F                     	;# 
   171     020C                     	;# 
   172     020D                     	;# 
   173     020E                     	;# 
   174     020F                     	;# 
   175     0210                     	;# 
   176     0211                     	;# 
   177     0211                     	;# 
   178     0212                     	;# 
   179     0212                     	;# 
   180     0213                     	;# 
   181     0213                     	;# 
   182     0214                     	;# 
   183     0214                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0215                     	;# 
   188     0216                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0217                     	;# 
   192     028C                     	;# 
   193     028D                     	;# 
   194     028E                     	;# 
   195     028F                     	;# 
   196     0290                     	;# 
   197     0291                     	;# 
   198     0291                     	;# 
   199     0292                     	;# 
   200     0293                     	;# 
   201     0293                     	;# 
   202     0298                     	;# 
   203     0298                     	;# 
   204     0299                     	;# 
   205     029A                     	;# 
   206     029A                     	;# 
   207     029E                     	;# 
   208     030C                     	;# 
   209     030D                     	;# 
   210     030E                     	;# 
   211     030F                     	;# 
   212     0310                     	;# 
   213     038C                     	;# 
   214     038D                     	;# 
   215     038E                     	;# 
   216     038F                     	;# 
   217     0390                     	;# 
   218     0391                     	;# 
   219     0392                     	;# 
   220     0393                     	;# 
   221     0394                     	;# 
   222     0395                     	;# 
   223     0396                     	;# 
   224     0397                     	;# 
   225     0398                     	;# 
   226     0399                     	;# 
   227     039D                     	;# 
   228     039E                     	;# 
   229     039F                     	;# 
   230     0415                     	;# 
   231     0416                     	;# 
   232     0417                     	;# 
   233     041C                     	;# 
   234     041D                     	;# 
   235     041E                     	;# 
   236     0498                     	;# 
   237     0498                     	;# 
   238     0499                     	;# 
   239     049A                     	;# 
   240     049B                     	;# 
   241     049B                     	;# 
   242     049C                     	;# 
   243     049D                     	;# 
   244     049E                     	;# 
   245     049F                     	;# 
   246     0511                     	;# 
   247     0515                     	;# 
   248     0617                     	;# 
   249     0618                     	;# 
   250     0619                     	;# 
   251     0619                     	;# 
   252     061A                     	;# 
   253     061B                     	;# 
   254     061C                     	;# 
   255     061C                     	;# 
   256     0691                     	;# 
   257     0692                     	;# 
   258     0693                     	;# 
   259     0694                     	;# 
   260     0695                     	;# 
   261     0696                     	;# 
   262     0697                     	;# 
   263     0698                     	;# 
   264     0699                     	;# 
   265     069A                     	;# 
   266     069B                     	;# 
   267     069C                     	;# 
   268     069D                     	;# 
   269     069E                     	;# 
   270     069F                     	;# 
   271     0E0F                     	;# 
   272     0E10                     	;# 
   273     0E11                     	;# 
   274     0E12                     	;# 
   275     0E13                     	;# 
   276     0E14                     	;# 
   277     0E15                     	;# 
   278     0E17                     	;# 
   279     0E20                     	;# 
   280     0E21                     	;# 
   281     0E22                     	;# 
   282     0E24                     	;# 
   283     0E25                     	;# 
   284     0E28                     	;# 
   285     0E29                     	;# 
   286     0E2A                     	;# 
   287     0E2B                     	;# 
   288     0E90                     	;# 
   289     0E91                     	;# 
   290     0E92                     	;# 
   291     0E93                     	;# 
   292     0E94                     	;# 
   293     0E95                     	;# 
   294     0E96                     	;# 
   295     0E97                     	;# 
   296     0E98                     	;# 
   297     0E99                     	;# 
   298     0E9A                     	;# 
   299     0E9B                     	;# 
   300     0E9C                     	;# 
   301     0E9D                     	;# 
   302     0E9E                     	;# 
   303     0E9F                     	;# 
   304     0EA0                     	;# 
   305     0EA1                     	;# 
   306     0EA2                     	;# 
   307     0EA3                     	;# 
   308     0EA4                     	;# 
   309     0EA5                     	;# 
   310     0EA6                     	;# 
   311     0EA7                     	;# 
   312     0EA8                     	;# 
   313     0EA9                     	;# 
   314     0EAA                     	;# 
   315     0EAB                     	;# 
   316     0EAC                     	;# 
   317     0EAD                     	;# 
   318     0EAE                     	;# 
   319     0EAF                     	;# 
   320     0EB0                     	;# 
   321     0EB1                     	;# 
   322     0EB2                     	;# 
   323     0F0F                     	;# 
   324     0F10                     	;# 
   325     0F11                     	;# 
   326     0F12                     	;# 
   327     0F13                     	;# 
   328     0F14                     	;# 
   329     0F15                     	;# 
   330     0F16                     	;# 
   331     0F17                     	;# 
   332     0F18                     	;# 
   333     0F19                     	;# 
   334     0F1A                     	;# 
   335     0F1B                     	;# 
   336     0F1C                     	;# 
   337     0F1D                     	;# 
   338     0F1E                     	;# 
   339     0F1F                     	;# 
   340     0F20                     	;# 
   341     0F21                     	;# 
   342     0F22                     	;# 
   343     0F23                     	;# 
   344     0F24                     	;# 
   345     0F25                     	;# 
   346     0F26                     	;# 
   347     0F27                     	;# 
   348     0F28                     	;# 
   349     0F29                     	;# 
   350     0F2A                     	;# 
   351     0F2B                     	;# 
   352     0F2C                     	;# 
   353     0F2D                     	;# 
   354     0F2E                     	;# 
   355     0F2F                     	;# 
   356     0F30                     	;# 
   357     0F31                     	;# 
   358     0F32                     	;# 
   359     0F33                     	;# 
   360     0F34                     	;# 
   361     0F35                     	;# 
   362     0F36                     	;# 
   363     0F37                     	;# 
   364     0FE4                     	;# 
   365     0FE5                     	;# 
   366     0FE6                     	;# 
   367     0FE7                     	;# 
   368     0FE8                     	;# 
   369     0FE9                     	;# 
   370     0FEA                     	;# 
   371     0FEB                     	;# 
   372     0FED                     	;# 
   373     0FEE                     	;# 
   374     0FEF                     	;# 
   375     0000                     	;# 
   376     0001                     	;# 
   377     0002                     	;# 
   378     0003                     	;# 
   379     0004                     	;# 
   380     0005                     	;# 
   381     0006                     	;# 
   382     0007                     	;# 
   383     0008                     	;# 
   384     0009                     	;# 
   385     000A                     	;# 
   386     000B                     	;# 
   387     000C                     	;# 
   388     000D                     	;# 
   389     000E                     	;# 
   390     000F                     	;# 
   391     0010                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0015                     	;# 
   396     0016                     	;# 
   397     0016                     	;# 
   398     0017                     	;# 
   399     0018                     	;# 
   400     0019                     	;# 
   401     001A                     	;# 
   402     001B                     	;# 
   403     001C                     	;# 
   404     008C                     	;# 
   405     008D                     	;# 
   406     008E                     	;# 
   407     008F                     	;# 
   408     0090                     	;# 
   409     0091                     	;# 
   410     0092                     	;# 
   411     0093                     	;# 
   412     0095                     	;# 
   413     0096                     	;# 
   414     0097                     	;# 
   415     0098                     	;# 
   416     0099                     	;# 
   417     009A                     	;# 
   418     009B                     	;# 
   419     009B                     	;# 
   420     009C                     	;# 
   421     009D                     	;# 
   422     009E                     	;# 
   423     009F                     	;# 
   424     010C                     	;# 
   425     010D                     	;# 
   426     010E                     	;# 
   427     010F                     	;# 
   428     0110                     	;# 
   429     0111                     	;# 
   430     0112                     	;# 
   431     0113                     	;# 
   432     0114                     	;# 
   433     0115                     	;# 
   434     0116                     	;# 
   435     0117                     	;# 
   436     0118                     	;# 
   437     0119                     	;# 
   438     011A                     	;# 
   439     011B                     	;# 
   440     011B                     	;# 
   441     011C                     	;# 
   442     018C                     	;# 
   443     018D                     	;# 
   444     018E                     	;# 
   445     018F                     	;# 
   446     0190                     	;# 
   447     0191                     	;# 
   448     0191                     	;# 
   449     0192                     	;# 
   450     0193                     	;# 
   451     0193                     	;# 
   452     0194                     	;# 
   453     0195                     	;# 
   454     0196                     	;# 
   455     0197                     	;# 
   456     0199                     	;# 
   457     0199                     	;# 
   458     0199                     	;# 
   459     019A                     	;# 
   460     019A                     	;# 
   461     019A                     	;# 
   462     019B                     	;# 
   463     019B                     	;# 
   464     019B                     	;# 
   465     019B                     	;# 
   466     019B                     	;# 
   467     019C                     	;# 
   468     019C                     	;# 
   469     019C                     	;# 
   470     019D                     	;# 
   471     019D                     	;# 
   472     019D                     	;# 
   473     019E                     	;# 
   474     019E                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     019F                     	;# 
   478     019F                     	;# 
   479     019F                     	;# 
   480     019F                     	;# 
   481     020C                     	;# 
   482     020D                     	;# 
   483     020E                     	;# 
   484     020F                     	;# 
   485     0210                     	;# 
   486     0211                     	;# 
   487     0211                     	;# 
   488     0212                     	;# 
   489     0212                     	;# 
   490     0213                     	;# 
   491     0213                     	;# 
   492     0214                     	;# 
   493     0214                     	;# 
   494     0215                     	;# 
   495     0215                     	;# 
   496     0215                     	;# 
   497     0215                     	;# 
   498     0216                     	;# 
   499     0216                     	;# 
   500     0217                     	;# 
   501     0217                     	;# 
   502     028C                     	;# 
   503     028D                     	;# 
   504     028E                     	;# 
   505     028F                     	;# 
   506     0290                     	;# 
   507     0291                     	;# 
   508     0291                     	;# 
   509     0292                     	;# 
   510     0293                     	;# 
   511     0293                     	;# 
   512     0298                     	;# 
   513     0298                     	;# 
   514     0299                     	;# 
   515     029A                     	;# 
   516     029A                     	;# 
   517     029E                     	;# 
   518     030C                     	;# 
   519     030D                     	;# 
   520     030E                     	;# 
   521     030F                     	;# 
   522     0310                     	;# 
   523     038C                     	;# 
   524     038D                     	;# 
   525     038E                     	;# 
   526     038F                     	;# 
   527     0390                     	;# 
   528     0391                     	;# 
   529     0392                     	;# 
   530     0393                     	;# 
   531     0394                     	;# 
   532     0395                     	;# 
   533     0396                     	;# 
   534     0397                     	;# 
   535     0398                     	;# 
   536     0399                     	;# 
   537     039D                     	;# 
   538     039E                     	;# 
   539     039F                     	;# 
   540     0415                     	;# 
   541     0416                     	;# 
   542     0417                     	;# 
   543     041C                     	;# 
   544     041D                     	;# 
   545     041E                     	;# 
   546     0498                     	;# 
   547     0498                     	;# 
   548     0499                     	;# 
   549     049A                     	;# 
   550     049B                     	;# 
   551     049B                     	;# 
   552     049C                     	;# 
   553     049D                     	;# 
   554     049E                     	;# 
   555     049F                     	;# 
   556     0511                     	;# 
   557     0515                     	;# 
   558     0617                     	;# 
   559     0618                     	;# 
   560     0619                     	;# 
   561     0619                     	;# 
   562     061A                     	;# 
   563     061B                     	;# 
   564     061C                     	;# 
   565     061C                     	;# 
   566     0691                     	;# 
   567     0692                     	;# 
   568     0693                     	;# 
   569     0694                     	;# 
   570     0695                     	;# 
   571     0696                     	;# 
   572     0697                     	;# 
   573     0698                     	;# 
   574     0699                     	;# 
   575     069A                     	;# 
   576     069B                     	;# 
   577     069C                     	;# 
   578     069D                     	;# 
   579     069E                     	;# 
   580     069F                     	;# 
   581     0E0F                     	;# 
   582     0E10                     	;# 
   583     0E11                     	;# 
   584     0E12                     	;# 
   585     0E13                     	;# 
   586     0E14                     	;# 
   587     0E15                     	;# 
   588     0E17                     	;# 
   589     0E20                     	;# 
   590     0E21                     	;# 
   591     0E22                     	;# 
   592     0E24                     	;# 
   593     0E25                     	;# 
   594     0E28                     	;# 
   595     0E29                     	;# 
   596     0E2A                     	;# 
   597     0E2B                     	;# 
   598     0E90                     	;# 
   599     0E91                     	;# 
   600     0E92                     	;# 
   601     0E93                     	;# 
   602     0E94                     	;# 
   603     0E95                     	;# 
   604     0E96                     	;# 
   605     0E97                     	;# 
   606     0E98                     	;# 
   607     0E99                     	;# 
   608     0E9A                     	;# 
   609     0E9B                     	;# 
   610     0E9C                     	;# 
   611     0E9D                     	;# 
   612     0E9E                     	;# 
   613     0E9F                     	;# 
   614     0EA0                     	;# 
   615     0EA1                     	;# 
   616     0EA2                     	;# 
   617     0EA3                     	;# 
   618     0EA4                     	;# 
   619     0EA5                     	;# 
   620     0EA6                     	;# 
   621     0EA7                     	;# 
   622     0EA8                     	;# 
   623     0EA9                     	;# 
   624     0EAA                     	;# 
   625     0EAB                     	;# 
   626     0EAC                     	;# 
   627     0EAD                     	;# 
   628     0EAE                     	;# 
   629     0EAF                     	;# 
   630     0EB0                     	;# 
   631     0EB1                     	;# 
   632     0EB2                     	;# 
   633     0F0F                     	;# 
   634     0F10                     	;# 
   635     0F11                     	;# 
   636     0F12                     	;# 
   637     0F13                     	;# 
   638     0F14                     	;# 
   639     0F15                     	;# 
   640     0F16                     	;# 
   641     0F17                     	;# 
   642     0F18                     	;# 
   643     0F19                     	;# 
   644     0F1A                     	;# 
   645     0F1B                     	;# 
   646     0F1C                     	;# 
   647     0F1D                     	;# 
   648     0F1E                     	;# 
   649     0F1F                     	;# 
   650     0F20                     	;# 
   651     0F21                     	;# 
   652     0F22                     	;# 
   653     0F23                     	;# 
   654     0F24                     	;# 
   655     0F25                     	;# 
   656     0F26                     	;# 
   657     0F27                     	;# 
   658     0F28                     	;# 
   659     0F29                     	;# 
   660     0F2A                     	;# 
   661     0F2B                     	;# 
   662     0F2C                     	;# 
   663     0F2D                     	;# 
   664     0F2E                     	;# 
   665     0F2F                     	;# 
   666     0F30                     	;# 
   667     0F31                     	;# 
   668     0F32                     	;# 
   669     0F33                     	;# 
   670     0F34                     	;# 
   671     0F35                     	;# 
   672     0F36                     	;# 
   673     0F37                     	;# 
   674     0FE4                     	;# 
   675     0FE5                     	;# 
   676     0FE6                     	;# 
   677     0FE7                     	;# 
   678     0FE8                     	;# 
   679     0FE9                     	;# 
   680     0FEA                     	;# 
   681     0FEB                     	;# 
   682     0FED                     	;# 
   683     0FEE                     	;# 
   684     0FEF                     	;# 
   685     0000                     	;# 
   686     0001                     	;# 
   687     0002                     	;# 
   688     0003                     	;# 
   689     0004                     	;# 
   690     0005                     	;# 
   691     0006                     	;# 
   692     0007                     	;# 
   693     0008                     	;# 
   694     0009                     	;# 
   695     000A                     	;# 
   696     000B                     	;# 
   697     000C                     	;# 
   698     000D                     	;# 
   699     000E                     	;# 
   700     000F                     	;# 
   701     0010                     	;# 
   702     0011                     	;# 
   703     0012                     	;# 
   704     0013                     	;# 
   705     0015                     	;# 
   706     0016                     	;# 
   707     0016                     	;# 
   708     0017                     	;# 
   709     0018                     	;# 
   710     0019                     	;# 
   711     001A                     	;# 
   712     001B                     	;# 
   713     001C                     	;# 
   714     008C                     	;# 
   715     008D                     	;# 
   716     008E                     	;# 
   717     008F                     	;# 
   718     0090                     	;# 
   719     0091                     	;# 
   720     0092                     	;# 
   721     0093                     	;# 
   722     0095                     	;# 
   723     0096                     	;# 
   724     0097                     	;# 
   725     0098                     	;# 
   726     0099                     	;# 
   727     009A                     	;# 
   728     009B                     	;# 
   729     009B                     	;# 
   730     009C                     	;# 
   731     009D                     	;# 
   732     009E                     	;# 
   733     009F                     	;# 
   734     010C                     	;# 
   735     010D                     	;# 
   736     010E                     	;# 
   737     010F                     	;# 
   738     0110                     	;# 
   739     0111                     	;# 
   740     0112                     	;# 
   741     0113                     	;# 
   742     0114                     	;# 
   743     0115                     	;# 
   744     0116                     	;# 
   745     0117                     	;# 
   746     0118                     	;# 
   747     0119                     	;# 
   748     011A                     	;# 
   749     011B                     	;# 
   750     011B                     	;# 
   751     011C                     	;# 
   752     018C                     	;# 
   753     018D                     	;# 
   754     018E                     	;# 
   755     018F                     	;# 
   756     0190                     	;# 
   757     0191                     	;# 
   758     0191                     	;# 
   759     0192                     	;# 
   760     0193                     	;# 
   761     0193                     	;# 
   762     0194                     	;# 
   763     0195                     	;# 
   764     0196                     	;# 
   765     0197                     	;# 
   766     0199                     	;# 
   767     0199                     	;# 
   768     0199                     	;# 
   769     019A                     	;# 
   770     019A                     	;# 
   771     019A                     	;# 
   772     019B                     	;# 
   773     019B                     	;# 
   774     019B                     	;# 
   775     019B                     	;# 
   776     019B                     	;# 
   777     019C                     	;# 
   778     019C                     	;# 
   779     019C                     	;# 
   780     019D                     	;# 
   781     019D                     	;# 
   782     019D                     	;# 
   783     019E                     	;# 
   784     019E                     	;# 
   785     019E                     	;# 
   786     019F                     	;# 
   787     019F                     	;# 
   788     019F                     	;# 
   789     019F                     	;# 
   790     019F                     	;# 
   791     020C                     	;# 
   792     020D                     	;# 
   793     020E                     	;# 
   794     020F                     	;# 
   795     0210                     	;# 
   796     0211                     	;# 
   797     0211                     	;# 
   798     0212                     	;# 
   799     0212                     	;# 
   800     0213                     	;# 
   801     0213                     	;# 
   802     0214                     	;# 
   803     0214                     	;# 
   804     0215                     	;# 
   805     0215                     	;# 
   806     0215                     	;# 
   807     0215                     	;# 
   808     0216                     	;# 
   809     0216                     	;# 
   810     0217                     	;# 
   811     0217                     	;# 
   812     028C                     	;# 
   813     028D                     	;# 
   814     028E                     	;# 
   815     028F                     	;# 
   816     0290                     	;# 
   817     0291                     	;# 
   818     0291                     	;# 
   819     0292                     	;# 
   820     0293                     	;# 
   821     0293                     	;# 
   822     0298                     	;# 
   823     0298                     	;# 
   824     0299                     	;# 
   825     029A                     	;# 
   826     029A                     	;# 
   827     029E                     	;# 
   828     030C                     	;# 
   829     030D                     	;# 
   830     030E                     	;# 
   831     030F                     	;# 
   832     0310                     	;# 
   833     038C                     	;# 
   834     038D                     	;# 
   835     038E                     	;# 
   836     038F                     	;# 
   837     0390                     	;# 
   838     0391                     	;# 
   839     0392                     	;# 
   840     0393                     	;# 
   841     0394                     	;# 
   842     0395                     	;# 
   843     0396                     	;# 
   844     0397                     	;# 
   845     0398                     	;# 
   846     0399                     	;# 
   847     039D                     	;# 
   848     039E                     	;# 
   849     039F                     	;# 
   850     0415                     	;# 
   851     0416                     	;# 
   852     0417                     	;# 
   853     041C                     	;# 
   854     041D                     	;# 
   855     041E                     	;# 
   856     0498                     	;# 
   857     0498                     	;# 
   858     0499                     	;# 
   859     049A                     	;# 
   860     049B                     	;# 
   861     049B                     	;# 
   862     049C                     	;# 
   863     049D                     	;# 
   864     049E                     	;# 
   865     049F                     	;# 
   866     0511                     	;# 
   867     0515                     	;# 
   868     0617                     	;# 
   869     0618                     	;# 
   870     0619                     	;# 
   871     0619                     	;# 
   872     061A                     	;# 
   873     061B                     	;# 
   874     061C                     	;# 
   875     061C                     	;# 
   876     0691                     	;# 
   877     0692                     	;# 
   878     0693                     	;# 
   879     0694                     	;# 
   880     0695                     	;# 
   881     0696                     	;# 
   882     0697                     	;# 
   883     0698                     	;# 
   884     0699                     	;# 
   885     069A                     	;# 
   886     069B                     	;# 
   887     069C                     	;# 
   888     069D                     	;# 
   889     069E                     	;# 
   890     069F                     	;# 
   891     0E0F                     	;# 
   892     0E10                     	;# 
   893     0E11                     	;# 
   894     0E12                     	;# 
   895     0E13                     	;# 
   896     0E14                     	;# 
   897     0E15                     	;# 
   898     0E17                     	;# 
   899     0E20                     	;# 
   900     0E21                     	;# 
   901     0E22                     	;# 
   902     0E24                     	;# 
   903     0E25                     	;# 
   904     0E28                     	;# 
   905     0E29                     	;# 
   906     0E2A                     	;# 
   907     0E2B                     	;# 
   908     0E90                     	;# 
   909     0E91                     	;# 
   910     0E92                     	;# 
   911     0E93                     	;# 
   912     0E94                     	;# 
   913     0E95                     	;# 
   914     0E96                     	;# 
   915     0E97                     	;# 
   916     0E98                     	;# 
   917     0E99                     	;# 
   918     0E9A                     	;# 
   919     0E9B                     	;# 
   920     0E9C                     	;# 
   921     0E9D                     	;# 
   922     0E9E                     	;# 
   923     0E9F                     	;# 
   924     0EA0                     	;# 
   925     0EA1                     	;# 
   926     0EA2                     	;# 
   927     0EA3                     	;# 
   928     0EA4                     	;# 
   929     0EA5                     	;# 
   930     0EA6                     	;# 
   931     0EA7                     	;# 
   932     0EA8                     	;# 
   933     0EA9                     	;# 
   934     0EAA                     	;# 
   935     0EAB                     	;# 
   936     0EAC                     	;# 
   937     0EAD                     	;# 
   938     0EAE                     	;# 
   939     0EAF                     	;# 
   940     0EB0                     	;# 
   941     0EB1                     	;# 
   942     0EB2                     	;# 
   943     0F0F                     	;# 
   944     0F10                     	;# 
   945     0F11                     	;# 
   946     0F12                     	;# 
   947     0F13                     	;# 
   948     0F14                     	;# 
   949     0F15                     	;# 
   950     0F16                     	;# 
   951     0F17                     	;# 
   952     0F18                     	;# 
   953     0F19                     	;# 
   954     0F1A                     	;# 
   955     0F1B                     	;# 
   956     0F1C                     	;# 
   957     0F1D                     	;# 
   958     0F1E                     	;# 
   959     0F1F                     	;# 
   960     0F20                     	;# 
   961     0F21                     	;# 
   962     0F22                     	;# 
   963     0F23                     	;# 
   964     0F24                     	;# 
   965     0F25                     	;# 
   966     0F26                     	;# 
   967     0F27                     	;# 
   968     0F28                     	;# 
   969     0F29                     	;# 
   970     0F2A                     	;# 
   971     0F2B                     	;# 
   972     0F2C                     	;# 
   973     0F2D                     	;# 
   974     0F2E                     	;# 
   975     0F2F                     	;# 
   976     0F30                     	;# 
   977     0F31                     	;# 
   978     0F32                     	;# 
   979     0F33                     	;# 
   980     0F34                     	;# 
   981     0F35                     	;# 
   982     0F36                     	;# 
   983     0F37                     	;# 
   984     0FE4                     	;# 
   985     0FE5                     	;# 
   986     0FE6                     	;# 
   987     0FE7                     	;# 
   988     0FE8                     	;# 
   989     0FE9                     	;# 
   990     0FEA                     	;# 
   991     0FEB                     	;# 
   992     0FED                     	;# 
   993     0FEE                     	;# 
   994     0FEF                     	;# 
   995     0016                     _TMR1	set	22
   996     000B                     _INTCONbits	set	11
   997     0018                     _T1CONbits	set	24
   998     0011                     _PIR1bits	set	17
   999     0091                     _PIE1bits	set	145
  1000     009C                     _ADRESH	set	156
  1001     009B                     _ADRESL	set	155
  1002     009D                     _ADCON0bits	set	157
  1003     009E                     _ADCON1bits	set	158
  1004     008C                     _TRISAbits	set	140
  1005     008D                     _TRISBbits	set	141
  1006     008F                     _TRISD	set	143
  1007     008F                     _TRISDbits	set	143
  1008     04CF                     _SPLLEN	set	1231
  1009     04CE                     _IRCF3	set	1230
  1010     04CD                     _IRCF2	set	1229
  1011     04CC                     _IRCF1	set	1228
  1012     04CB                     _IRCF0	set	1227
  1013     04C9                     _SCS1	set	1225
  1014     04C8                     _SCS0	set	1224
  1015     010F                     _LATDbits	set	271
  1016     018C                     _ANSELAbits	set	396
  1017     018D                     _ANSELBbits	set	397
  1018     018F                     _ANSELD	set	399
  1019     019A                     _TX1REG	set	410
  1020     0199                     _RC1REG	set	409
  1021     019D                     _RC1STAbits	set	413
  1022     019B                     _SPBRGL	set	411
  1023     0CF5                     _TXEN	set	3317
  1024     0CEC                     _CREN	set	3308
  1025     0CEF                     _SPEN	set	3311
  1026     0CF4                     _SYNC	set	3316
  1027     0CFB                     _BRG16	set	3323
  1028     0CF2                     _BRGH	set	3314
  1029     0E24                     _RXPPSbits	set	3620
  1030     0E0F                     _PPSLOCKbits	set	3599
  1031     0E0F                     _PPSLOCK	set	3599
  1032     0E9A                     _RB2PPSbits	set	3738
  1033                           
  1034                           	psect	stringtext1
  1035     0382                     __pstringtext1:
  1036     0382                     STR_2:
  1037     0382  344C               	retlw	76	;'L'
  1038     0383  3445               	retlw	69	;'E'
  1039     0384  3444               	retlw	68	;'D'
  1040     0385  3420               	retlw	32	;' '
  1041     0386  3474               	retlw	116	;'t'
  1042     0387  3475               	retlw	117	;'u'
  1043     0388  3472               	retlw	114	;'r'
  1044     0389  346E               	retlw	110	;'n'
  1045     038A  3465               	retlw	101	;'e'
  1046     038B  3464               	retlw	100	;'d'
  1047     038C  3420               	retlw	32	;' '
  1048     038D  346F               	retlw	111	;'o'
  1049     038E  3466               	retlw	102	;'f'
  1050     038F  3466               	retlw	102	;'f'
  1051     0390  340A               	retlw	10
  1052     0391  3400               	retlw	0
  1053                           
  1054                           	psect	stringtext2
  1055     03A2                     __pstringtext2:
  1056     03A2                     STR_1:
  1057     03A2  344C               	retlw	76	;'L'
  1058     03A3  3445               	retlw	69	;'E'
  1059     03A4  3444               	retlw	68	;'D'
  1060     03A5  3420               	retlw	32	;' '
  1061     03A6  3474               	retlw	116	;'t'
  1062     03A7  3475               	retlw	117	;'u'
  1063     03A8  3472               	retlw	114	;'r'
  1064     03A9  346E               	retlw	110	;'n'
  1065     03AA  3465               	retlw	101	;'e'
  1066     03AB  3464               	retlw	100	;'d'
  1067     03AC  3420               	retlw	32	;' '
  1068     03AD  346F               	retlw	111	;'o'
  1069     03AE  346E               	retlw	110	;'n'
  1070     03AF  340A               	retlw	10
  1071     03B0  3400               	retlw	0
  1072                           
  1073                           	psect	stringtext3
  1074     0000                     __pstringtext3:
  1075     0390                     
  1076                           	psect	cinit
  1077     0038                     start_initialization:	
  1078                           ; #config settings
  1079                           
  1080     0038                     __initialization:
  1081                           
  1082                           ; Clear objects allocated to BANK0
  1083     0038  0020               	movlb	0	; select bank0
  1084     0039  01CF               	clrf	__pbssBANK0& (0+127)
  1085     003A                     end_of_initialization:	
  1086                           ;End of C runtime variable initialization code
  1087                           
  1088     003A                     __end_of__initialization:
  1089     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1090     003B  0020               	movlb	0
  1091     003C  3182  2AC5         	ljmp	_main	;jump to C main() function
  1092                           
  1093                           	psect	bssBANK0
  1094     004F                     __pbssBANK0:
  1095     004F                     isr@count:
  1096     004F                     	ds	1
  1097                           
  1098                           	psect	cstackBANK1
  1099     00A0                     __pcstackBANK1:
  1100     00A0                     ?_EUSART_Initialize:
  1101     00A0                     EUSART_Initialize@baudrate:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104                           
  1105                           ; 4 bytes @ 0x0
  1106     00A0                     	ds	4
  1107     00A4                     ??_EUSART_Initialize:
  1108                           
  1109                           ; 1 bytes @ 0x4
  1110     00A4                     	ds	12
  1111     00B0                     EUSART_Initialize@x:
  1112                           
  1113                           ; 2 bytes @ 0x10
  1114     00B0                     	ds	2
  1115     00B2                     main@command:
  1116                           
  1117                           ; 1 bytes @ 0x12
  1118     00B2                     	ds	1
  1119                           
  1120                           	psect	cstackCOMMON
  1121     0070                     __pcstackCOMMON:
  1122     0070                     ?_EUSART_Read:
  1123     0070                     ?_EUSART_Write:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126     0070                     ?_internal_32:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129     0070                     ?_initMain:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132     0070                     ?_main:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135     0070                     ?_isr:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138     0070                     ?i1_EUSART_Write:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141     0070                     ??i1_EUSART_Write:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144     0070                     ?___wmul:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147     0070                     ?___awdiv:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150     0070                     ?___awmod:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153     0070                     i1EUSART_Write@txData:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156     0070                     ___wmul@multiplier:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159     0070                     ___awdiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162     0070                     ___awmod@divisor:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x0
  1167     0070                     	ds	1
  1168     0071                     ?i1_EUSART_Write_Text:
  1169     0071                     i1EUSART_Write_Text@text:	
  1170                           ; 1 bytes @ 0x1
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x1
  1174     0071                     	ds	1
  1175     0072                     ___wmul@multiplicand:
  1176     0072                     ___awdiv@dividend:	
  1177                           ; 2 bytes @ 0x2
  1178                           
  1179     0072                     ___awmod@dividend:	
  1180                           ; 2 bytes @ 0x2
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x2
  1184     0072                     	ds	1
  1185     0073                     ??i1_EUSART_Write_Text:
  1186                           
  1187                           ; 1 bytes @ 0x3
  1188     0073                     	ds	1
  1189     0074                     ??___wmul:
  1190     0074                     ??___awdiv:	
  1191                           ; 1 bytes @ 0x4
  1192                           
  1193     0074                     ??___awmod:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196     0074                     ___wmul@product:	
  1197                           ; 1 bytes @ 0x4
  1198                           
  1199     0074                     i1EUSART_Write_Text@i:	
  1200                           ; 2 bytes @ 0x4
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x4
  1204     0074                     	ds	1
  1205     0075                     ___awdiv@counter:
  1206     0075                     ___awmod@counter:	
  1207                           ; 1 bytes @ 0x5
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x5
  1211     0075                     	ds	1
  1212     0076                     ___awdiv@sign:
  1213     0076                     ___awmod@sign:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x6
  1218     0076                     	ds	1
  1219     0077                     ___awdiv@quotient:
  1220                           
  1221                           ; 2 bytes @ 0x7
  1222     0077                     	ds	2
  1223     0079                     ?_itoa:
  1224     0079                     itoa@d:	
  1225                           ; 1 bytes @ 0x9
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x9
  1229     0079                     	ds	2
  1230     007B                     ??_itoa:
  1231     007B                     ?_EUSART_Write_Integer:	
  1232                           ; 1 bytes @ 0xB
  1233                           
  1234     007B                     EUSART_Write_Integer@value_to_send:	
  1235                           ; 1 bytes @ 0xB
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0xB
  1239     007B                     	ds	2
  1240     007D                     ??_EUSART_Write_Integer:
  1241                           
  1242                           ; 1 bytes @ 0xD
  1243     007D                     	ds	1
  1244                           
  1245                           	psect	cstackBANK0
  1246     0020                     __pcstackBANK0:
  1247     0020                     itoa@num:
  1248                           
  1249                           ; 2 bytes @ 0x0
  1250     0020                     	ds	2
  1251     0022                     itoa@temp:
  1252                           
  1253                           ; 2 bytes @ 0x2
  1254     0022                     	ds	2
  1255     0024                     itoa@buf:
  1256                           
  1257                           ; 1 bytes @ 0x4
  1258     0024                     	ds	1
  1259     0025                     itoa@div:
  1260                           
  1261                           ; 2 bytes @ 0x5
  1262     0025                     	ds	2
  1263     0027                     EUSART_Write_Integer@buffer:
  1264                           
  1265                           ; 20 bytes @ 0x7
  1266     0027                     	ds	20
  1267     003B                     EUSART_Write_Integer@ptr:
  1268                           
  1269                           ; 1 bytes @ 0x1B
  1270     003B                     	ds	1
  1271     003C                     EUSART_Write_Integer@temp_ptr:
  1272                           
  1273                           ; 1 bytes @ 0x1C
  1274     003C                     	ds	1
  1275     003D                     ??_isr:
  1276                           
  1277                           ; 1 bytes @ 0x1D
  1278     003D                     	ds	1
  1279     003E                     isr@result:
  1280                           
  1281                           ; 2 bytes @ 0x1E
  1282     003E                     	ds	2
  1283     0040                     ??_EUSART_Read:
  1284     0040                     ??_EUSART_Write:	
  1285                           ; 1 bytes @ 0x20
  1286                           
  1287     0040                     ??_internal_32:	
  1288                           ; 1 bytes @ 0x20
  1289                           
  1290     0040                     ??_initMain:	
  1291                           ; 1 bytes @ 0x20
  1292                           
  1293     0040                     ?___aldiv:	
  1294                           ; 1 bytes @ 0x20
  1295                           
  1296     0040                     EUSART_Write@txData:	
  1297                           ; 4 bytes @ 0x20
  1298                           
  1299     0040                     ___aldiv@divisor:	
  1300                           ; 1 bytes @ 0x20
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x20
  1304     0040                     	ds	1
  1305     0041                     ?_EUSART_Write_Text:
  1306     0041                     EUSART_Write_Text@text:	
  1307                           ; 1 bytes @ 0x21
  1308                           
  1309                           
  1310                           ; 2 bytes @ 0x21
  1311     0041                     	ds	2
  1312     0043                     ??_EUSART_Write_Text:
  1313                           
  1314                           ; 1 bytes @ 0x23
  1315     0043                     	ds	1
  1316     0044                     EUSART_Write_Text@i:
  1317     0044                     ___aldiv@dividend:	
  1318                           ; 2 bytes @ 0x24
  1319                           
  1320                           
  1321                           ; 4 bytes @ 0x24
  1322     0044                     	ds	4
  1323     0048                     ??___aldiv:
  1324                           
  1325                           ; 1 bytes @ 0x28
  1326     0048                     	ds	1
  1327     0049                     ___aldiv@counter:
  1328                           
  1329                           ; 1 bytes @ 0x29
  1330     0049                     	ds	1
  1331     004A                     ___aldiv@sign:
  1332                           
  1333                           ; 1 bytes @ 0x2A
  1334     004A                     	ds	1
  1335     004B                     ___aldiv@quotient:
  1336                           
  1337                           ; 4 bytes @ 0x2B
  1338     004B                     	ds	4
  1339     004F                     ??_main:
  1340                           
  1341                           	psect	maintext
  1342     02C5                     __pmaintext:	
  1343                           ; 1 bytes @ 0x2F
  1344 ;;
  1345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1346 ;;
  1347 ;; *************** function _main *****************
  1348 ;; Defined at:
  1349 ;;		line 139 in file "main.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  command         1   18[BANK1 ] unsigned char 
  1354 ;;  result          2    0        int 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : B1F/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1365 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1367 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1368 ;;Total ram usage:        1 bytes
  1369 ;; Hardware stack levels required when called: 6
  1370 ;; This function calls:
  1371 ;;		_EUSART_Initialize
  1372 ;;		_EUSART_Read
  1373 ;;		_EUSART_Write_Text
  1374 ;;		_initMain
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380     02C5                     _main:	
  1381                           ;psect for function _main
  1382                           
  1383     02C5                     l1517:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1386                           
  1387                           
  1388                           ;main.c: 140:     initMain();
  1389     02C5  3182  227C  3182   	fcall	_initMain
  1390                           
  1391                           ;main.c: 143:     EUSART_Initialize(19200);
  1392     02C8  3000               	movlw	0
  1393     02C9  0021               	movlb	1	; select bank1
  1394     02CA  00A3               	movwf	(EUSART_Initialize@baudrate+3)^(0+128)
  1395     02CB  3000               	movlw	0
  1396     02CC  00A2               	movwf	(EUSART_Initialize@baudrate+2)^(0+128)
  1397     02CD  304B               	movlw	75
  1398     02CE  00A1               	movwf	(EUSART_Initialize@baudrate+1)^(0+128)
  1399     02CF  3000               	movlw	0
  1400     02D0  00A0               	movwf	EUSART_Initialize@baudrate^(0+128)
  1401     02D1  3181  2167  3182   	fcall	_EUSART_Initialize
  1402     02D4                     l1519:
  1403                           
  1404                           ;main.c: 149:     {;main.c: 151:       if (PIR1bits.RCIF)
  1405     02D4  0020               	movlb	0	; select bank0
  1406     02D5  1E91               	btfss	17,5	;volatile
  1407     02D6  2AD8               	goto	u1201
  1408     02D7  2AD9               	goto	u1200
  1409     02D8                     u1201:
  1410     02D8  2AD4               	goto	l1519
  1411     02D9                     u1200:
  1412     02D9                     l1521:
  1413                           
  1414                           ;main.c: 152:         {;main.c: 153:          char command = EUSART_Read();
  1415     02D9  3183  2392  3182   	fcall	_EUSART_Read
  1416     02DC  0021               	movlb	1	; select bank1
  1417     02DD  00B2               	movwf	main@command^(0+128)
  1418     02DE                     l1523:
  1419                           
  1420                           ;main.c: 154:          if (command == '1') {
  1421     02DE  3031               	movlw	49
  1422     02DF  0632               	xorwf	main@command^(0+128),w
  1423     02E0  1D03               	btfss	3,2
  1424     02E1  2AE3               	goto	u1211
  1425     02E2  2AE4               	goto	u1210
  1426     02E3                     u1211:
  1427     02E3  2AEF               	goto	l1529
  1428     02E4                     u1210:
  1429     02E4                     l1525:
  1430                           
  1431                           ;main.c: 155:             LATDbits.LATD1 = 1;
  1432     02E4  0022               	movlb	2	; select bank2
  1433     02E5  148F               	bsf	15,1	;volatile
  1434     02E6                     l1527:
  1435                           
  1436                           ;main.c: 156:             EUSART_Write_Text("LED turned on\n");
  1437     02E6  30A2               	movlw	low (STR_1| (0+32768))
  1438     02E7  0020               	movlb	0	; select bank0
  1439     02E8  00C1               	movwf	EUSART_Write_Text@text
  1440     02E9  3083               	movlw	high (STR_1| (0+32768))
  1441     02EA  00C2               	movwf	EUSART_Write_Text@text+1
  1442     02EB  3183  2327  3182   	fcall	_EUSART_Write_Text
  1443                           
  1444                           ;main.c: 157:          } else if (command == '0') {
  1445     02EE  2AD4               	goto	l1519
  1446     02EF                     l1529:
  1447     02EF  3030               	movlw	48
  1448     02F0  0632               	xorwf	main@command^(0+128),w
  1449     02F1  1D03               	btfss	3,2
  1450     02F2  2AF4               	goto	u1221
  1451     02F3  2AF5               	goto	u1220
  1452     02F4                     u1221:
  1453     02F4  2B00               	goto	l164
  1454     02F5                     u1220:
  1455     02F5                     l1531:
  1456                           
  1457                           ;main.c: 158:             LATDbits.LATD1 = 0;
  1458     02F5  0022               	movlb	2	; select bank2
  1459     02F6  108F               	bcf	15,1	;volatile
  1460     02F7                     l1533:
  1461                           
  1462                           ;main.c: 159:             EUSART_Write_Text("LED turned off\n");
  1463     02F7  3082               	movlw	low (STR_2| (0+32768))
  1464     02F8  0020               	movlb	0	; select bank0
  1465     02F9  00C1               	movwf	EUSART_Write_Text@text
  1466     02FA  3083               	movlw	high (STR_2| (0+32768))
  1467     02FB  00C2               	movwf	EUSART_Write_Text@text+1
  1468     02FC  3183  2327  3182   	fcall	_EUSART_Write_Text
  1469     02FF  2AD4               	goto	l1519
  1470     0300                     l164:	
  1471                           ;main.c: 161:       }
  1472                           
  1473     0300  2AD4               	goto	l1519
  1474     0301  3180  2836         	ljmp	start
  1475     0303                     __end_of_main:
  1476                           
  1477                           	psect	text1
  1478     027C                     __ptext1:	
  1479 ;; *************** function _initMain *****************
  1480 ;; Defined at:
  1481 ;;		line 44 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 5
  1502 ;; This function calls:
  1503 ;;		_internal_32
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509     027C                     _initMain:	
  1510                           ;psect for function _initMain
  1511                           
  1512     027C                     l1447:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1515                           
  1516                           
  1517                           ;main.c: 47:     internal_32();
  1518     027C  3183  23C5  3182   	fcall	_internal_32
  1519     027F                     l1449:
  1520                           
  1521                           ;main.c: 50:     _delay((unsigned long)((10)*(32000000/4000.0)));
  1522     027F  3068               	movlw	104
  1523     0280  0020               	movlb	0	; select bank0
  1524     0281  00C0               	movwf	??_initMain
  1525     0282  30E4               	movlw	228
  1526     0283                     u1237:
  1527     0283  0B89               	decfsz	9,f
  1528     0284  2A83               	goto	u1237
  1529     0285  0BC0               	decfsz	??_initMain,f
  1530     0286  2A83               	goto	u1237
  1531     0287  0000               	nop
  1532     0288                     l1451:
  1533                           
  1534                           ;main.c: 53:     TRISDbits.TRISD1 = 0;
  1535     0288  0021               	movlb	1	; select bank1
  1536     0289  108F               	bcf	15,1	;volatile
  1537     028A                     l1453:
  1538                           
  1539                           ;main.c: 56:     LATDbits.LATD1 = 0;
  1540     028A  0022               	movlb	2	; select bank2
  1541     028B  108F               	bcf	15,1	;volatile
  1542     028C                     l1455:
  1543                           
  1544                           ;main.c: 59:     TRISD = 0;
  1545     028C  0021               	movlb	1	; select bank1
  1546     028D  018F               	clrf	15	;volatile
  1547     028E                     l1457:
  1548                           
  1549                           ;main.c: 60:     ANSELD = 0;
  1550     028E  0023               	movlb	3	; select bank3
  1551     028F  018F               	clrf	15	;volatile
  1552     0290                     l1459:
  1553                           
  1554                           ;main.c: 62:     TRISBbits.TRISB2 = 0;
  1555     0290  0021               	movlb	1	; select bank1
  1556     0291  110D               	bcf	13,2	;volatile
  1557     0292                     l1461:
  1558                           
  1559                           ;main.c: 63:     ANSELBbits.ANSB2 = 0;
  1560     0292  0023               	movlb	3	; select bank3
  1561     0293  110D               	bcf	13,2	;volatile
  1562     0294                     l1463:
  1563                           
  1564                           ;main.c: 68:     PPSLOCK = 0x55;
  1565     0294  3055               	movlw	85
  1566     0295  003C               	movlb	28	; select bank28
  1567     0296  008F               	movwf	15	;volsfr
  1568     0297                     l1465:
  1569                           
  1570                           ;main.c: 69:     PPSLOCK = 0xAA;
  1571     0297  30AA               	movlw	170
  1572     0298  008F               	movwf	15	;volsfr
  1573     0299                     l1467:
  1574                           
  1575                           ;main.c: 70:     PPSLOCKbits.PPSLOCKED = 0x00;
  1576     0299  100F               	bcf	15,0	;volsfr
  1577     029A                     l1469:
  1578                           
  1579                           ;main.c: 72:     RB2PPSbits.RB2PPS = 0x14;
  1580     029A  003D               	movlb	29	; select bank29
  1581     029B  081A               	movf	26,w	;volatile
  1582     029C  39E0               	andlw	-32
  1583     029D  3814               	iorlw	20
  1584     029E  009A               	movwf	26	;volatile
  1585     029F                     l1471:
  1586                           
  1587                           ;main.c: 73:     RXPPSbits.RXPPS = 0x0B;
  1588     029F  003C               	movlb	28	; select bank28
  1589     02A0  0824               	movf	36,w	;volatile
  1590     02A1  39E0               	andlw	-32
  1591     02A2  380B               	iorlw	11
  1592     02A3  00A4               	movwf	36	;volatile
  1593     02A4                     l1473:
  1594                           
  1595                           ;main.c: 75:     PPSLOCK = 0x55;
  1596     02A4  3055               	movlw	85
  1597     02A5  008F               	movwf	15	;volsfr
  1598     02A6                     l1475:
  1599                           
  1600                           ;main.c: 76:     PPSLOCK = 0xAA;
  1601     02A6  30AA               	movlw	170
  1602     02A7  008F               	movwf	15	;volsfr
  1603     02A8                     l1477:
  1604                           
  1605                           ;main.c: 77:     PPSLOCKbits.PPSLOCKED = 0x01;
  1606     02A8  140F               	bsf	15,0	;volsfr
  1607     02A9                     l1479:
  1608                           
  1609                           ;main.c: 85:     TRISAbits.TRISA0 = 1;
  1610     02A9  0021               	movlb	1	; select bank1
  1611     02AA  140C               	bsf	12,0	;volatile
  1612     02AB                     l1481:
  1613                           
  1614                           ;main.c: 88:     ANSELAbits.ANSA0 = 1;
  1615     02AB  0023               	movlb	3	; select bank3
  1616     02AC  140C               	bsf	12,0	;volatile
  1617     02AD                     l1483:
  1618                           
  1619                           ;main.c: 91:     ADCON1bits.ADCS = 0b010;
  1620     02AD  0021               	movlb	1	; select bank1
  1621     02AE  081E               	movf	30,w	;volatile
  1622     02AF  398F               	andlw	-113
  1623     02B0  3820               	iorlw	32
  1624     02B1  009E               	movwf	30	;volatile
  1625     02B2                     l1485:
  1626                           
  1627                           ;main.c: 94:     ADCON1bits.ADFM = 1;
  1628     02B2  179E               	bsf	30,7	;volatile
  1629     02B3                     l1487:
  1630                           
  1631                           ;main.c: 97:     ADCON1bits.ADNREF = 0;
  1632     02B3  111E               	bcf	30,2	;volatile
  1633     02B4                     l1489:
  1634                           
  1635                           ;main.c: 100:     ADCON1bits.ADPREF = 0b00;
  1636     02B4  30FC               	movlw	-4
  1637     02B5  059E               	andwf	30,f	;volatile
  1638     02B6                     l1491:
  1639                           
  1640                           ;main.c: 103:     ADCON0bits.CHS = 0b00000;
  1641     02B6  3083               	movlw	-125
  1642     02B7  059D               	andwf	29,f	;volatile
  1643     02B8                     l1493:
  1644                           
  1645                           ;main.c: 106:     ADRESL = 0;
  1646     02B8  019B               	clrf	27	;volatile
  1647     02B9                     l1495:
  1648                           
  1649                           ;main.c: 107:     ADRESH = 0;
  1650     02B9  019C               	clrf	28	;volatile
  1651     02BA                     l1497:
  1652                           
  1653                           ;main.c: 113:     T1CONbits.T1CKPS = 0b00;
  1654     02BA  30CF               	movlw	-49
  1655     02BB  0020               	movlb	0	; select bank0
  1656     02BC  0598               	andwf	24,f	;volatile
  1657     02BD                     l1499:
  1658                           
  1659                           ;main.c: 116:     TMR1 = 0;
  1660     02BD  0196               	clrf	22	;volatile
  1661     02BE  0197               	clrf	23	;volatile
  1662     02BF                     l1501:
  1663                           
  1664                           ;main.c: 119:     T1CONbits.TMR1ON = 1;
  1665     02BF  1418               	bsf	24,0	;volatile
  1666     02C0                     l1503:
  1667                           
  1668                           ;main.c: 122:     PIE1bits.TMR1IE = 1;
  1669     02C0  0021               	movlb	1	; select bank1
  1670     02C1  1411               	bsf	17,0	;volatile
  1671     02C2                     l1505:
  1672                           
  1673                           ;main.c: 125:     INTCONbits.PEIE = 1;
  1674     02C2  170B               	bsf	11,6	;volatile
  1675     02C3                     l1507:
  1676                           
  1677                           ;main.c: 128:     (INTCONbits.GIE = 1);
  1678     02C3  178B               	bsf	11,7	;volatile
  1679     02C4                     l158:
  1680     02C4  0008               	return
  1681     02C5                     __end_of_initMain:
  1682                           
  1683                           	psect	text2
  1684     03C5                     __ptext2:	
  1685 ;; *************** function _internal_32 *****************
  1686 ;; Defined at:
  1687 ;;		line 32 in file "PIC16F1719_Internal.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		None
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_initMain
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715     03C5                     _internal_32:	
  1716                           ;psect for function _internal_32
  1717                           
  1718     03C5                     l1371:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _internal_32: []
  1721                           
  1722                           
  1723                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  1724     03C5  0021               	movlb	1	; select bank1
  1725     03C6  1019               	bcf	25,0	;volatile
  1726                           
  1727                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  1728     03C7  1099               	bcf	25,1	;volatile
  1729                           
  1730                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  1731     03C8  1199               	bcf	25,3	;volatile
  1732                           
  1733                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  1734     03C9  1619               	bsf	25,4	;volatile
  1735                           
  1736                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  1737     03CA  1699               	bsf	25,5	;volatile
  1738                           
  1739                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  1740     03CB  1719               	bsf	25,6	;volatile
  1741                           
  1742                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  1743     03CC  1799               	bsf	25,7	;volatile
  1744     03CD                     l83:
  1745     03CD  0008               	return
  1746     03CE                     __end_of_internal_32:
  1747                           
  1748                           	psect	text3
  1749     0327                     __ptext3:	
  1750 ;; *************** function _EUSART_Write_Text *****************
  1751 ;; Defined at:
  1752 ;;		line 127 in file "EUSART.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  text            2   33[BANK0 ] PTR unsigned char 
  1755 ;;		 -> STR_3(2), STR_2(16), STR_1(15), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  i               2   36[BANK0 ] int 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        5 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 5
  1774 ;; This function calls:
  1775 ;;		_EUSART_Write
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781     0327                     _EUSART_Write_Text:	
  1782                           ;psect for function _EUSART_Write_Text
  1783                           
  1784     0327                     l1439:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1787                           
  1788                           
  1789                           ;EUSART.c: 127: void EUSART_Write_Text(char *text);EUSART.c: 128: {;EUSART.c: 129:   int
      +                           i;;EUSART.c: 130:   for(i=0;text[i]!='\0';i++)
  1790     0327  0020               	movlb	0	; select bank0
  1791     0328  01C4               	clrf	EUSART_Write_Text@i
  1792     0329  01C5               	clrf	EUSART_Write_Text@i+1
  1793     032A  2B3A               	goto	l1445
  1794     032B                     l1441:
  1795                           
  1796                           ;EUSART.c: 131:    EUSART_Write(text[i]);
  1797     032B  0841               	movf	EUSART_Write_Text@text,w
  1798     032C  0744               	addwf	EUSART_Write_Text@i,w
  1799     032D  0084               	movwf	4
  1800     032E  0842               	movf	EUSART_Write_Text@text+1,w
  1801     032F  3D45               	addwfc	EUSART_Write_Text@i+1,w
  1802     0330  0085               	movwf	5
  1803     0331  0800               	movf	0,w	;code access
  1804     0332  3183  23B1  3183   	fcall	_EUSART_Write
  1805     0335                     l1443:
  1806     0335  3001               	movlw	1
  1807     0336  0020               	movlb	0	; select bank0
  1808     0337  07C4               	addwf	EUSART_Write_Text@i,f
  1809     0338  3000               	movlw	0
  1810     0339  3DC5               	addwfc	EUSART_Write_Text@i+1,f
  1811     033A                     l1445:
  1812     033A  0841               	movf	EUSART_Write_Text@text,w
  1813     033B  0744               	addwf	EUSART_Write_Text@i,w
  1814     033C  0084               	movwf	4
  1815     033D  0842               	movf	EUSART_Write_Text@text+1,w
  1816     033E  3D45               	addwfc	EUSART_Write_Text@i+1,w
  1817     033F  0085               	movwf	5
  1818     0340  0012               	moviw fsr0++
  1819     0341  1D03               	btfss	3,2
  1820     0342  2B44               	goto	u1181
  1821     0343  2B45               	goto	u1180
  1822     0344                     u1181:
  1823     0344  2B2B               	goto	l1441
  1824     0345                     u1180:
  1825     0345                     l50:
  1826     0345  0008               	return
  1827     0346                     __end_of_EUSART_Write_Text:
  1828                           
  1829                           	psect	text4
  1830     03B1                     __ptext4:	
  1831 ;; *************** function _EUSART_Write *****************
  1832 ;; Defined at:
  1833 ;;		line 108 in file "EUSART.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  txData          1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  txData          1   32[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1851 ;;Total ram usage:        1 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 4
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_EUSART_Write_Text
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861     03B1                     _EUSART_Write:	
  1862                           ;psect for function _EUSART_Write
  1863                           
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _EUSART_Write: [wreg]
  1867                           ;EUSART_Write@txData stored from wreg
  1868     03B1  0020               	movlb	0	; select bank0
  1869     03B2  00C0               	movwf	EUSART_Write@txData
  1870     03B3                     l1367:
  1871     03B3                     l41:	
  1872                           ;EUSART.c: 111:     {;EUSART.c: 112:     }
  1873                           
  1874                           
  1875                           ;EUSART.c: 110:     while(0 == PIR1bits.TXIF)
  1876     03B3  1E11               	btfss	17,4	;volatile
  1877     03B4  2BB6               	goto	u1031
  1878     03B5  2BB7               	goto	u1030
  1879     03B6                     u1031:
  1880     03B6  2BB3               	goto	l41
  1881     03B7                     u1030:
  1882     03B7                     l1369:
  1883                           
  1884                           ;EUSART.c: 114:     TX1REG = txData;
  1885     03B7  0840               	movf	EUSART_Write@txData,w
  1886     03B8  0023               	movlb	3	; select bank3
  1887     03B9  009A               	movwf	26	;volatile
  1888     03BA                     l44:
  1889     03BA  0008               	return
  1890     03BB                     __end_of_EUSART_Write:
  1891                           
  1892                           	psect	text5
  1893     0392                     __ptext5:	
  1894 ;; *************** function _EUSART_Read *****************
  1895 ;; Defined at:
  1896 ;;		line 62 in file "EUSART.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      unsigned char 
  1903 ;; Registers used:
  1904 ;;		wreg
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 4
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_EUSART_Read_Text
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     0392                     _EUSART_Read:	
  1926                           ;psect for function _EUSART_Read
  1927                           
  1928     0392                     l1431:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _EUSART_Read: [wreg]
  1931                           
  1932                           
  1933                           ;EUSART.c: 65:    RC1STAbits.SREN = 1;
  1934     0392  0023               	movlb	3	; select bank3
  1935     0393  169D               	bsf	29,5	;volatile
  1936     0394                     l28:	
  1937                           ;EUSART.c: 67:     {;EUSART.c: 68:     }
  1938                           
  1939                           
  1940                           ;EUSART.c: 66:     while(!PIR1bits.RCIF)
  1941     0394  0020               	movlb	0	; select bank0
  1942     0395  1E91               	btfss	17,5	;volatile
  1943     0396  2B98               	goto	u1161
  1944     0397  2B99               	goto	u1160
  1945     0398                     u1161:
  1946     0398  2B94               	goto	l28
  1947     0399                     u1160:
  1948     0399                     l30:
  1949                           
  1950                           ;EUSART.c: 70:     if(1 == RC1STAbits.OERR)
  1951     0399  0023               	movlb	3	; select bank3
  1952     039A  1C9D               	btfss	29,1	;volatile
  1953     039B  2B9D               	goto	u1171
  1954     039C  2B9E               	goto	u1170
  1955     039D                     u1171:
  1956     039D  2BA0               	goto	l1435
  1957     039E                     u1170:
  1958     039E                     l1433:
  1959                           
  1960                           ;EUSART.c: 71:     {;EUSART.c: 74:         RC1STAbits.SPEN = 0;
  1961     039E  139D               	bcf	29,7	;volatile
  1962                           
  1963                           ;EUSART.c: 75:         RC1STAbits.SPEN = 1;
  1964     039F  179D               	bsf	29,7	;volatile
  1965     03A0                     l1435:
  1966                           
  1967                           ;EUSART.c: 78:     return RC1REG;
  1968     03A0  0819               	movf	25,w	;volatile
  1969     03A1                     l32:
  1970     03A1  0008               	return
  1971     03A2                     __end_of_EUSART_Read:
  1972                           
  1973                           	psect	text6
  1974     0167                     __ptext6:	
  1975 ;; *************** function _EUSART_Initialize *****************
  1976 ;; Defined at:
  1977 ;;		line 36 in file "EUSART.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  baudrate        4    0[BANK1 ] const long 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  x               2   16[BANK1 ] unsigned int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      unsigned char 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1991 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1994 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1995 ;;Total ram usage:       18 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 5
  1998 ;; This function calls:
  1999 ;;		___aldiv
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005     0167                     _EUSART_Initialize:	
  2006                           ;psect for function _EUSART_Initialize
  2007                           
  2008     0167                     l1413:	
  2009                           ;incstack = 0
  2010                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2011                           
  2012                           
  2013                           ;EUSART.c: 36: char EUSART_Initialize(const long int baudrate);EUSART.c: 37: {;EUSART.c:
      +                           38:     unsigned int x;;EUSART.c: 39:  x = (32000000 - baudrate*64)/(baudrate*64);
  2014     0167  0021               	movlb	1	; select bank1
  2015     0168  0820               	movf	EUSART_Initialize@baudrate^(0+128),w
  2016     0169  00A4               	movwf	??_EUSART_Initialize^(0+128)
  2017     016A  0821               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  2018     016B  00A5               	movwf	(??_EUSART_Initialize^(0+128)+1)
  2019     016C  0822               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  2020     016D  00A6               	movwf	(??_EUSART_Initialize^(0+128)+2)
  2021     016E  0823               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  2022     016F  00A7               	movwf	(??_EUSART_Initialize^(0+128)+3)
  2023     0170  3006               	movlw	6
  2024     0171                     u1145:
  2025     0171  35A4               	lslf	??_EUSART_Initialize^(0+128),f
  2026     0172  0DA5               	rlf	(??_EUSART_Initialize^(0+128)+1),f
  2027     0173  0DA6               	rlf	(??_EUSART_Initialize^(0+128)+2),f
  2028     0174  0DA7               	rlf	(??_EUSART_Initialize^(0+128)+3),f
  2029     0175                     u1140:
  2030     0175  0B89               	decfsz	9,f
  2031     0176  2971               	goto	u1145
  2032     0177  0827               	movf	(??_EUSART_Initialize+3)^(0+128),w
  2033     0178  0020               	movlb	0	; select bank0
  2034     0179  00C3               	movwf	___aldiv@divisor+3
  2035     017A  0021               	movlb	1	; select bank1
  2036     017B  0826               	movf	(??_EUSART_Initialize+2)^(0+128),w
  2037     017C  0020               	movlb	0	; select bank0
  2038     017D  00C2               	movwf	___aldiv@divisor+2
  2039     017E  0021               	movlb	1	; select bank1
  2040     017F  0825               	movf	(??_EUSART_Initialize+1)^(0+128),w
  2041     0180  0020               	movlb	0	; select bank0
  2042     0181  00C1               	movwf	___aldiv@divisor+1
  2043     0182  0021               	movlb	1	; select bank1
  2044     0183  0824               	movf	??_EUSART_Initialize^(0+128),w
  2045     0184  0020               	movlb	0	; select bank0
  2046     0185  00C0               	movwf	___aldiv@divisor
  2047     0186  0021               	movlb	1	; select bank1
  2048     0187  0820               	movf	EUSART_Initialize@baudrate^(0+128),w
  2049     0188  00A8               	movwf	(??_EUSART_Initialize+4)^(0+128)
  2050     0189  0821               	movf	(EUSART_Initialize@baudrate+1)^(0+128),w
  2051     018A  00A9               	movwf	((??_EUSART_Initialize+4)^(0+128)+1)
  2052     018B  0822               	movf	(EUSART_Initialize@baudrate+2)^(0+128),w
  2053     018C  00AA               	movwf	((??_EUSART_Initialize+4)^(0+128)+2)
  2054     018D  0823               	movf	(EUSART_Initialize@baudrate+3)^(0+128),w
  2055     018E  00AB               	movwf	((??_EUSART_Initialize+4)^(0+128)+3)
  2056     018F  3006               	movlw	6
  2057     0190                     u1155:
  2058     0190  35A8               	lslf	(??_EUSART_Initialize+4)^(0+128),f
  2059     0191  0DA9               	rlf	((??_EUSART_Initialize+4)^(0+128)+1),f
  2060     0192  0DAA               	rlf	((??_EUSART_Initialize+4)^(0+128)+2),f
  2061     0193  0DAB               	rlf	((??_EUSART_Initialize+4)^(0+128)+3),f
  2062     0194                     u1150:
  2063     0194  0B89               	decfsz	9,f
  2064     0195  2990               	goto	u1155
  2065     0196  3000               	movlw	0
  2066     0197  00AC               	movwf	(??_EUSART_Initialize+8)^(0+128)
  2067     0198  3048               	movlw	72
  2068     0199  00AD               	movwf	((??_EUSART_Initialize+8)^(0+128)+1)
  2069     019A  30E8               	movlw	232
  2070     019B  00AE               	movwf	((??_EUSART_Initialize+8)^(0+128)+2)
  2071     019C  3001               	movlw	1
  2072     019D  00AF               	movwf	((??_EUSART_Initialize+8)^(0+128)+3)
  2073     019E  0828               	movf	(??_EUSART_Initialize+4)^(0+128),w
  2074     019F  02AC               	subwf	(??_EUSART_Initialize+8)^(0+128),f
  2075     01A0  0829               	movf	(??_EUSART_Initialize+5)^(0+128),w
  2076     01A1  3BAD               	subwfb	((??_EUSART_Initialize+8)^(0+128)+1),f
  2077     01A2  082A               	movf	(??_EUSART_Initialize+6)^(0+128),w
  2078     01A3  3BAE               	subwfb	((??_EUSART_Initialize+8)^(0+128)+2),f
  2079     01A4  082B               	movf	(??_EUSART_Initialize+7)^(0+128),w
  2080     01A5  3BAF               	subwfb	((??_EUSART_Initialize+8)^(0+128)+3),f
  2081     01A6  082F               	movf	(??_EUSART_Initialize+11)^(0+128),w
  2082     01A7  0020               	movlb	0	; select bank0
  2083     01A8  00C7               	movwf	___aldiv@dividend+3
  2084     01A9  0021               	movlb	1	; select bank1
  2085     01AA  082E               	movf	(??_EUSART_Initialize+10)^(0+128),w
  2086     01AB  0020               	movlb	0	; select bank0
  2087     01AC  00C6               	movwf	___aldiv@dividend+2
  2088     01AD  0021               	movlb	1	; select bank1
  2089     01AE  082D               	movf	(??_EUSART_Initialize+9)^(0+128),w
  2090     01AF  0020               	movlb	0	; select bank0
  2091     01B0  00C5               	movwf	___aldiv@dividend+1
  2092     01B1  0021               	movlb	1	; select bank1
  2093     01B2  082C               	movf	(??_EUSART_Initialize+8)^(0+128),w
  2094     01B3  0020               	movlb	0	; select bank0
  2095     01B4  00C4               	movwf	___aldiv@dividend
  2096     01B5  3180  20D7  3181   	fcall	___aldiv
  2097     01B8  0020               	movlb	0	; select bank0
  2098     01B9  0841               	movf	?___aldiv+1,w
  2099     01BA  0021               	movlb	1	; select bank1
  2100     01BB  00B1               	movwf	(EUSART_Initialize@x+1)^(0+128)
  2101     01BC  0020               	movlb	0	; select bank0
  2102     01BD  0840               	movf	?___aldiv,w
  2103     01BE  0021               	movlb	1	; select bank1
  2104     01BF  00B0               	movwf	EUSART_Initialize@x^(0+128)
  2105     01C0                     l1415:
  2106                           
  2107                           ;EUSART.c: 41:  SPBRGL = x;
  2108     01C0  0830               	movf	EUSART_Initialize@x^(0+128),w
  2109     01C1  0023               	movlb	3	; select bank3
  2110     01C2  009B               	movwf	27	;volatile
  2111     01C3                     l1417:
  2112                           
  2113                           ;EUSART.c: 42:     BRGH = 0;
  2114     01C3  111E               	bcf	30,2	;volatile
  2115     01C4                     l1419:
  2116                           
  2117                           ;EUSART.c: 43:     BRG16 = 0;
  2118     01C4  119F               	bcf	31,3	;volatile
  2119     01C5                     l1421:
  2120                           
  2121                           ;EUSART.c: 44:     SYNC = 0;
  2122     01C5  121E               	bcf	30,4	;volatile
  2123     01C6                     l1423:
  2124                           
  2125                           ;EUSART.c: 45:     SPEN = 1;
  2126     01C6  179D               	bsf	29,7	;volatile
  2127     01C7                     l1425:
  2128                           
  2129                           ;EUSART.c: 46:     CREN = 1;
  2130     01C7  161D               	bsf	29,4	;volatile
  2131     01C8                     l1427:
  2132                           
  2133                           ;EUSART.c: 47:     TXEN = 1;
  2134     01C8  169E               	bsf	30,5	;volatile
  2135     01C9                     l25:
  2136     01C9  0008               	return
  2137     01CA                     __end_of_EUSART_Initialize:
  2138                           
  2139                           	psect	text7
  2140     00D7                     __ptext7:	
  2141 ;; *************** function ___aldiv *****************
  2142 ;; Defined at:
  2143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  divisor         4   32[BANK0 ] long 
  2146 ;;  dividend        4   36[BANK0 ] long 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  quotient        4   43[BANK0 ] long 
  2149 ;;  sign            1   42[BANK0 ] unsigned char 
  2150 ;;  counter         1   41[BANK0 ] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  4   32[BANK0 ] long 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2160 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2161 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2163 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2164 ;;Total ram usage:       15 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 4
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_EUSART_Initialize
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     00D7                     ___aldiv:	
  2175                           ;psect for function ___aldiv
  2176                           
  2177     00D7                     l1373:	
  2178                           ;incstack = 0
  2179                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2180                           
  2181     00D7  0020               	movlb	0	; select bank0
  2182     00D8  01CA               	clrf	___aldiv@sign
  2183     00D9                     l1375:
  2184     00D9  1FC3               	btfss	___aldiv@divisor+3,7
  2185     00DA  28DC               	goto	u1041
  2186     00DB  28DD               	goto	u1040
  2187     00DC                     u1041:
  2188     00DC  28EA               	goto	l314
  2189     00DD                     u1040:
  2190     00DD                     l1377:
  2191     00DD  09C0               	comf	___aldiv@divisor,f
  2192     00DE  09C1               	comf	___aldiv@divisor+1,f
  2193     00DF  09C2               	comf	___aldiv@divisor+2,f
  2194     00E0  09C3               	comf	___aldiv@divisor+3,f
  2195     00E1  0AC0               	incf	___aldiv@divisor,f
  2196     00E2  1903               	skipnz
  2197     00E3  0AC1               	incf	___aldiv@divisor+1,f
  2198     00E4  1903               	skipnz
  2199     00E5  0AC2               	incf	___aldiv@divisor+2,f
  2200     00E6  1903               	skipnz
  2201     00E7  0AC3               	incf	___aldiv@divisor+3,f
  2202     00E8  01CA               	clrf	___aldiv@sign
  2203     00E9  0ACA               	incf	___aldiv@sign,f
  2204     00EA                     l314:
  2205     00EA  1FC7               	btfss	___aldiv@dividend+3,7
  2206     00EB  28ED               	goto	u1051
  2207     00EC  28EE               	goto	u1050
  2208     00ED                     u1051:
  2209     00ED  28FD               	goto	l1383
  2210     00EE                     u1050:
  2211     00EE                     l1379:
  2212     00EE  09C4               	comf	___aldiv@dividend,f
  2213     00EF  09C5               	comf	___aldiv@dividend+1,f
  2214     00F0  09C6               	comf	___aldiv@dividend+2,f
  2215     00F1  09C7               	comf	___aldiv@dividend+3,f
  2216     00F2  0AC4               	incf	___aldiv@dividend,f
  2217     00F3  1903               	skipnz
  2218     00F4  0AC5               	incf	___aldiv@dividend+1,f
  2219     00F5  1903               	skipnz
  2220     00F6  0AC6               	incf	___aldiv@dividend+2,f
  2221     00F7  1903               	skipnz
  2222     00F8  0AC7               	incf	___aldiv@dividend+3,f
  2223     00F9                     l1381:
  2224     00F9  3001               	movlw	1
  2225     00FA  00C8               	movwf	??___aldiv
  2226     00FB  0848               	movf	??___aldiv,w
  2227     00FC  06CA               	xorwf	___aldiv@sign,f
  2228     00FD                     l1383:
  2229     00FD  3000               	movlw	0
  2230     00FE  00CE               	movwf	___aldiv@quotient+3
  2231     00FF  3000               	movlw	0
  2232     0100  00CD               	movwf	___aldiv@quotient+2
  2233     0101  3000               	movlw	0
  2234     0102  00CC               	movwf	___aldiv@quotient+1
  2235     0103  3000               	movlw	0
  2236     0104  00CB               	movwf	___aldiv@quotient
  2237     0105                     l1385:
  2238     0105  0843               	movf	___aldiv@divisor+3,w
  2239     0106  0442               	iorwf	___aldiv@divisor+2,w
  2240     0107  0441               	iorwf	___aldiv@divisor+1,w
  2241     0108  0440               	iorwf	___aldiv@divisor,w
  2242     0109  1903               	skipnz
  2243     010A  290C               	goto	u1061
  2244     010B  290D               	goto	u1060
  2245     010C                     u1061:
  2246     010C  294E               	goto	l1405
  2247     010D                     u1060:
  2248     010D                     l1387:
  2249     010D  01C9               	clrf	___aldiv@counter
  2250     010E  0AC9               	incf	___aldiv@counter,f
  2251     010F  291B               	goto	l1391
  2252     0110                     l1389:
  2253     0110  3001               	movlw	1
  2254     0111                     u1075:
  2255     0111  35C0               	lslf	___aldiv@divisor,f
  2256     0112  0DC1               	rlf	___aldiv@divisor+1,f
  2257     0113  0DC2               	rlf	___aldiv@divisor+2,f
  2258     0114  0DC3               	rlf	___aldiv@divisor+3,f
  2259     0115  0B89               	decfsz	9,f
  2260     0116  2911               	goto	u1075
  2261     0117  3001               	movlw	1
  2262     0118  00C8               	movwf	??___aldiv
  2263     0119  0848               	movf	??___aldiv,w
  2264     011A  07C9               	addwf	___aldiv@counter,f
  2265     011B                     l1391:
  2266     011B  1FC3               	btfss	___aldiv@divisor+3,7
  2267     011C  291E               	goto	u1081
  2268     011D  291F               	goto	u1080
  2269     011E                     u1081:
  2270     011E  2910               	goto	l1389
  2271     011F                     u1080:
  2272     011F                     l1393:
  2273     011F  3001               	movlw	1
  2274     0120                     u1095:
  2275     0120  35CB               	lslf	___aldiv@quotient,f
  2276     0121  0DCC               	rlf	___aldiv@quotient+1,f
  2277     0122  0DCD               	rlf	___aldiv@quotient+2,f
  2278     0123  0DCE               	rlf	___aldiv@quotient+3,f
  2279     0124  0B89               	decfsz	9,f
  2280     0125  2920               	goto	u1095
  2281     0126                     l1395:
  2282     0126  0843               	movf	___aldiv@divisor+3,w
  2283     0127  0247               	subwf	___aldiv@dividend+3,w
  2284     0128  1D03               	skipz
  2285     0129  2934               	goto	u1105
  2286     012A  0842               	movf	___aldiv@divisor+2,w
  2287     012B  0246               	subwf	___aldiv@dividend+2,w
  2288     012C  1D03               	skipz
  2289     012D  2934               	goto	u1105
  2290     012E  0841               	movf	___aldiv@divisor+1,w
  2291     012F  0245               	subwf	___aldiv@dividend+1,w
  2292     0130  1D03               	skipz
  2293     0131  2934               	goto	u1105
  2294     0132  0840               	movf	___aldiv@divisor,w
  2295     0133  0244               	subwf	___aldiv@dividend,w
  2296     0134                     u1105:
  2297     0134  1C03               	skipc
  2298     0135  2937               	goto	u1101
  2299     0136  2938               	goto	u1100
  2300     0137                     u1101:
  2301     0137  2941               	goto	l1401
  2302     0138                     u1100:
  2303     0138                     l1397:
  2304     0138  0840               	movf	___aldiv@divisor,w
  2305     0139  02C4               	subwf	___aldiv@dividend,f
  2306     013A  0841               	movf	___aldiv@divisor+1,w
  2307     013B  3BC5               	subwfb	___aldiv@dividend+1,f
  2308     013C  0842               	movf	___aldiv@divisor+2,w
  2309     013D  3BC6               	subwfb	___aldiv@dividend+2,f
  2310     013E  0843               	movf	___aldiv@divisor+3,w
  2311     013F  3BC7               	subwfb	___aldiv@dividend+3,f
  2312     0140                     l1399:
  2313     0140  144B               	bsf	___aldiv@quotient,0
  2314     0141                     l1401:
  2315     0141  3001               	movlw	1
  2316     0142                     u1115:
  2317     0142  36C3               	lsrf	___aldiv@divisor+3,f
  2318     0143  0CC2               	rrf	___aldiv@divisor+2,f
  2319     0144  0CC1               	rrf	___aldiv@divisor+1,f
  2320     0145  0CC0               	rrf	___aldiv@divisor,f
  2321     0146  0B89               	decfsz	9,f
  2322     0147  2942               	goto	u1115
  2323     0148                     l1403:
  2324     0148  3001               	movlw	1
  2325     0149  02C9               	subwf	___aldiv@counter,f
  2326     014A  1D03               	btfss	3,2
  2327     014B  294D               	goto	u1121
  2328     014C  294E               	goto	u1120
  2329     014D                     u1121:
  2330     014D  291F               	goto	l1393
  2331     014E                     u1120:
  2332     014E                     l1405:
  2333     014E  084A               	movf	___aldiv@sign,w
  2334     014F  1903               	btfsc	3,2
  2335     0150  2952               	goto	u1131
  2336     0151  2953               	goto	u1130
  2337     0152                     u1131:
  2338     0152  295E               	goto	l1409
  2339     0153                     u1130:
  2340     0153                     l1407:
  2341     0153  09CB               	comf	___aldiv@quotient,f
  2342     0154  09CC               	comf	___aldiv@quotient+1,f
  2343     0155  09CD               	comf	___aldiv@quotient+2,f
  2344     0156  09CE               	comf	___aldiv@quotient+3,f
  2345     0157  0ACB               	incf	___aldiv@quotient,f
  2346     0158  1903               	skipnz
  2347     0159  0ACC               	incf	___aldiv@quotient+1,f
  2348     015A  1903               	skipnz
  2349     015B  0ACD               	incf	___aldiv@quotient+2,f
  2350     015C  1903               	skipnz
  2351     015D  0ACE               	incf	___aldiv@quotient+3,f
  2352     015E                     l1409:
  2353     015E  084E               	movf	___aldiv@quotient+3,w
  2354     015F  00C3               	movwf	?___aldiv+3
  2355     0160  084D               	movf	___aldiv@quotient+2,w
  2356     0161  00C2               	movwf	?___aldiv+2
  2357     0162  084C               	movf	___aldiv@quotient+1,w
  2358     0163  00C1               	movwf	?___aldiv+1
  2359     0164  084B               	movf	___aldiv@quotient,w
  2360     0165  00C0               	movwf	?___aldiv
  2361     0166                     l324:
  2362     0166  0008               	return
  2363     0167                     __end_of___aldiv:
  2364                           
  2365                           	psect	intentry
  2366     0004                     __pintentry:	
  2367 ;; *************** function _isr *****************
  2368 ;; Defined at:
  2369 ;;		line 176 in file "main.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  result          2   30[BANK0 ] int 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        3 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 3
  2390 ;; This function calls:
  2391 ;;		_EUSART_Write_Integer
  2392 ;;		i1_EUSART_Write_Text
  2393 ;; This function is called by:
  2394 ;;		Interrupt level 1
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398     0004                     _isr:
  2399                           
  2400                           ;incstack = 0
  2401     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2402                           
  2403                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2404     0005  3180               	pagesel	$
  2405     0006                     i1l1349:
  2406                           
  2407                           ;main.c: 177:     static uint8_t count = 0;;main.c: 179:     PIR1bits.TMR1IF = 0;
  2408     0006  0020               	movlb	0	; select bank0
  2409     0007  1011               	bcf	17,0	;volatile
  2410     0008                     i1l1351:
  2411                           
  2412                           ;main.c: 181:     count++;
  2413     0008  3001               	movlw	1
  2414     0009  00BD               	movwf	??_isr
  2415     000A  083D               	movf	??_isr,w
  2416     000B  07CF               	addwf	isr@count,f
  2417                           
  2418                           ;main.c: 184:     if (count == 122){
  2419     000C  307A               	movlw	122
  2420     000D  064F               	xorwf	isr@count,w
  2421     000E  1D03               	btfss	3,2
  2422     000F  2811               	goto	u101_21
  2423     0010  2812               	goto	u101_20
  2424     0011                     u101_21:
  2425     0011  2834               	goto	i1l181
  2426     0012                     u101_20:
  2427     0012                     i1l1353:
  2428                           
  2429                           ;main.c: 185:         count = 0;
  2430     0012  01CF               	clrf	isr@count
  2431     0013                     i1l1355:
  2432                           
  2433                           ;main.c: 188:         ADCON0bits.ADON = 1;
  2434     0013  0021               	movlb	1	; select bank1
  2435     0014  141D               	bsf	29,0	;volatile
  2436     0015                     i1l1357:
  2437                           
  2438                           ;main.c: 191:         _delay((unsigned long)((10)*(32000000/4000000.0)));
  2439     0015  301A               	movlw	26
  2440     0016                     u124_27:
  2441     0016  0B89               	decfsz	9,f
  2442     0017  2816               	goto	u124_27
  2443     0018  3200               	nop2
  2444     0019                     i1l1359:
  2445                           
  2446                           ;main.c: 192:         ADCON0bits.GO = 1;
  2447     0019  0021               	movlb	1	; select bank1
  2448     001A  149D               	bsf	29,1	;volatile
  2449     001B                     i1l178:	
  2450                           ;main.c: 193:         while (ADCON0bits.GO_nDONE);
  2451                           
  2452     001B  189D               	btfsc	29,1	;volatile
  2453     001C  281E               	goto	u102_21
  2454     001D  281F               	goto	u102_20
  2455     001E                     u102_21:
  2456     001E  281B               	goto	i1l178
  2457     001F                     u102_20:
  2458     001F                     i1l1361:
  2459                           
  2460                           ;main.c: 196:         int result = ((ADRESH<<8)+ADRESL);
  2461     001F  081C               	movf	28,w	;volatile
  2462     0020  0020               	movlb	0	; select bank0
  2463     0021  00BF               	movwf	isr@result+1
  2464     0022  0021               	movlb	1	; select bank1
  2465     0023  081B               	movf	27,w	;volatile
  2466     0024  0020               	movlb	0	; select bank0
  2467     0025  00BE               	movwf	isr@result
  2468     0026                     i1l1363:
  2469                           
  2470                           ;main.c: 198:         EUSART_Write_Integer(result);
  2471     0026  083F               	movf	isr@result+1,w
  2472     0027  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  2473     0028  083E               	movf	isr@result,w
  2474     0029  00FB               	movwf	EUSART_Write_Integer@value_to_send
  2475     002A  3183  2303  3180   	fcall	_EUSART_Write_Integer
  2476     002D                     i1l1365:
  2477                           
  2478                           ;main.c: 199:         EUSART_Write_Text("\n");
  2479     002D  3090               	movlw	low ((STR_2+14)| (0+32768))
  2480     002E  00F1               	movwf	i1EUSART_Write_Text@text
  2481     002F  3083               	movlw	high ((STR_2+14)| (0+32768))
  2482     0030  00F2               	movwf	i1EUSART_Write_Text@text+1
  2483     0031  3183  2365  3180   	fcall	i1_EUSART_Write_Text
  2484     0034                     i1l181:
  2485     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2486     0035  0009               	retfie
  2487     0036                     __end_of_isr:
  2488                           
  2489                           	psect	text9
  2490     0365                     __ptext9:	
  2491 ;; *************** function i1_EUSART_Write_Text *****************
  2492 ;; Defined at:
  2493 ;;		line 127 in file "EUSART.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  text            2    1[COMMON] PTR unsigned char 
  2496 ;;		 -> STR_3(2), STR_2(16), STR_1(15), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  i               2    4[COMMON] int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2511 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        5 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 1
  2515 ;; This function calls:
  2516 ;;		i1_EUSART_Write
  2517 ;; This function is called by:
  2518 ;;		_isr
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522     0365                     i1_EUSART_Write_Text:	
  2523                           ;psect for function i1_EUSART_Write_Text
  2524                           
  2525     0365                     i1l1315:	
  2526                           ;incstack = 0
  2527                           ; Regs used in i1_EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2528                           
  2529                           
  2530                           ;EUSART.c: 127: void EUSART_Write_Text(char *text);EUSART.c: 128: {;EUSART.c: 129:   int
      +                           i;;EUSART.c: 130:   for(i=0;text[i]!='\0';i++)
  2531     0365  01F4               	clrf	i1EUSART_Write_Text@i
  2532     0366  01F5               	clrf	i1EUSART_Write_Text@i+1
  2533     0367  2B76               	goto	i1l1321
  2534     0368                     i1l1317:
  2535                           
  2536                           ;EUSART.c: 131:    EUSART_Write(text[i]);
  2537     0368  0871               	movf	i1EUSART_Write_Text@text,w
  2538     0369  0774               	addwf	i1EUSART_Write_Text@i,w
  2539     036A  0084               	movwf	4
  2540     036B  0872               	movf	i1EUSART_Write_Text@text+1,w
  2541     036C  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
  2542     036D  0085               	movwf	5
  2543     036E  0800               	movf	0,w	;code access
  2544     036F  3183  23BB  3183   	fcall	i1_EUSART_Write
  2545     0372                     i1l1319:
  2546     0372  3001               	movlw	1
  2547     0373  07F4               	addwf	i1EUSART_Write_Text@i,f
  2548     0374  3000               	movlw	0
  2549     0375  3DF5               	addwfc	i1EUSART_Write_Text@i+1,f
  2550     0376                     i1l1321:
  2551     0376  0871               	movf	i1EUSART_Write_Text@text,w
  2552     0377  0774               	addwf	i1EUSART_Write_Text@i,w
  2553     0378  0084               	movwf	4
  2554     0379  0872               	movf	i1EUSART_Write_Text@text+1,w
  2555     037A  3D75               	addwfc	i1EUSART_Write_Text@i+1,w
  2556     037B  0085               	movwf	5
  2557     037C  0012               	moviw fsr0++
  2558     037D  1D03               	btfss	3,2
  2559     037E  2B80               	goto	u96_21
  2560     037F  2B81               	goto	u96_20
  2561     0380                     u96_21:
  2562     0380  2B68               	goto	i1l1317
  2563     0381                     u96_20:
  2564     0381                     i1l50:
  2565     0381  0008               	return
  2566     0382                     __end_ofi1_EUSART_Write_Text:
  2567                           
  2568                           	psect	text10
  2569     0303                     __ptext10:	
  2570 ;; *************** function _EUSART_Write_Integer *****************
  2571 ;; Defined at:
  2572 ;;		line 185 in file "EUSART.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  value_to_sen    2   11[COMMON] int 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  buffer         20    7[BANK0 ] unsigned char [20]
  2577 ;;  temp_ptr        1   28[BANK0 ] PTR unsigned char 
  2578 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2579 ;;  ptr             1   27[BANK0 ] PTR unsigned char 
  2580 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2591 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2593 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:       25 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 2
  2597 ;; This function calls:
  2598 ;;		_itoa
  2599 ;;		i1_EUSART_Write
  2600 ;; This function is called by:
  2601 ;;		_isr
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605     0303                     _EUSART_Write_Integer:	
  2606                           ;psect for function _EUSART_Write_Integer
  2607                           
  2608     0303                     i1l1241:	
  2609                           ;incstack = 0
  2610                           ; Regs used in _EUSART_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2611                           
  2612                           
  2613                           ;EUSART.c: 185: void EUSART_Write_Integer(int value_to_send);EUSART.c: 186: {;EUSART.c: 
      +                          187:     char buffer[20];;EUSART.c: 188:     char *ptr = buffer;
  2614     0303  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2615     0304  0020               	movlb	0	; select bank0
  2616     0305  00BB               	movwf	EUSART_Write_Integer@ptr
  2617     0306                     i1l1243:
  2618                           
  2619                           ;EUSART.c: 190:     itoa(&ptr, value_to_send);
  2620     0306  087C               	movf	EUSART_Write_Integer@value_to_send+1,w
  2621     0307  00FA               	movwf	itoa@d+1
  2622     0308  087B               	movf	EUSART_Write_Integer@value_to_send,w
  2623     0309  00F9               	movwf	itoa@d
  2624     030A  303B               	movlw	(low (EUSART_Write_Integer@ptr| 0))& (0+255)
  2625     030B  3180  203E  3183   	fcall	_itoa
  2626     030E                     i1l1245:
  2627                           
  2628                           ;EUSART.c: 193:     char *temp_ptr = buffer;
  2629     030E  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2630     030F  0020               	movlb	0	; select bank0
  2631     0310  00BC               	movwf	EUSART_Write_Integer@temp_ptr
  2632                           
  2633                           ;EUSART.c: 194:     while (*temp_ptr != '\0') {
  2634     0311  2B1E               	goto	i1l1251
  2635     0312                     i1l1247:
  2636                           
  2637                           ;EUSART.c: 195:         EUSART_Write(*temp_ptr++);
  2638     0312  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2639     0313  0086               	movwf	6
  2640     0314  0187               	clrf	7
  2641     0315  0801               	movf	1,w
  2642     0316  3183  23BB  3183   	fcall	i1_EUSART_Write
  2643     0319                     i1l1249:
  2644     0319  3001               	movlw	1
  2645     031A  00FD               	movwf	??_EUSART_Write_Integer
  2646     031B  087D               	movf	??_EUSART_Write_Integer,w
  2647     031C  0020               	movlb	0	; select bank0
  2648     031D  07BC               	addwf	EUSART_Write_Integer@temp_ptr,f
  2649     031E                     i1l1251:
  2650                           
  2651                           ;EUSART.c: 194:     while (*temp_ptr != '\0') {
  2652     031E  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2653     031F  0086               	movwf	6
  2654     0320  0187               	clrf	7
  2655     0321  0801               	movf	1,w
  2656     0322  1D03               	btfss	3,2
  2657     0323  2B25               	goto	u95_21
  2658     0324  2B26               	goto	u95_20
  2659     0325                     u95_21:
  2660     0325  2B12               	goto	i1l1247
  2661     0326                     u95_20:
  2662     0326                     i1l66:
  2663     0326  0008               	return
  2664     0327                     __end_of_EUSART_Write_Integer:
  2665                           
  2666                           	psect	text11
  2667     03BB                     __ptext11:	
  2668 ;; *************** function i1_EUSART_Write *****************
  2669 ;; Defined at:
  2670 ;;		line 108 in file "EUSART.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  txData          1    wreg     unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  txData          1    0[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        1 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_EUSART_Write_Integer
  2694 ;;		i1_EUSART_Write_Text
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698     03BB                     i1_EUSART_Write:	
  2699                           ;psect for function i1_EUSART_Write
  2700                           
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in i1_EUSART_Write: [wreg]
  2704                           ;i1EUSART_Write@txData stored from wreg
  2705     03BB  00F0               	movwf	i1EUSART_Write@txData
  2706     03BC                     i1l1203:
  2707     03BC                     i1l41:	
  2708                           ;EUSART.c: 111:     {;EUSART.c: 112:     }
  2709                           
  2710                           
  2711                           ;EUSART.c: 110:     while(0 == PIR1bits.TXIF)
  2712     03BC  0020               	movlb	0	; select bank0
  2713     03BD  1E11               	btfss	17,4	;volatile
  2714     03BE  2BC0               	goto	u89_21
  2715     03BF  2BC1               	goto	u89_20
  2716     03C0                     u89_21:
  2717     03C0  2BBC               	goto	i1l41
  2718     03C1                     u89_20:
  2719     03C1                     i1l1205:
  2720                           
  2721                           ;EUSART.c: 114:     TX1REG = txData;
  2722     03C1  0870               	movf	i1EUSART_Write@txData,w
  2723     03C2  0023               	movlb	3	; select bank3
  2724     03C3  009A               	movwf	26	;volatile
  2725     03C4                     i1l44:
  2726     03C4  0008               	return
  2727     03C5                     __end_ofi1_EUSART_Write:
  2728                           
  2729                           	psect	text12
  2730     003E                     __ptext12:	
  2731 ;; *************** function _itoa *****************
  2732 ;; Defined at:
  2733 ;;		line 149 in file "EUSART.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  buf             1    wreg     PTR PTR unsigned char 
  2736 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2737 ;;  d               2    9[COMMON] int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  buf             1    4[BANK0 ] PTR PTR unsigned char 
  2740 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2741 ;;  num             2    0[BANK0 ] int 
  2742 ;;  div             2    5[BANK0 ] int 
  2743 ;;  temp            2    2[BANK0 ] int 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        9 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 1
  2760 ;; This function calls:
  2761 ;;		___awdiv
  2762 ;;		___awmod
  2763 ;;		___wmul
  2764 ;; This function is called by:
  2765 ;;		_EUSART_Write_Integer
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769     003E                     _itoa:	
  2770                           ;psect for function _itoa
  2771                           
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _itoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2775                           ;itoa@buf stored from wreg
  2776     003E  0020               	movlb	0	; select bank0
  2777     003F  00A4               	movwf	itoa@buf
  2778     0040                     i1l1143:
  2779                           
  2780                           ;EUSART.c: 149: void itoa(char **buf, int d);EUSART.c: 150: {;EUSART.c: 151:     int div
      +                           = 1;
  2781     0040  3001               	movlw	1
  2782     0041  00A5               	movwf	itoa@div
  2783     0042  3000               	movlw	0
  2784     0043  00A6               	movwf	itoa@div+1
  2785                           
  2786                           ;EUSART.c: 152:     if (d < 0)
  2787     0044  1FFA               	btfss	itoa@d+1,7
  2788     0045  2847               	goto	u76_21
  2789     0046  2848               	goto	u76_20
  2790     0047                     u76_21:
  2791     0047  2856               	goto	i1l1149
  2792     0048                     u76_20:
  2793     0048                     i1l1145:
  2794                           
  2795                           ;EUSART.c: 153:     {;EUSART.c: 154:         *((*buf)++) = '-';
  2796     0048  0824               	movf	itoa@buf,w
  2797     0049  0086               	movwf	6
  2798     004A  0187               	clrf	7
  2799     004B  3F40               	moviw [0]fsr1
  2800     004C  0084               	movwf	4
  2801     004D  0185               	clrf	5
  2802     004E  0A81               	incf	1,f
  2803     004F  302D               	movlw	45
  2804     0050  0080               	movwf	0
  2805     0051                     i1l1147:
  2806                           
  2807                           ;EUSART.c: 155:         d = -d;
  2808     0051  09F9               	comf	itoa@d,f
  2809     0052  09FA               	comf	itoa@d+1,f
  2810     0053  0AF9               	incf	itoa@d,f
  2811     0054  1903               	skipnz
  2812     0055  0AFA               	incf	itoa@d+1,f
  2813     0056                     i1l1149:
  2814                           
  2815                           ;EUSART.c: 158:     int temp = d;
  2816     0056  087A               	movf	itoa@d+1,w
  2817     0057  00A3               	movwf	itoa@temp+1
  2818     0058  0879               	movf	itoa@d,w
  2819     0059  00A2               	movwf	itoa@temp
  2820                           
  2821                           ;EUSART.c: 159:     while (temp / 10)
  2822     005A  287C               	goto	i1l54
  2823     005B                     i1l1151:
  2824                           
  2825                           ;EUSART.c: 160:     {;EUSART.c: 161:         temp /= 10;
  2826     005B  300A               	movlw	10
  2827     005C  00F0               	movwf	___awdiv@divisor
  2828     005D  3000               	movlw	0
  2829     005E  00F1               	movwf	___awdiv@divisor+1
  2830     005F  0020               	movlb	0	; select bank0
  2831     0060  0823               	movf	itoa@temp+1,w
  2832     0061  00F3               	movwf	___awdiv@dividend+1
  2833     0062  0822               	movf	itoa@temp,w
  2834     0063  00F2               	movwf	___awdiv@dividend
  2835     0064  3181  21CA  3180   	fcall	___awdiv
  2836     0067  0871               	movf	?___awdiv+1,w
  2837     0068  0020               	movlb	0	; select bank0
  2838     0069  00A3               	movwf	itoa@temp+1
  2839     006A  0870               	movf	?___awdiv,w
  2840     006B  00A2               	movwf	itoa@temp
  2841                           
  2842                           ;EUSART.c: 162:         div *= 10;
  2843     006C  300A               	movlw	10
  2844     006D  00F0               	movwf	___wmul@multiplier
  2845     006E  3000               	movlw	0
  2846     006F  00F1               	movwf	___wmul@multiplier+1
  2847     0070  0826               	movf	itoa@div+1,w
  2848     0071  00F3               	movwf	___wmul@multiplicand+1
  2849     0072  0825               	movf	itoa@div,w
  2850     0073  00F2               	movwf	___wmul@multiplicand
  2851     0074  3183  2346  3180   	fcall	___wmul
  2852     0077  0871               	movf	?___wmul+1,w
  2853     0078  0020               	movlb	0	; select bank0
  2854     0079  00A6               	movwf	itoa@div+1
  2855     007A  0870               	movf	?___wmul,w
  2856     007B  00A5               	movwf	itoa@div
  2857     007C                     i1l54:	
  2858                           ;EUSART.c: 163:     }
  2859                           
  2860                           
  2861                           ;EUSART.c: 159:     while (temp / 10)
  2862     007C  300A               	movlw	10
  2863     007D  00F0               	movwf	___awdiv@divisor
  2864     007E  3000               	movlw	0
  2865     007F  00F1               	movwf	___awdiv@divisor+1
  2866     0080  0823               	movf	itoa@temp+1,w
  2867     0081  00F3               	movwf	___awdiv@dividend+1
  2868     0082  0822               	movf	itoa@temp,w
  2869     0083  00F2               	movwf	___awdiv@dividend
  2870     0084  3181  21CA  3180   	fcall	___awdiv
  2871     0087  0870               	movf	?___awdiv,w
  2872     0088  0471               	iorwf	?___awdiv+1,w
  2873     0089  1D03               	btfss	3,2
  2874     008A  288C               	goto	u77_21
  2875     008B  288D               	goto	u77_20
  2876     008C                     u77_21:
  2877     008C  285B               	goto	i1l1151
  2878     008D                     u77_20:
  2879     008D  28C8               	goto	i1l1157
  2880     008E                     i1l1153:
  2881                           
  2882                           ;EUSART.c: 166:     {;EUSART.c: 167:         int num = d / div;
  2883     008E  0826               	movf	itoa@div+1,w
  2884     008F  00F1               	movwf	___awdiv@divisor+1
  2885     0090  0825               	movf	itoa@div,w
  2886     0091  00F0               	movwf	___awdiv@divisor
  2887     0092  087A               	movf	itoa@d+1,w
  2888     0093  00F3               	movwf	___awdiv@dividend+1
  2889     0094  0879               	movf	itoa@d,w
  2890     0095  00F2               	movwf	___awdiv@dividend
  2891     0096  3181  21CA  3180   	fcall	___awdiv
  2892     0099  0871               	movf	?___awdiv+1,w
  2893     009A  0020               	movlb	0	; select bank0
  2894     009B  00A1               	movwf	itoa@num+1
  2895     009C  0870               	movf	?___awdiv,w
  2896     009D  00A0               	movwf	itoa@num
  2897                           
  2898                           ;EUSART.c: 168:         d %= div;
  2899     009E  0826               	movf	itoa@div+1,w
  2900     009F  00F1               	movwf	___awmod@divisor+1
  2901     00A0  0825               	movf	itoa@div,w
  2902     00A1  00F0               	movwf	___awmod@divisor
  2903     00A2  087A               	movf	itoa@d+1,w
  2904     00A3  00F3               	movwf	___awmod@dividend+1
  2905     00A4  0879               	movf	itoa@d,w
  2906     00A5  00F2               	movwf	___awmod@dividend
  2907     00A6  3182  2229  3180   	fcall	___awmod
  2908     00A9  0871               	movf	?___awmod+1,w
  2909     00AA  00FA               	movwf	itoa@d+1
  2910     00AB  0870               	movf	?___awmod,w
  2911     00AC  00F9               	movwf	itoa@d
  2912                           
  2913                           ;EUSART.c: 169:         div /= 10;
  2914     00AD  300A               	movlw	10
  2915     00AE  00F0               	movwf	___awdiv@divisor
  2916     00AF  3000               	movlw	0
  2917     00B0  00F1               	movwf	___awdiv@divisor+1
  2918     00B1  0020               	movlb	0	; select bank0
  2919     00B2  0826               	movf	itoa@div+1,w
  2920     00B3  00F3               	movwf	___awdiv@dividend+1
  2921     00B4  0825               	movf	itoa@div,w
  2922     00B5  00F2               	movwf	___awdiv@dividend
  2923     00B6  3181  21CA  3180   	fcall	___awdiv
  2924     00B9  0871               	movf	?___awdiv+1,w
  2925     00BA  0020               	movlb	0	; select bank0
  2926     00BB  00A6               	movwf	itoa@div+1
  2927     00BC  0870               	movf	?___awdiv,w
  2928     00BD  00A5               	movwf	itoa@div
  2929     00BE                     i1l1155:
  2930                           
  2931                           ;EUSART.c: 170:         *((*buf)++) = num + '0';
  2932     00BE  0824               	movf	itoa@buf,w
  2933     00BF  0086               	movwf	6
  2934     00C0  0187               	clrf	7
  2935     00C1  3F40               	moviw [0]fsr1
  2936     00C2  0084               	movwf	4
  2937     00C3  0185               	clrf	5
  2938     00C4  0A81               	incf	1,f
  2939     00C5  0820               	movf	itoa@num,w
  2940     00C6  3E30               	addlw	48
  2941     00C7  0080               	movwf	0
  2942     00C8                     i1l1157:
  2943                           
  2944                           ;EUSART.c: 165:     while (div != 0)
  2945     00C8  0020               	movlb	0	; select bank0
  2946     00C9  0825               	movf	itoa@div,w
  2947     00CA  0426               	iorwf	itoa@div+1,w
  2948     00CB  1D03               	btfss	3,2
  2949     00CC  28CE               	goto	u78_21
  2950     00CD  28CF               	goto	u78_20
  2951     00CE                     u78_21:
  2952     00CE  288E               	goto	i1l1153
  2953     00CF                     u78_20:
  2954     00CF                     i1l1159:
  2955                           
  2956                           ;EUSART.c: 172:     *(*buf) = '\0';
  2957     00CF  0824               	movf	itoa@buf,w
  2958     00D0  0086               	movwf	6
  2959     00D1  0187               	clrf	7
  2960     00D2  0801               	movf	1,w
  2961     00D3  0086               	movwf	6
  2962     00D4  0187               	clrf	7
  2963     00D5  0181               	clrf	1
  2964     00D6                     i1l60:
  2965     00D6  0008               	return
  2966     00D7                     __end_of_itoa:
  2967                           
  2968                           	psect	text13
  2969     0346                     __ptext13:	
  2970 ;; *************** function ___wmul *****************
  2971 ;; Defined at:
  2972 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  multiplier      2    0[COMMON] unsigned int 
  2975 ;;  multiplicand    2    2[COMMON] unsigned int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  product         2    4[COMMON] unsigned int 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2    0[COMMON] unsigned int 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2991 ;;Total ram usage:        6 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_itoa
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000     0346                     ___wmul:	
  3001                           ;psect for function ___wmul
  3002                           
  3003     0346                     i1l1043:	
  3004                           ;incstack = 0
  3005                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3006                           
  3007     0346  01F4               	clrf	___wmul@product
  3008     0347  01F5               	clrf	___wmul@product+1
  3009     0348                     i1l1045:
  3010     0348  1C70               	btfss	___wmul@multiplier,0
  3011     0349  2B4B               	goto	u52_21
  3012     034A  2B4C               	goto	u52_20
  3013     034B                     u52_21:
  3014     034B  2B50               	goto	i1l249
  3015     034C                     u52_20:
  3016     034C                     i1l1047:
  3017     034C  0872               	movf	___wmul@multiplicand,w
  3018     034D  07F4               	addwf	___wmul@product,f
  3019     034E  0873               	movf	___wmul@multiplicand+1,w
  3020     034F  3DF5               	addwfc	___wmul@product+1,f
  3021     0350                     i1l249:
  3022     0350  3001               	movlw	1
  3023     0351                     u53_25:
  3024     0351  35F2               	lslf	___wmul@multiplicand,f
  3025     0352  0DF3               	rlf	___wmul@multiplicand+1,f
  3026     0353  0B89               	decfsz	9,f
  3027     0354  2B51               	goto	u53_25
  3028     0355                     i1l1049:
  3029     0355  3001               	movlw	1
  3030     0356                     u54_25:
  3031     0356  36F1               	lsrf	___wmul@multiplier+1,f
  3032     0357  0CF0               	rrf	___wmul@multiplier,f
  3033     0358  0B89               	decfsz	9,f
  3034     0359  2B56               	goto	u54_25
  3035     035A                     i1l1051:
  3036     035A  0870               	movf	___wmul@multiplier,w
  3037     035B  0471               	iorwf	___wmul@multiplier+1,w
  3038     035C  1D03               	btfss	3,2
  3039     035D  2B5F               	goto	u55_21
  3040     035E  2B60               	goto	u55_20
  3041     035F                     u55_21:
  3042     035F  2B48               	goto	i1l1045
  3043     0360                     u55_20:
  3044     0360                     i1l1053:
  3045     0360  0875               	movf	___wmul@product+1,w
  3046     0361  00F1               	movwf	?___wmul+1
  3047     0362  0874               	movf	___wmul@product,w
  3048     0363  00F0               	movwf	?___wmul
  3049     0364                     i1l251:
  3050     0364  0008               	return
  3051     0365                     __end_of___wmul:
  3052                           
  3053                           	psect	text14
  3054     0229                     __ptext14:	
  3055 ;; *************** function ___awmod *****************
  3056 ;; Defined at:
  3057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  divisor         2    0[COMMON] int 
  3060 ;;  dividend        2    2[COMMON] int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  sign            1    6[COMMON] unsigned char 
  3063 ;;  counter         1    5[COMMON] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    0[COMMON] int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3076 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3077 ;;Total ram usage:        7 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_itoa
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086     0229                     ___awmod:	
  3087                           ;psect for function ___awmod
  3088                           
  3089     0229                     i1l1101:	
  3090                           ;incstack = 0
  3091                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3092                           
  3093     0229  01F6               	clrf	___awmod@sign
  3094     022A                     i1l1103:
  3095     022A  1FF3               	btfss	___awmod@dividend+1,7
  3096     022B  2A2D               	goto	u66_21
  3097     022C  2A2E               	goto	u66_20
  3098     022D                     u66_21:
  3099     022D  2A35               	goto	i1l1109
  3100     022E                     u66_20:
  3101     022E                     i1l1105:
  3102     022E  09F2               	comf	___awmod@dividend,f
  3103     022F  09F3               	comf	___awmod@dividend+1,f
  3104     0230  0AF2               	incf	___awmod@dividend,f
  3105     0231  1903               	skipnz
  3106     0232  0AF3               	incf	___awmod@dividend+1,f
  3107     0233                     i1l1107:
  3108     0233  01F6               	clrf	___awmod@sign
  3109     0234  0AF6               	incf	___awmod@sign,f
  3110     0235                     i1l1109:
  3111     0235  1FF1               	btfss	___awmod@divisor+1,7
  3112     0236  2A38               	goto	u67_21
  3113     0237  2A39               	goto	u67_20
  3114     0238                     u67_21:
  3115     0238  2A3E               	goto	i1l1113
  3116     0239                     u67_20:
  3117     0239                     i1l1111:
  3118     0239  09F0               	comf	___awmod@divisor,f
  3119     023A  09F1               	comf	___awmod@divisor+1,f
  3120     023B  0AF0               	incf	___awmod@divisor,f
  3121     023C  1903               	skipnz
  3122     023D  0AF1               	incf	___awmod@divisor+1,f
  3123     023E                     i1l1113:
  3124     023E  0870               	movf	___awmod@divisor,w
  3125     023F  0471               	iorwf	___awmod@divisor+1,w
  3126     0240  1903               	btfsc	3,2
  3127     0241  2A43               	goto	u68_21
  3128     0242  2A44               	goto	u68_20
  3129     0243                     u68_21:
  3130     0243  2A6D               	goto	i1l1131
  3131     0244                     u68_20:
  3132     0244                     i1l1115:
  3133     0244  01F5               	clrf	___awmod@counter
  3134     0245  0AF5               	incf	___awmod@counter,f
  3135     0246  2A50               	goto	i1l1121
  3136     0247                     i1l1117:
  3137     0247  3001               	movlw	1
  3138     0248                     u69_25:
  3139     0248  35F0               	lslf	___awmod@divisor,f
  3140     0249  0DF1               	rlf	___awmod@divisor+1,f
  3141     024A  0B89               	decfsz	9,f
  3142     024B  2A48               	goto	u69_25
  3143     024C                     i1l1119:
  3144     024C  3001               	movlw	1
  3145     024D  00F4               	movwf	??___awmod
  3146     024E  0874               	movf	??___awmod,w
  3147     024F  07F5               	addwf	___awmod@counter,f
  3148     0250                     i1l1121:
  3149     0250  1FF1               	btfss	___awmod@divisor+1,7
  3150     0251  2A53               	goto	u70_21
  3151     0252  2A54               	goto	u70_20
  3152     0253                     u70_21:
  3153     0253  2A47               	goto	i1l1117
  3154     0254                     u70_20:
  3155     0254                     i1l1123:
  3156     0254  0871               	movf	___awmod@divisor+1,w
  3157     0255  0273               	subwf	___awmod@dividend+1,w
  3158     0256  1D03               	skipz
  3159     0257  2A5A               	goto	u71_25
  3160     0258  0870               	movf	___awmod@divisor,w
  3161     0259  0272               	subwf	___awmod@dividend,w
  3162     025A                     u71_25:
  3163     025A  1C03               	skipc
  3164     025B  2A5D               	goto	u71_21
  3165     025C  2A5E               	goto	u71_20
  3166     025D                     u71_21:
  3167     025D  2A62               	goto	i1l1127
  3168     025E                     u71_20:
  3169     025E                     i1l1125:
  3170     025E  0870               	movf	___awmod@divisor,w
  3171     025F  02F2               	subwf	___awmod@dividend,f
  3172     0260  0871               	movf	___awmod@divisor+1,w
  3173     0261  3BF3               	subwfb	___awmod@dividend+1,f
  3174     0262                     i1l1127:
  3175     0262  3001               	movlw	1
  3176     0263                     u72_25:
  3177     0263  36F1               	lsrf	___awmod@divisor+1,f
  3178     0264  0CF0               	rrf	___awmod@divisor,f
  3179     0265  0B89               	decfsz	9,f
  3180     0266  2A63               	goto	u72_25
  3181     0267                     i1l1129:
  3182     0267  3001               	movlw	1
  3183     0268  02F5               	subwf	___awmod@counter,f
  3184     0269  1D03               	btfss	3,2
  3185     026A  2A6C               	goto	u73_21
  3186     026B  2A6D               	goto	u73_20
  3187     026C                     u73_21:
  3188     026C  2A54               	goto	i1l1123
  3189     026D                     u73_20:
  3190     026D                     i1l1131:
  3191     026D  0876               	movf	___awmod@sign,w
  3192     026E  1903               	btfsc	3,2
  3193     026F  2A71               	goto	u74_21
  3194     0270  2A72               	goto	u74_20
  3195     0271                     u74_21:
  3196     0271  2A77               	goto	i1l1135
  3197     0272                     u74_20:
  3198     0272                     i1l1133:
  3199     0272  09F2               	comf	___awmod@dividend,f
  3200     0273  09F3               	comf	___awmod@dividend+1,f
  3201     0274  0AF2               	incf	___awmod@dividend,f
  3202     0275  1903               	skipnz
  3203     0276  0AF3               	incf	___awmod@dividend+1,f
  3204     0277                     i1l1135:
  3205     0277  0873               	movf	___awmod@dividend+1,w
  3206     0278  00F1               	movwf	?___awmod+1
  3207     0279  0872               	movf	___awmod@dividend,w
  3208     027A  00F0               	movwf	?___awmod
  3209     027B                     i1l415:
  3210     027B  0008               	return
  3211     027C                     __end_of___awmod:
  3212                           
  3213                           	psect	text15
  3214     01CA                     __ptext15:	
  3215 ;; *************** function ___awdiv *****************
  3216 ;; Defined at:
  3217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  divisor         2    0[COMMON] int 
  3220 ;;  dividend        2    2[COMMON] int 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  quotient        2    7[COMMON] int 
  3223 ;;  sign            1    6[COMMON] unsigned char 
  3224 ;;  counter         1    5[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  2    0[COMMON] int 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3237 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3238 ;;Total ram usage:        9 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_itoa
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247     01CA                     ___awdiv:	
  3248                           ;psect for function ___awdiv
  3249                           
  3250     01CA                     i1l1057:	
  3251                           ;incstack = 0
  3252                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3253                           
  3254     01CA  01F6               	clrf	___awdiv@sign
  3255     01CB                     i1l1059:
  3256     01CB  1FF1               	btfss	___awdiv@divisor+1,7
  3257     01CC  29CE               	goto	u56_21
  3258     01CD  29CF               	goto	u56_20
  3259     01CE                     u56_21:
  3260     01CE  29D6               	goto	i1l1065
  3261     01CF                     u56_20:
  3262     01CF                     i1l1061:
  3263     01CF  09F0               	comf	___awdiv@divisor,f
  3264     01D0  09F1               	comf	___awdiv@divisor+1,f
  3265     01D1  0AF0               	incf	___awdiv@divisor,f
  3266     01D2  1903               	skipnz
  3267     01D3  0AF1               	incf	___awdiv@divisor+1,f
  3268     01D4                     i1l1063:
  3269     01D4  01F6               	clrf	___awdiv@sign
  3270     01D5  0AF6               	incf	___awdiv@sign,f
  3271     01D6                     i1l1065:
  3272     01D6  1FF3               	btfss	___awdiv@dividend+1,7
  3273     01D7  29D9               	goto	u57_21
  3274     01D8  29DA               	goto	u57_20
  3275     01D9                     u57_21:
  3276     01D9  29E3               	goto	i1l1071
  3277     01DA                     u57_20:
  3278     01DA                     i1l1067:
  3279     01DA  09F2               	comf	___awdiv@dividend,f
  3280     01DB  09F3               	comf	___awdiv@dividend+1,f
  3281     01DC  0AF2               	incf	___awdiv@dividend,f
  3282     01DD  1903               	skipnz
  3283     01DE  0AF3               	incf	___awdiv@dividend+1,f
  3284     01DF                     i1l1069:
  3285     01DF  3001               	movlw	1
  3286     01E0  00F4               	movwf	??___awdiv
  3287     01E1  0874               	movf	??___awdiv,w
  3288     01E2  06F6               	xorwf	___awdiv@sign,f
  3289     01E3                     i1l1071:
  3290     01E3  01F7               	clrf	___awdiv@quotient
  3291     01E4  01F8               	clrf	___awdiv@quotient+1
  3292     01E5                     i1l1073:
  3293     01E5  0870               	movf	___awdiv@divisor,w
  3294     01E6  0471               	iorwf	___awdiv@divisor+1,w
  3295     01E7  1903               	btfsc	3,2
  3296     01E8  29EA               	goto	u58_21
  3297     01E9  29EB               	goto	u58_20
  3298     01EA                     u58_21:
  3299     01EA  2A1A               	goto	i1l1093
  3300     01EB                     u58_20:
  3301     01EB                     i1l1075:
  3302     01EB  01F5               	clrf	___awdiv@counter
  3303     01EC  0AF5               	incf	___awdiv@counter,f
  3304     01ED  29F7               	goto	i1l1081
  3305     01EE                     i1l1077:
  3306     01EE  3001               	movlw	1
  3307     01EF                     u59_25:
  3308     01EF  35F0               	lslf	___awdiv@divisor,f
  3309     01F0  0DF1               	rlf	___awdiv@divisor+1,f
  3310     01F1  0B89               	decfsz	9,f
  3311     01F2  29EF               	goto	u59_25
  3312     01F3                     i1l1079:
  3313     01F3  3001               	movlw	1
  3314     01F4  00F4               	movwf	??___awdiv
  3315     01F5  0874               	movf	??___awdiv,w
  3316     01F6  07F5               	addwf	___awdiv@counter,f
  3317     01F7                     i1l1081:
  3318     01F7  1FF1               	btfss	___awdiv@divisor+1,7
  3319     01F8  29FA               	goto	u60_21
  3320     01F9  29FB               	goto	u60_20
  3321     01FA                     u60_21:
  3322     01FA  29EE               	goto	i1l1077
  3323     01FB                     u60_20:
  3324     01FB                     i1l1083:
  3325     01FB  3001               	movlw	1
  3326     01FC                     u61_25:
  3327     01FC  35F7               	lslf	___awdiv@quotient,f
  3328     01FD  0DF8               	rlf	___awdiv@quotient+1,f
  3329     01FE  0B89               	decfsz	9,f
  3330     01FF  29FC               	goto	u61_25
  3331     0200  0871               	movf	___awdiv@divisor+1,w
  3332     0201  0273               	subwf	___awdiv@dividend+1,w
  3333     0202  1D03               	skipz
  3334     0203  2A06               	goto	u62_25
  3335     0204  0870               	movf	___awdiv@divisor,w
  3336     0205  0272               	subwf	___awdiv@dividend,w
  3337     0206                     u62_25:
  3338     0206  1C03               	skipc
  3339     0207  2A09               	goto	u62_21
  3340     0208  2A0A               	goto	u62_20
  3341     0209                     u62_21:
  3342     0209  2A0F               	goto	i1l1089
  3343     020A                     u62_20:
  3344     020A                     i1l1085:
  3345     020A  0870               	movf	___awdiv@divisor,w
  3346     020B  02F2               	subwf	___awdiv@dividend,f
  3347     020C  0871               	movf	___awdiv@divisor+1,w
  3348     020D  3BF3               	subwfb	___awdiv@dividend+1,f
  3349     020E                     i1l1087:
  3350     020E  1477               	bsf	___awdiv@quotient,0
  3351     020F                     i1l1089:
  3352     020F  3001               	movlw	1
  3353     0210                     u63_25:
  3354     0210  36F1               	lsrf	___awdiv@divisor+1,f
  3355     0211  0CF0               	rrf	___awdiv@divisor,f
  3356     0212  0B89               	decfsz	9,f
  3357     0213  2A10               	goto	u63_25
  3358     0214                     i1l1091:
  3359     0214  3001               	movlw	1
  3360     0215  02F5               	subwf	___awdiv@counter,f
  3361     0216  1D03               	btfss	3,2
  3362     0217  2A19               	goto	u64_21
  3363     0218  2A1A               	goto	u64_20
  3364     0219                     u64_21:
  3365     0219  29FB               	goto	i1l1083
  3366     021A                     u64_20:
  3367     021A                     i1l1093:
  3368     021A  0876               	movf	___awdiv@sign,w
  3369     021B  1903               	btfsc	3,2
  3370     021C  2A1E               	goto	u65_21
  3371     021D  2A1F               	goto	u65_20
  3372     021E                     u65_21:
  3373     021E  2A24               	goto	i1l1097
  3374     021F                     u65_20:
  3375     021F                     i1l1095:
  3376     021F  09F7               	comf	___awdiv@quotient,f
  3377     0220  09F8               	comf	___awdiv@quotient+1,f
  3378     0221  0AF7               	incf	___awdiv@quotient,f
  3379     0222  1903               	skipnz
  3380     0223  0AF8               	incf	___awdiv@quotient+1,f
  3381     0224                     i1l1097:
  3382     0224  0878               	movf	___awdiv@quotient+1,w
  3383     0225  00F1               	movwf	?___awdiv+1
  3384     0226  0877               	movf	___awdiv@quotient,w
  3385     0227  00F0               	movwf	?___awdiv
  3386     0228                     i1l402:
  3387     0228  0008               	return
  3388     0229                     __end_of___awdiv:
  3389     007E                     btemp	set	126	;btemp
  3390     007E                     int$flags	set	126
  3391     007E                     wtemp0	set	126
  3392                           
  3393                           	psect	config
  3394                           
  3395                           ;Config register CONFIG1 @ 0x8007
  3396                           ;	Oscillator Selection Bits
  3397                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3398                           ;	Watchdog Timer Enable
  3399                           ;	WDTE = ON, WDT enabled
  3400                           ;	Power-up Timer Enable
  3401                           ;	PWRTE = OFF, PWRT disabled
  3402                           ;	MCLR Pin Function Select
  3403                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
  3404                           ;	Flash Program Memory Code Protection
  3405                           ;	CP = OFF, Program memory code protection is disabled
  3406                           ;	Brown-out Reset Enable
  3407                           ;	BOREN = OFF, Brown-out Reset disabled
  3408                           ;	Clock Out Enable
  3409                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3410                           ;	Internal/External Switchover Mode
  3411                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  3412                           ;	Fail-Safe Clock Monitor Enable
  3413                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3414     8007                     	org	32775
  3415     8007  19BC               	dw	6588
  3416                           
  3417                           ;Config register CONFIG2 @ 0x8008
  3418                           ;	Flash Memory Self-Write Protection
  3419                           ;	WRT = OFF, Write protection off
  3420                           ;	Peripheral Pin Select one-way control
  3421                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3422                           ;	Zero-cross detect disable
  3423                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3424                           ;	Phase Lock Loop enable
  3425                           ;	PLLEN = OFF, 4x PLL is disabled
  3426                           ;	Stack Overflow/Underflow Reset Enable
  3427                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3428                           ;	Brown-out Reset Voltage Selection
  3429                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3430                           ;	Low-Power Brown Out Reset
  3431                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3432                           ;	In-Circuit Debugger Mode
  3433                           ;	DEBUG = 0x1, unprogrammed default
  3434                           ;	Low-Voltage Programming Enable
  3435                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3436     8008                     	org	32776
  3437     8008  1EFF               	dw	7935

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      48
    BANK1            80     19      19
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    EUSART_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Integer@temp_ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[15]), STR_2(CODE[16]), STR_3(CODE[2]), 

    itoa@buf	PTR PTR unsigned char  size(1) Largest target is 1
		 -> EUSART_Write_Integer@ptr(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_EUSART_Write_Integer
    i1_EUSART_Write_Text->i1_EUSART_Write
    _EUSART_Write_Integer->_itoa
    _itoa->___awdiv

Critical Paths under _main in BANK0

    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _isr in BANK0

    _isr->_EUSART_Write_Integer
    _EUSART_Write_Integer->_itoa

Critical Paths under _main in BANK1

    _main->_EUSART_Initialize

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1272
                                             18 BANK1      1     1      0
                  _EUSART_Initialize
                        _EUSART_Read
                  _EUSART_Write_Text
                           _initMain
 ---------------------------------------------------------------------------------
 (1) _initMain                                             1     1      0       0
                                             32 BANK0      1     1      0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     396
                                             33 BANK0      5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                             32 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     811
                                              0 BANK1     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                             32 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0    2476
                                             29 BANK0      3     3      0
               _EUSART_Write_Integer
                i1_EUSART_Write_Text
 ---------------------------------------------------------------------------------
 (4) i1_EUSART_Write_Text                                  5     3      2     138
                                              1 COMMON     5     3      2
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write_Integer                                25    23      2    2315
                                             11 COMMON     3     1      2
                                              7 BANK0     22    22      0
                               _itoa
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (5) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 9     7      2    2069
                                              9 COMMON     2     0      2
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Read
   _EUSART_Write_Text
     _EUSART_Write
   _initMain
     _internal_32

 _isr (ROOT)
   _EUSART_Write_Integer
     _itoa
       ___awdiv
       ___awmod
       ___wmul
     i1_EUSART_Write
   i1_EUSART_Write_Text
     i1_EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     13      13       7       23.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      51      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      51      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Apr 14 00:12:50 2024

                 ??i1_EUSART_Write 0070                                 l30 0399  
                               l32 03A1                                 l25 01C9  
                               l41 03B3                                 l50 0345  
                               l28 0394                                 l44 03BA  
                               l83 03CD                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0072                                l314 00EA  
                              l324 0166                                l164 0300  
                              l158 02C4                                _isr 0004  
                     ___awmod@sign 0076                                wreg 0009  
                     ?_EUSART_Read 0070                        main@command 00B2  
                             l1401 0141                               l1403 0148  
                             l1405 014E                               l1421 01C5  
                             l1413 0167                               l1501 02BF  
                             l1407 0153                               l1423 01C6  
                             l1415 01C0                               l1431 0392  
                             l1503 02C0                               l1409 015E  
                             l1425 01C7                               l1417 01C3  
                             l1433 039E                               l1441 032B  
                             l1505 02C2                               l1521 02D9  
                             l1427 01C8                               l1419 01C4  
                             l1435 03A0                               l1443 0335  
                             l1371 03C5                               l1507 02C3  
                             l1451 0288                               l1531 02F5  
                             l1523 02DE                               l1381 00F9  
                             l1373 00D7                               l1445 033A  
                             l1461 0292                               l1453 028A  
                             l1533 02F7                               l1525 02E4  
                             l1517 02C5                               l1391 011B  
                             l1383 00FD                               l1375 00D9  
                             l1367 03B3                               l1439 0327  
                             l1471 029F                               l1463 0294  
                             l1455 028C                               l1447 027C  
                             l1527 02E6                               l1519 02D4  
                             l1393 011F                               l1385 0105  
                             l1377 00DD                               l1369 03B7  
                             l1481 02AB                               l1473 02A4  
                             l1465 0297                               l1457 028E  
                             l1449 027F                               l1529 02EF  
                             l1395 0126                               l1387 010D  
                             l1379 00EE                               l1491 02B6  
                             l1483 02AD                               l1475 02A6  
                             l1467 0299                               l1459 0290  
                             l1397 0138                               l1389 0110  
                             l1493 02B8                               l1485 02B2  
                             l1477 02A8                               l1469 029A  
                             l1399 0140                               l1495 02B9  
                             l1487 02B3                               l1479 02A9  
                             l1497 02BA                               l1489 02B4  
                             l1499 02BD         EUSART_Write_Integer@buffer 0027  
                             ?_isr 0070                               STR_1 03A2  
                             STR_2 0382                               STR_3 0390  
                             _BRGH 0CF2                               _CREN 0CEC  
                             u1100 0138                               u1101 0137  
                             u1030 03B7                               u1031 03B6  
                             u1120 014E                               u1040 00DD  
                             u1200 02D9                               u1121 014D  
                             u1105 0134                               u1041 00DC  
                             u1201 02D8                               u1130 0153  
                             u1050 00EE                               u1210 02E4  
                             u1131 0152                               u1115 0142  
                             u1051 00ED                               u1211 02E3  
                             u1060 010D                               u1140 0175  
                             u1220 02F5                               u1061 010C  
                             u1221 02F4                               u1150 0194  
                             u1080 011F                               u1160 0399  
                             u1081 011E                               u1145 0171  
                             u1161 0398                               u1170 039E  
                             u1075 0111                               u1155 0190  
                             u1171 039D                               u1180 0345  
                             u1181 0344                               u1237 0283  
                             u1095 0120                               i1l41 03BC  
                             i1l50 0381                               i1l60 00D6  
                             i1l44 03C4                               i1l54 007C  
                             i1l66 0326                               _SCS0 04C8  
                             _SCS1 04C9                               _TMR1 0016  
                             _SPEN 0CEF                               _TXEN 0CF5  
                             _SYNC 0CF4              ??i1_EUSART_Write_Text 0073  
                             _main 02C5                               _itoa 003E  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               start 0036  
                            ??_isr 003D                      ?_EUSART_Write 0070  
                  __end_of___aldiv 0167                              ?_main 0070  
                            ?_itoa 0079                    __end_of___awdiv 0229  
                            _BRG16 0CFB                    __end_of___awmod 027C  
                  ___awdiv@divisor 0070                              _IRCF0 04CB  
                            _IRCF1 04CC                              _IRCF2 04CD  
                            _IRCF3 04CE                              i1l402 0228  
                            i1l251 0364                              i1l181 0034  
                            i1l415 027B                              i1l249 0350  
                            i1l178 001B                    ___awdiv@counter 0075  
                            u60_20 01FB                              u52_20 034C  
                            u60_21 01FA                              u52_21 034B  
                            u61_25 01FC                              u53_25 0351  
                            u62_20 020A                              u70_20 0254  
                            u62_21 0209                              u70_21 0253  
                            u62_25 0206                              u54_25 0356  
                            u71_20 025E                              u55_20 0360  
                            u71_21 025D                              u55_21 035F  
                            u63_25 0210                              u71_25 025A  
                            u64_20 021A                              u56_20 01CF  
                            u64_21 0219                              u56_21 01CE  
                            u72_25 0263                              u65_20 021F  
                            u57_20 01DA                              u73_20 026D  
                            u65_21 021E                              u57_21 01D9  
                            u73_21 026C                              _TRISD 008F  
                            u58_20 01EB                              u74_20 0272  
                            u66_20 022E                              u58_21 01EA  
                            u74_21 0271                              u66_21 022D  
                            u67_20 0239                              u67_21 0238  
                            u59_25 01EF                              u68_20 0244  
                            u76_20 0048                              u68_21 0243  
                            u76_21 0047                              u77_20 008D  
                            u77_21 008C                              u69_25 0248  
                            u78_20 00CF                              u78_21 00CE  
                            u95_20 0326                              u95_21 0325  
                            u96_20 0381                              u96_21 0380  
                            u89_20 03C1                              u89_21 03C0  
                            itoa@d 0079                              status 0003  
                            wtemp0 007E                       ?_internal_32 0070  
                  __initialization 0038                       __end_of_main 0303  
                     __end_of_itoa 00D7                     ??_EUSART_Write 0040  
                           ??_main 004F                             ??_itoa 007B  
                           _ADRESH 009C                             _ADRESL 009B  
                 ___awdiv@dividend 0072                             _ANSELD 018F  
                           _RC1REG 0199                             u101_20 0012  
                           u101_21 0011                             i1l1101 0229  
                           i1l1111 0239                             i1l1103 022A  
                           u102_20 001F                             i1l1121 0250  
                           i1l1113 023E                             i1l1105 022E  
                           u102_21 001E                             i1l1123 0254  
                           i1l1115 0244                             i1l1131 026D  
                           i1l1107 0233                             i1l1051 035A  
                           i1l1043 0346                             i1l1203 03BC  
                           i1l1061 01CF                             i1l1133 0272  
                           i1l1125 025E                             i1l1117 0247  
                           i1l1109 0235                             i1l1053 0360  
                           i1l1045 0348                             i1l1205 03C1  
                           i1l1071 01E3                             i1l1063 01D4  
                           i1l1135 0277                             i1l1127 0262  
                           i1l1119 024C                             i1l1047 034C  
                           i1l1151 005B                             i1l1143 0040  
                           i1l1081 01F7                             i1l1073 01E5  
                           i1l1065 01D6                             i1l1057 01CA  
                           i1l1129 0267                             i1l1049 0355  
                           i1l1153 008E                             i1l1145 0048  
                           i1l1241 0303                             i1l1321 0376  
                           i1l1091 0214                             i1l1083 01FB  
                           i1l1075 01EB                             i1l1067 01DA  
                           i1l1059 01CB                             i1l1155 00BE  
                           i1l1147 0051                             i1l1251 031E  
                           i1l1243 0306                             i1l1315 0365  
                           i1l1085 020A                             i1l1077 01EE  
                           i1l1093 021A                             i1l1069 01DF  
                           i1l1157 00C8                             i1l1149 0056  
                           i1l1245 030E                             i1l1317 0368  
                           i1l1095 021F                             i1l1087 020E  
                           i1l1079 01F3                             i1l1159 00CF  
                           i1l1247 0312                             i1l1319 0372  
                           i1l1351 0008                             i1l1097 0224  
                           i1l1089 020F                             i1l1249 0319  
                           i1l1361 001F                             i1l1353 0012  
                           i1l1363 0026                             i1l1355 0013  
                           i1l1365 002D                             i1l1357 0015  
                           i1l1349 0006                             i1l1359 0019  
                           u124_27 0016                             _SPBRGL 019B  
                           _TX1REG 019A                             _SPLLEN 04CF  
                        ??___aldiv 0048                             ___wmul 0346  
                        ??___awdiv 0074                          ??___awmod 0074  
                 __end_of_initMain 02C5                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
          __end_of__initialization 003A                     __pcstackCOMMON 0070  
                       __pbssBANK0 004F               __end_of_EUSART_Write 03BB  
                       __pmaintext 02C5                            ?___wmul 0070  
                       __pintentry 0004        __end_ofi1_EUSART_Write_Text 0382  
                          _PPSLOCK 0E0F                          ?_initMain 0070  
                          ___aldiv 00D7                            ___awdiv 01CA  
                          ___awmod 0229                            __ptext1 027C  
                          __ptext2 03C5                            __ptext3 0327  
                          __ptext4 03B1                            __ptext5 0392  
                          __ptext6 0167                            __ptext7 00D7  
                          __ptext9 0365                          _T1CONbits 0018  
                 ___awmod@dividend 0072                   ___aldiv@dividend 0044  
             end_of_initialization 003A                         ??_initMain 0040  
                          itoa@div 0025                            itoa@buf 0024  
                          itoa@num 0020                  _EUSART_Initialize 0167  
               ?_EUSART_Initialize 00A0                   ___aldiv@quotient 004B  
               EUSART_Initialize@x 00B0                ??_EUSART_Initialize 00A4  
                        _TRISAbits 008C                          _TRISBbits 008D  
                        _TRISDbits 008F                          _RXPPSbits 0E24  
        __end_of_EUSART_Initialize 01CA       __end_of_EUSART_Write_Integer 0327  
                   __end_of___wmul 0365                       _EUSART_Write 03B1  
              start_initialization 0038  EUSART_Write_Integer@value_to_send 007B  
                      __end_of_isr 0036                      ??_EUSART_Read 0040  
                _EUSART_Write_Text 0327                 ?_EUSART_Write_Text 0041  
                         ??___wmul 0074                ??_EUSART_Write_Text 0043  
                   i1_EUSART_Write 03BB                          ___latbits 0003  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
        __end_of_EUSART_Write_Text 0346                __end_of_EUSART_Read 03A2  
                    ??_internal_32 0040                           ?___aldiv 0040  
                         ?___awdiv 0070                           ?___awmod 0070  
        EUSART_Initialize@baudrate 00A0             __end_ofi1_EUSART_Write 03C5  
             _EUSART_Write_Integer 0303               i1EUSART_Write@txData 0070  
                  ___aldiv@divisor 0040                    ___aldiv@counter 0049  
                   ___wmul@product 0074                           _LATDbits 010F  
                         _PIE1bits 0091               i1EUSART_Write_Text@i 0074  
                         _PIR1bits 0011            EUSART_Write_Integer@ptr 003B  
              __end_of_internal_32 03CE                    ?i1_EUSART_Write 0070  
                       _ADCON0bits 009D                         _ADCON1bits 009E  
                ___wmul@multiplier 0070              ?_EUSART_Write_Integer 007B  
                      _EUSART_Read 0392       EUSART_Write_Integer@temp_ptr 003C  
                        isr@result 003E                         _ANSELAbits 018C  
                       _ANSELBbits 018D            i1EUSART_Write_Text@text 0071  
                         __ptext10 0303                           __ptext11 03BB  
                         __ptext12 003E                           __ptext13 0346  
                         __ptext14 0229                           __ptext15 01CA  
                         _initMain 027C                        _internal_32 03C5  
                       _RB2PPSbits 0E9A                         _RC1STAbits 019D  
                         int$flags 007E             ??_EUSART_Write_Integer 007D  
                       _INTCONbits 000B                           isr@count 004F  
                         itoa@temp 0022                           intlevel1 0000  
                      _PPSLOCKbits 0E0F                      __pstringtext1 0382  
                    __pstringtext2 03A2                      __pstringtext3 0000  
              i1_EUSART_Write_Text 0365              EUSART_Write_Text@text 0041  
                     ___aldiv@sign 004A                 EUSART_Write@txData 0040  
             ?i1_EUSART_Write_Text 0071                 EUSART_Write_Text@i 0044  
