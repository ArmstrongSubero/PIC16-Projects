

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 27 22:53:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1719
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 06/07/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1719 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0110                     	;# 
   125     0111                     	;# 
   126     0112                     	;# 
   127     0113                     	;# 
   128     0114                     	;# 
   129     0115                     	;# 
   130     0116                     	;# 
   131     0117                     	;# 
   132     0118                     	;# 
   133     0119                     	;# 
   134     011A                     	;# 
   135     011B                     	;# 
   136     011B                     	;# 
   137     011C                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     018E                     	;# 
   141     018F                     	;# 
   142     0190                     	;# 
   143     0191                     	;# 
   144     0191                     	;# 
   145     0192                     	;# 
   146     0193                     	;# 
   147     0193                     	;# 
   148     0194                     	;# 
   149     0195                     	;# 
   150     0196                     	;# 
   151     0197                     	;# 
   152     0199                     	;# 
   153     0199                     	;# 
   154     0199                     	;# 
   155     019A                     	;# 
   156     019A                     	;# 
   157     019A                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019C                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019D                     	;# 
   168     019D                     	;# 
   169     019E                     	;# 
   170     019E                     	;# 
   171     019E                     	;# 
   172     019F                     	;# 
   173     019F                     	;# 
   174     019F                     	;# 
   175     019F                     	;# 
   176     019F                     	;# 
   177     020C                     	;# 
   178     020D                     	;# 
   179     020E                     	;# 
   180     020F                     	;# 
   181     0210                     	;# 
   182     0211                     	;# 
   183     0211                     	;# 
   184     0212                     	;# 
   185     0212                     	;# 
   186     0213                     	;# 
   187     0213                     	;# 
   188     0214                     	;# 
   189     0214                     	;# 
   190     0215                     	;# 
   191     0215                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0216                     	;# 
   195     0216                     	;# 
   196     0217                     	;# 
   197     0217                     	;# 
   198     028C                     	;# 
   199     028D                     	;# 
   200     028E                     	;# 
   201     028F                     	;# 
   202     0290                     	;# 
   203     0291                     	;# 
   204     0291                     	;# 
   205     0292                     	;# 
   206     0293                     	;# 
   207     0293                     	;# 
   208     0298                     	;# 
   209     0298                     	;# 
   210     0299                     	;# 
   211     029A                     	;# 
   212     029A                     	;# 
   213     029E                     	;# 
   214     030C                     	;# 
   215     030D                     	;# 
   216     030E                     	;# 
   217     030F                     	;# 
   218     0310                     	;# 
   219     038C                     	;# 
   220     038D                     	;# 
   221     038E                     	;# 
   222     038F                     	;# 
   223     0390                     	;# 
   224     0391                     	;# 
   225     0392                     	;# 
   226     0393                     	;# 
   227     0394                     	;# 
   228     0395                     	;# 
   229     0396                     	;# 
   230     0397                     	;# 
   231     0398                     	;# 
   232     0399                     	;# 
   233     039D                     	;# 
   234     039E                     	;# 
   235     039F                     	;# 
   236     0415                     	;# 
   237     0416                     	;# 
   238     0417                     	;# 
   239     041C                     	;# 
   240     041D                     	;# 
   241     041E                     	;# 
   242     0498                     	;# 
   243     0498                     	;# 
   244     0499                     	;# 
   245     049A                     	;# 
   246     049B                     	;# 
   247     049B                     	;# 
   248     049C                     	;# 
   249     049D                     	;# 
   250     049E                     	;# 
   251     049F                     	;# 
   252     0511                     	;# 
   253     0515                     	;# 
   254     0617                     	;# 
   255     0618                     	;# 
   256     0619                     	;# 
   257     0619                     	;# 
   258     061A                     	;# 
   259     061B                     	;# 
   260     061C                     	;# 
   261     061C                     	;# 
   262     0691                     	;# 
   263     0692                     	;# 
   264     0693                     	;# 
   265     0694                     	;# 
   266     0695                     	;# 
   267     0696                     	;# 
   268     0697                     	;# 
   269     0698                     	;# 
   270     0699                     	;# 
   271     069A                     	;# 
   272     069B                     	;# 
   273     069C                     	;# 
   274     069D                     	;# 
   275     069E                     	;# 
   276     069F                     	;# 
   277     0E0F                     	;# 
   278     0E10                     	;# 
   279     0E11                     	;# 
   280     0E12                     	;# 
   281     0E13                     	;# 
   282     0E14                     	;# 
   283     0E15                     	;# 
   284     0E17                     	;# 
   285     0E20                     	;# 
   286     0E21                     	;# 
   287     0E22                     	;# 
   288     0E24                     	;# 
   289     0E25                     	;# 
   290     0E28                     	;# 
   291     0E29                     	;# 
   292     0E2A                     	;# 
   293     0E2B                     	;# 
   294     0E90                     	;# 
   295     0E91                     	;# 
   296     0E92                     	;# 
   297     0E93                     	;# 
   298     0E94                     	;# 
   299     0E95                     	;# 
   300     0E96                     	;# 
   301     0E97                     	;# 
   302     0E98                     	;# 
   303     0E99                     	;# 
   304     0E9A                     	;# 
   305     0E9B                     	;# 
   306     0E9C                     	;# 
   307     0E9D                     	;# 
   308     0E9E                     	;# 
   309     0E9F                     	;# 
   310     0EA0                     	;# 
   311     0EA1                     	;# 
   312     0EA2                     	;# 
   313     0EA3                     	;# 
   314     0EA4                     	;# 
   315     0EA5                     	;# 
   316     0EA6                     	;# 
   317     0EA7                     	;# 
   318     0EA8                     	;# 
   319     0EA9                     	;# 
   320     0EAA                     	;# 
   321     0EAB                     	;# 
   322     0EAC                     	;# 
   323     0EAD                     	;# 
   324     0EAE                     	;# 
   325     0EAF                     	;# 
   326     0EB0                     	;# 
   327     0EB1                     	;# 
   328     0EB2                     	;# 
   329     0F0F                     	;# 
   330     0F10                     	;# 
   331     0F11                     	;# 
   332     0F12                     	;# 
   333     0F13                     	;# 
   334     0F14                     	;# 
   335     0F15                     	;# 
   336     0F16                     	;# 
   337     0F17                     	;# 
   338     0F18                     	;# 
   339     0F19                     	;# 
   340     0F1A                     	;# 
   341     0F1B                     	;# 
   342     0F1C                     	;# 
   343     0F1D                     	;# 
   344     0F1E                     	;# 
   345     0F1F                     	;# 
   346     0F20                     	;# 
   347     0F21                     	;# 
   348     0F22                     	;# 
   349     0F23                     	;# 
   350     0F24                     	;# 
   351     0F25                     	;# 
   352     0F26                     	;# 
   353     0F27                     	;# 
   354     0F28                     	;# 
   355     0F29                     	;# 
   356     0F2A                     	;# 
   357     0F2B                     	;# 
   358     0F2C                     	;# 
   359     0F2D                     	;# 
   360     0F2E                     	;# 
   361     0F2F                     	;# 
   362     0F30                     	;# 
   363     0F31                     	;# 
   364     0F32                     	;# 
   365     0F33                     	;# 
   366     0F34                     	;# 
   367     0F35                     	;# 
   368     0F36                     	;# 
   369     0F37                     	;# 
   370     0FE4                     	;# 
   371     0FE5                     	;# 
   372     0FE6                     	;# 
   373     0FE7                     	;# 
   374     0FE8                     	;# 
   375     0FE9                     	;# 
   376     0FEA                     	;# 
   377     0FEB                     	;# 
   378     0FED                     	;# 
   379     0FEE                     	;# 
   380     0FEF                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000F                     	;# 
   397     0010                     	;# 
   398     0011                     	;# 
   399     0012                     	;# 
   400     0013                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0016                     	;# 
   404     0017                     	;# 
   405     0018                     	;# 
   406     0019                     	;# 
   407     001A                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     008E                     	;# 
   413     008F                     	;# 
   414     0090                     	;# 
   415     0091                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0095                     	;# 
   419     0096                     	;# 
   420     0097                     	;# 
   421     0098                     	;# 
   422     0099                     	;# 
   423     009A                     	;# 
   424     009B                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     010C                     	;# 
   431     010D                     	;# 
   432     010E                     	;# 
   433     010F                     	;# 
   434     0110                     	;# 
   435     0111                     	;# 
   436     0112                     	;# 
   437     0113                     	;# 
   438     0114                     	;# 
   439     0115                     	;# 
   440     0116                     	;# 
   441     0117                     	;# 
   442     0118                     	;# 
   443     0119                     	;# 
   444     011A                     	;# 
   445     011B                     	;# 
   446     011B                     	;# 
   447     011C                     	;# 
   448     018C                     	;# 
   449     018D                     	;# 
   450     018E                     	;# 
   451     018F                     	;# 
   452     0190                     	;# 
   453     0191                     	;# 
   454     0191                     	;# 
   455     0192                     	;# 
   456     0193                     	;# 
   457     0193                     	;# 
   458     0194                     	;# 
   459     0195                     	;# 
   460     0196                     	;# 
   461     0197                     	;# 
   462     0199                     	;# 
   463     0199                     	;# 
   464     0199                     	;# 
   465     019A                     	;# 
   466     019A                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019B                     	;# 
   473     019C                     	;# 
   474     019C                     	;# 
   475     019C                     	;# 
   476     019D                     	;# 
   477     019D                     	;# 
   478     019D                     	;# 
   479     019E                     	;# 
   480     019E                     	;# 
   481     019E                     	;# 
   482     019F                     	;# 
   483     019F                     	;# 
   484     019F                     	;# 
   485     019F                     	;# 
   486     019F                     	;# 
   487     020C                     	;# 
   488     020D                     	;# 
   489     020E                     	;# 
   490     020F                     	;# 
   491     0210                     	;# 
   492     0211                     	;# 
   493     0211                     	;# 
   494     0212                     	;# 
   495     0212                     	;# 
   496     0213                     	;# 
   497     0213                     	;# 
   498     0214                     	;# 
   499     0214                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0215                     	;# 
   503     0215                     	;# 
   504     0216                     	;# 
   505     0216                     	;# 
   506     0217                     	;# 
   507     0217                     	;# 
   508     028C                     	;# 
   509     028D                     	;# 
   510     028E                     	;# 
   511     028F                     	;# 
   512     0290                     	;# 
   513     0291                     	;# 
   514     0291                     	;# 
   515     0292                     	;# 
   516     0293                     	;# 
   517     0293                     	;# 
   518     0298                     	;# 
   519     0298                     	;# 
   520     0299                     	;# 
   521     029A                     	;# 
   522     029A                     	;# 
   523     029E                     	;# 
   524     030C                     	;# 
   525     030D                     	;# 
   526     030E                     	;# 
   527     030F                     	;# 
   528     0310                     	;# 
   529     038C                     	;# 
   530     038D                     	;# 
   531     038E                     	;# 
   532     038F                     	;# 
   533     0390                     	;# 
   534     0391                     	;# 
   535     0392                     	;# 
   536     0393                     	;# 
   537     0394                     	;# 
   538     0395                     	;# 
   539     0396                     	;# 
   540     0397                     	;# 
   541     0398                     	;# 
   542     0399                     	;# 
   543     039D                     	;# 
   544     039E                     	;# 
   545     039F                     	;# 
   546     0415                     	;# 
   547     0416                     	;# 
   548     0417                     	;# 
   549     041C                     	;# 
   550     041D                     	;# 
   551     041E                     	;# 
   552     0498                     	;# 
   553     0498                     	;# 
   554     0499                     	;# 
   555     049A                     	;# 
   556     049B                     	;# 
   557     049B                     	;# 
   558     049C                     	;# 
   559     049D                     	;# 
   560     049E                     	;# 
   561     049F                     	;# 
   562     0511                     	;# 
   563     0515                     	;# 
   564     0617                     	;# 
   565     0618                     	;# 
   566     0619                     	;# 
   567     0619                     	;# 
   568     061A                     	;# 
   569     061B                     	;# 
   570     061C                     	;# 
   571     061C                     	;# 
   572     0691                     	;# 
   573     0692                     	;# 
   574     0693                     	;# 
   575     0694                     	;# 
   576     0695                     	;# 
   577     0696                     	;# 
   578     0697                     	;# 
   579     0698                     	;# 
   580     0699                     	;# 
   581     069A                     	;# 
   582     069B                     	;# 
   583     069C                     	;# 
   584     069D                     	;# 
   585     069E                     	;# 
   586     069F                     	;# 
   587     0E0F                     	;# 
   588     0E10                     	;# 
   589     0E11                     	;# 
   590     0E12                     	;# 
   591     0E13                     	;# 
   592     0E14                     	;# 
   593     0E15                     	;# 
   594     0E17                     	;# 
   595     0E20                     	;# 
   596     0E21                     	;# 
   597     0E22                     	;# 
   598     0E24                     	;# 
   599     0E25                     	;# 
   600     0E28                     	;# 
   601     0E29                     	;# 
   602     0E2A                     	;# 
   603     0E2B                     	;# 
   604     0E90                     	;# 
   605     0E91                     	;# 
   606     0E92                     	;# 
   607     0E93                     	;# 
   608     0E94                     	;# 
   609     0E95                     	;# 
   610     0E96                     	;# 
   611     0E97                     	;# 
   612     0E98                     	;# 
   613     0E99                     	;# 
   614     0E9A                     	;# 
   615     0E9B                     	;# 
   616     0E9C                     	;# 
   617     0E9D                     	;# 
   618     0E9E                     	;# 
   619     0E9F                     	;# 
   620     0EA0                     	;# 
   621     0EA1                     	;# 
   622     0EA2                     	;# 
   623     0EA3                     	;# 
   624     0EA4                     	;# 
   625     0EA5                     	;# 
   626     0EA6                     	;# 
   627     0EA7                     	;# 
   628     0EA8                     	;# 
   629     0EA9                     	;# 
   630     0EAA                     	;# 
   631     0EAB                     	;# 
   632     0EAC                     	;# 
   633     0EAD                     	;# 
   634     0EAE                     	;# 
   635     0EAF                     	;# 
   636     0EB0                     	;# 
   637     0EB1                     	;# 
   638     0EB2                     	;# 
   639     0F0F                     	;# 
   640     0F10                     	;# 
   641     0F11                     	;# 
   642     0F12                     	;# 
   643     0F13                     	;# 
   644     0F14                     	;# 
   645     0F15                     	;# 
   646     0F16                     	;# 
   647     0F17                     	;# 
   648     0F18                     	;# 
   649     0F19                     	;# 
   650     0F1A                     	;# 
   651     0F1B                     	;# 
   652     0F1C                     	;# 
   653     0F1D                     	;# 
   654     0F1E                     	;# 
   655     0F1F                     	;# 
   656     0F20                     	;# 
   657     0F21                     	;# 
   658     0F22                     	;# 
   659     0F23                     	;# 
   660     0F24                     	;# 
   661     0F25                     	;# 
   662     0F26                     	;# 
   663     0F27                     	;# 
   664     0F28                     	;# 
   665     0F29                     	;# 
   666     0F2A                     	;# 
   667     0F2B                     	;# 
   668     0F2C                     	;# 
   669     0F2D                     	;# 
   670     0F2E                     	;# 
   671     0F2F                     	;# 
   672     0F30                     	;# 
   673     0F31                     	;# 
   674     0F32                     	;# 
   675     0F33                     	;# 
   676     0F34                     	;# 
   677     0F35                     	;# 
   678     0F36                     	;# 
   679     0F37                     	;# 
   680     0FE4                     	;# 
   681     0FE5                     	;# 
   682     0FE6                     	;# 
   683     0FE7                     	;# 
   684     0FE8                     	;# 
   685     0FE9                     	;# 
   686     0FEA                     	;# 
   687     0FEB                     	;# 
   688     0FED                     	;# 
   689     0FEE                     	;# 
   690     0FEF                     	;# 
   691     0000                     	;# 
   692     0001                     	;# 
   693     0002                     	;# 
   694     0003                     	;# 
   695     0004                     	;# 
   696     0005                     	;# 
   697     0006                     	;# 
   698     0007                     	;# 
   699     0008                     	;# 
   700     0009                     	;# 
   701     000A                     	;# 
   702     000B                     	;# 
   703     000C                     	;# 
   704     000D                     	;# 
   705     000E                     	;# 
   706     000F                     	;# 
   707     0010                     	;# 
   708     0011                     	;# 
   709     0012                     	;# 
   710     0013                     	;# 
   711     0015                     	;# 
   712     0016                     	;# 
   713     0016                     	;# 
   714     0017                     	;# 
   715     0018                     	;# 
   716     0019                     	;# 
   717     001A                     	;# 
   718     001B                     	;# 
   719     001C                     	;# 
   720     008C                     	;# 
   721     008D                     	;# 
   722     008E                     	;# 
   723     008F                     	;# 
   724     0090                     	;# 
   725     0091                     	;# 
   726     0092                     	;# 
   727     0093                     	;# 
   728     0095                     	;# 
   729     0096                     	;# 
   730     0097                     	;# 
   731     0098                     	;# 
   732     0099                     	;# 
   733     009A                     	;# 
   734     009B                     	;# 
   735     009B                     	;# 
   736     009C                     	;# 
   737     009D                     	;# 
   738     009E                     	;# 
   739     009F                     	;# 
   740     010C                     	;# 
   741     010D                     	;# 
   742     010E                     	;# 
   743     010F                     	;# 
   744     0110                     	;# 
   745     0111                     	;# 
   746     0112                     	;# 
   747     0113                     	;# 
   748     0114                     	;# 
   749     0115                     	;# 
   750     0116                     	;# 
   751     0117                     	;# 
   752     0118                     	;# 
   753     0119                     	;# 
   754     011A                     	;# 
   755     011B                     	;# 
   756     011B                     	;# 
   757     011C                     	;# 
   758     018C                     	;# 
   759     018D                     	;# 
   760     018E                     	;# 
   761     018F                     	;# 
   762     0190                     	;# 
   763     0191                     	;# 
   764     0191                     	;# 
   765     0192                     	;# 
   766     0193                     	;# 
   767     0193                     	;# 
   768     0194                     	;# 
   769     0195                     	;# 
   770     0196                     	;# 
   771     0197                     	;# 
   772     0199                     	;# 
   773     0199                     	;# 
   774     0199                     	;# 
   775     019A                     	;# 
   776     019A                     	;# 
   777     019A                     	;# 
   778     019B                     	;# 
   779     019B                     	;# 
   780     019B                     	;# 
   781     019B                     	;# 
   782     019B                     	;# 
   783     019C                     	;# 
   784     019C                     	;# 
   785     019C                     	;# 
   786     019D                     	;# 
   787     019D                     	;# 
   788     019D                     	;# 
   789     019E                     	;# 
   790     019E                     	;# 
   791     019E                     	;# 
   792     019F                     	;# 
   793     019F                     	;# 
   794     019F                     	;# 
   795     019F                     	;# 
   796     019F                     	;# 
   797     020C                     	;# 
   798     020D                     	;# 
   799     020E                     	;# 
   800     020F                     	;# 
   801     0210                     	;# 
   802     0211                     	;# 
   803     0211                     	;# 
   804     0212                     	;# 
   805     0212                     	;# 
   806     0213                     	;# 
   807     0213                     	;# 
   808     0214                     	;# 
   809     0214                     	;# 
   810     0215                     	;# 
   811     0215                     	;# 
   812     0215                     	;# 
   813     0215                     	;# 
   814     0216                     	;# 
   815     0216                     	;# 
   816     0217                     	;# 
   817     0217                     	;# 
   818     028C                     	;# 
   819     028D                     	;# 
   820     028E                     	;# 
   821     028F                     	;# 
   822     0290                     	;# 
   823     0291                     	;# 
   824     0291                     	;# 
   825     0292                     	;# 
   826     0293                     	;# 
   827     0293                     	;# 
   828     0298                     	;# 
   829     0298                     	;# 
   830     0299                     	;# 
   831     029A                     	;# 
   832     029A                     	;# 
   833     029E                     	;# 
   834     030C                     	;# 
   835     030D                     	;# 
   836     030E                     	;# 
   837     030F                     	;# 
   838     0310                     	;# 
   839     038C                     	;# 
   840     038D                     	;# 
   841     038E                     	;# 
   842     038F                     	;# 
   843     0390                     	;# 
   844     0391                     	;# 
   845     0392                     	;# 
   846     0393                     	;# 
   847     0394                     	;# 
   848     0395                     	;# 
   849     0396                     	;# 
   850     0397                     	;# 
   851     0398                     	;# 
   852     0399                     	;# 
   853     039D                     	;# 
   854     039E                     	;# 
   855     039F                     	;# 
   856     0415                     	;# 
   857     0416                     	;# 
   858     0417                     	;# 
   859     041C                     	;# 
   860     041D                     	;# 
   861     041E                     	;# 
   862     0498                     	;# 
   863     0498                     	;# 
   864     0499                     	;# 
   865     049A                     	;# 
   866     049B                     	;# 
   867     049B                     	;# 
   868     049C                     	;# 
   869     049D                     	;# 
   870     049E                     	;# 
   871     049F                     	;# 
   872     0511                     	;# 
   873     0515                     	;# 
   874     0617                     	;# 
   875     0618                     	;# 
   876     0619                     	;# 
   877     0619                     	;# 
   878     061A                     	;# 
   879     061B                     	;# 
   880     061C                     	;# 
   881     061C                     	;# 
   882     0691                     	;# 
   883     0692                     	;# 
   884     0693                     	;# 
   885     0694                     	;# 
   886     0695                     	;# 
   887     0696                     	;# 
   888     0697                     	;# 
   889     0698                     	;# 
   890     0699                     	;# 
   891     069A                     	;# 
   892     069B                     	;# 
   893     069C                     	;# 
   894     069D                     	;# 
   895     069E                     	;# 
   896     069F                     	;# 
   897     0E0F                     	;# 
   898     0E10                     	;# 
   899     0E11                     	;# 
   900     0E12                     	;# 
   901     0E13                     	;# 
   902     0E14                     	;# 
   903     0E15                     	;# 
   904     0E17                     	;# 
   905     0E20                     	;# 
   906     0E21                     	;# 
   907     0E22                     	;# 
   908     0E24                     	;# 
   909     0E25                     	;# 
   910     0E28                     	;# 
   911     0E29                     	;# 
   912     0E2A                     	;# 
   913     0E2B                     	;# 
   914     0E90                     	;# 
   915     0E91                     	;# 
   916     0E92                     	;# 
   917     0E93                     	;# 
   918     0E94                     	;# 
   919     0E95                     	;# 
   920     0E96                     	;# 
   921     0E97                     	;# 
   922     0E98                     	;# 
   923     0E99                     	;# 
   924     0E9A                     	;# 
   925     0E9B                     	;# 
   926     0E9C                     	;# 
   927     0E9D                     	;# 
   928     0E9E                     	;# 
   929     0E9F                     	;# 
   930     0EA0                     	;# 
   931     0EA1                     	;# 
   932     0EA2                     	;# 
   933     0EA3                     	;# 
   934     0EA4                     	;# 
   935     0EA5                     	;# 
   936     0EA6                     	;# 
   937     0EA7                     	;# 
   938     0EA8                     	;# 
   939     0EA9                     	;# 
   940     0EAA                     	;# 
   941     0EAB                     	;# 
   942     0EAC                     	;# 
   943     0EAD                     	;# 
   944     0EAE                     	;# 
   945     0EAF                     	;# 
   946     0EB0                     	;# 
   947     0EB1                     	;# 
   948     0EB2                     	;# 
   949     0F0F                     	;# 
   950     0F10                     	;# 
   951     0F11                     	;# 
   952     0F12                     	;# 
   953     0F13                     	;# 
   954     0F14                     	;# 
   955     0F15                     	;# 
   956     0F16                     	;# 
   957     0F17                     	;# 
   958     0F18                     	;# 
   959     0F19                     	;# 
   960     0F1A                     	;# 
   961     0F1B                     	;# 
   962     0F1C                     	;# 
   963     0F1D                     	;# 
   964     0F1E                     	;# 
   965     0F1F                     	;# 
   966     0F20                     	;# 
   967     0F21                     	;# 
   968     0F22                     	;# 
   969     0F23                     	;# 
   970     0F24                     	;# 
   971     0F25                     	;# 
   972     0F26                     	;# 
   973     0F27                     	;# 
   974     0F28                     	;# 
   975     0F29                     	;# 
   976     0F2A                     	;# 
   977     0F2B                     	;# 
   978     0F2C                     	;# 
   979     0F2D                     	;# 
   980     0F2E                     	;# 
   981     0F2F                     	;# 
   982     0F30                     	;# 
   983     0F31                     	;# 
   984     0F32                     	;# 
   985     0F33                     	;# 
   986     0F34                     	;# 
   987     0F35                     	;# 
   988     0F36                     	;# 
   989     0F37                     	;# 
   990     0FE4                     	;# 
   991     0FE5                     	;# 
   992     0FE6                     	;# 
   993     0FE7                     	;# 
   994     0FE8                     	;# 
   995     0FE9                     	;# 
   996     0FEA                     	;# 
   997     0FEB                     	;# 
   998     0FED                     	;# 
   999     0FEE                     	;# 
  1000     0FEF                     	;# 
  1001     0011                     _PIR1bits	set	17
  1002     000B                     _INTCONbits	set	11
  1003     008C                     _TRISAbits	set	140
  1004     008D                     _TRISBbits	set	141
  1005     008F                     _TRISDbits	set	143
  1006     04CF                     _SPLLEN	set	1231
  1007     04CE                     _IRCF3	set	1230
  1008     04CD                     _IRCF2	set	1229
  1009     04CC                     _IRCF1	set	1228
  1010     04CB                     _IRCF0	set	1227
  1011     04C9                     _SCS1	set	1225
  1012     04C8                     _SCS0	set	1224
  1013     010F                     _LATDbits	set	271
  1014     019A                     _TX1REG	set	410
  1015     0199                     _RC1REG	set	409
  1016     019D                     _RC1STAbits	set	413
  1017     019B                     _SPBRGL	set	411
  1018     018C                     _ANSELAbits	set	396
  1019     018D                     _ANSELBbits	set	397
  1020     018D                     _ANSELB	set	397
  1021     0CF5                     _TXEN	set	3317
  1022     0CEC                     _CREN	set	3308
  1023     0CEF                     _SPEN	set	3311
  1024     0CF4                     _SYNC	set	3316
  1025     0CFB                     _BRG16	set	3323
  1026     0CF2                     _BRGH	set	3314
  1027     0298                     _CCPR2L	set	664
  1028     0291                     _CCPR1L	set	657
  1029     029A                     _CCP2CONbits	set	666
  1030     0293                     _CCP1CONbits	set	659
  1031     029E                     _CCPTMRSbits	set	670
  1032     0393                     _IOCAFbits	set	915
  1033     0392                     _IOCANbits	set	914
  1034     041D                     _PR6	set	1053
  1035     041E                     _T6CONbits	set	1054
  1036     0E24                     _RXPPSbits	set	3620
  1037     0E0F                     _PPSLOCKbits	set	3599
  1038     0E0F                     _PPSLOCK	set	3599
  1039     0E9A                     _RB2PPSbits	set	3738
  1040     0E99                     _RB1PPSbits	set	3737
  1041     0E98                     _RB0PPSbits	set	3736
  1042                           
  1043                           	psect	stringtext1
  1044     03A1                     __pstringtext1:
  1045     03A1                     STR_1:
  1046     03A1  3445               	retlw	69	;'E'
  1047     03A2  346E               	retlw	110	;'n'
  1048     03A3  3463               	retlw	99	;'c'
  1049     03A4  346F               	retlw	111	;'o'
  1050     03A5  3464               	retlw	100	;'d'
  1051     03A6  3465               	retlw	101	;'e'
  1052     03A7  3472               	retlw	114	;'r'
  1053     03A8  3441               	retlw	65	;'A'
  1054     03A9  343A               	retlw	58	;':'
  1055     03AA  3420               	retlw	32	;' '
  1056     03AB  3400               	retlw	0
  1057                           
  1058                           	psect	stringtext2
  1059     03AC                     __pstringtext2:
  1060     03AC                     STR_3:
  1061     03AC  3445               	retlw	69	;'E'
  1062     03AD  346E               	retlw	110	;'n'
  1063     03AE  3463               	retlw	99	;'c'
  1064     03AF  346F               	retlw	111	;'o'
  1065     03B0  3464               	retlw	100	;'d'
  1066     03B1  3465               	retlw	101	;'e'
  1067     03B2  3472               	retlw	114	;'r'
  1068     03B3  3442               	retlw	66	;'B'
  1069     03B4  343A               	retlw	58	;':'
  1070     03B5  3420               	retlw	32	;' '
  1071     03B6  3400               	retlw	0
  1072                           
  1073                           	psect	stringtext3
  1074     03D2                     __pstringtext3:
  1075     03D2                     STR_2:
  1076     03D2  3409               	retlw	9
  1077     03D3  3409               	retlw	9
  1078     03D4  3400               	retlw	0
  1079                           
  1080                           	psect	stringtext4
  1081     03E1                     __pstringtext4:
  1082     03E1                     STR_4:
  1083     03E1  340A               	retlw	10
  1084     03E2  3400               	retlw	0
  1085                           
  1086                           	psect	stringtext5
  1087     0000                     __pstringtext5:
  1088                           
  1089                           	psect	cinit
  1090     0024                     start_initialization:	
  1091                           ; #config settings
  1092                           
  1093     0024                     __initialization:
  1094                           
  1095                           ; Clear objects allocated to BANK0
  1096     0024  0020               	movlb	0	; select bank0
  1097     0025  01BF               	clrf	__pbssBANK0& (0+127)
  1098     0026  01C0               	clrf	(__pbssBANK0+1)& (0+127)
  1099     0027  01C1               	clrf	(__pbssBANK0+2)& (0+127)
  1100     0028  01C2               	clrf	(__pbssBANK0+3)& (0+127)
  1101     0029                     end_of_initialization:	
  1102                           ;End of C runtime variable initialization code
  1103                           
  1104     0029                     __end_of__initialization:
  1105     0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1106     002A  0020               	movlb	0
  1107     002B  3181  2956         	ljmp	_main	;jump to C main() function
  1108                           
  1109                           	psect	bssBANK0
  1110     003F                     __pbssBANK0:
  1111     003F                     _counterB:
  1112     003F                     	ds	2
  1113     0041                     _counterA:
  1114     0041                     	ds	2
  1115                           
  1116                           	psect	cstackCOMMON
  1117     0070                     __pcstackCOMMON:
  1118     0070                     ?_internal_32:
  1119     0070                     ??_internal_32:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122     0070                     ?_initMain:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     0070                     ??_initMain:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128     0070                     ?_leftEnable:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131     0070                     ??_leftEnable:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134     0070                     ?_leftDisable:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137     0070                     ??_leftDisable:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140     0070                     ?_rightEnable:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143     0070                     ??_rightEnable:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146     0070                     ?_rightDisable:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149     0070                     ??_rightDisable:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152     0070                     ?_rightPWMDuty:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155     0070                     ?_leftPWMDuty:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158     0070                     ?_motorStop:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161     0070                     ?_main:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164     0070                     ?_isr:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     0070                     ??_isr:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0070                     ?_EUSART_Write:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     0070                     ??_EUSART_Write:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176     0070                     ?___wmul:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179     0070                     ?___awdiv:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182     0070                     ?___awmod:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185     0070                     ?___aldiv:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188     0070                     EUSART_Write@txData:	
  1189                           ; 4 bytes @ 0x0
  1190                           
  1191     0070                     rightPWMDuty@duty:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     0070                     leftPWMDuty@duty:	
  1195                           ; 2 bytes @ 0x0
  1196                           
  1197     0070                     ___wmul@multiplier:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200     0070                     ___awdiv@divisor:	
  1201                           ; 2 bytes @ 0x0
  1202                           
  1203     0070                     ___awmod@divisor:	
  1204                           ; 2 bytes @ 0x0
  1205                           
  1206     0070                     ___aldiv@divisor:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x0
  1211     0070                     	ds	1
  1212     0071                     ?_EUSART_Write_Text:
  1213     0071                     EUSART_Write_Text@text:	
  1214                           ; 1 bytes @ 0x1
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0x1
  1218     0071                     	ds	1
  1219     0072                     ??_rightPWMDuty:
  1220     0072                     ??_leftPWMDuty:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223     0072                     ?_motorTurnRight:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226     0072                     ??_motorStop:	
  1227                           ; 1 bytes @ 0x2
  1228                           
  1229     0072                     motorTurnRight@motorSpeed:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232     0072                     ___wmul@multiplicand:	
  1233                           ; 2 bytes @ 0x2
  1234                           
  1235     0072                     ___awdiv@dividend:	
  1236                           ; 2 bytes @ 0x2
  1237                           
  1238     0072                     ___awmod@dividend:	
  1239                           ; 2 bytes @ 0x2
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x2
  1243     0072                     	ds	1
  1244     0073                     ??_EUSART_Write_Text:
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247     0073                     	ds	1
  1248     0074                     ??_motorTurnRight:
  1249     0074                     ??___wmul:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252     0074                     ??___awdiv:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255     0074                     ??___awmod:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258     0074                     EUSART_Write_Text@i:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261     0074                     ___wmul@product:	
  1262                           ; 2 bytes @ 0x4
  1263                           
  1264     0074                     ___aldiv@dividend:	
  1265                           ; 2 bytes @ 0x4
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x4
  1269     0074                     	ds	1
  1270     0075                     ___awdiv@counter:
  1271     0075                     ___awmod@counter:	
  1272                           ; 1 bytes @ 0x5
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x5
  1276     0075                     	ds	1
  1277     0076                     ___awdiv@sign:
  1278     0076                     ___awmod@sign:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x6
  1283     0076                     	ds	1
  1284     0077                     ___awdiv@quotient:
  1285                           
  1286                           ; 2 bytes @ 0x7
  1287     0077                     	ds	1
  1288     0078                     ??___aldiv:
  1289                           
  1290                           ; 1 bytes @ 0x8
  1291     0078                     	ds	1
  1292     0079                     ?_itoa:
  1293     0079                     EUSART_Initialize@x:	
  1294                           ; 1 bytes @ 0x9
  1295                           
  1296     0079                     itoa@d:	
  1297                           ; 2 bytes @ 0x9
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x9
  1301     0079                     	ds	2
  1302     007B                     ?_EUSART_Write_Integer:
  1303     007B                     ??_itoa:	
  1304                           ; 1 bytes @ 0xB
  1305                           
  1306     007B                     EUSART_Write_Integer@value_to_send:	
  1307                           ; 1 bytes @ 0xB
  1308                           
  1309                           
  1310                           ; 2 bytes @ 0xB
  1311     007B                     	ds	2
  1312     007D                     ??_EUSART_Write_Integer:
  1313                           
  1314                           ; 1 bytes @ 0xD
  1315     007D                     	ds	1
  1316                           
  1317                           	psect	cstackBANK0
  1318     0020                     __pcstackBANK0:
  1319     0020                     ___aldiv@counter:
  1320     0020                     itoa@num:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323                           
  1324                           ; 2 bytes @ 0x0
  1325     0020                     	ds	1
  1326     0021                     ___aldiv@sign:
  1327                           
  1328                           ; 1 bytes @ 0x1
  1329     0021                     	ds	1
  1330     0022                     itoa@temp:
  1331     0022                     ___aldiv@quotient:	
  1332                           ; 2 bytes @ 0x2
  1333                           
  1334                           
  1335                           ; 4 bytes @ 0x2
  1336     0022                     	ds	2
  1337     0024                     itoa@buf:
  1338                           
  1339                           ; 1 bytes @ 0x4
  1340     0024                     	ds	1
  1341     0025                     itoa@div:
  1342                           
  1343                           ; 2 bytes @ 0x5
  1344     0025                     	ds	1
  1345     0026                     ?_EUSART_Initialize:
  1346     0026                     EUSART_Initialize@baudrate:	
  1347                           ; 1 bytes @ 0x6
  1348                           
  1349                           
  1350                           ; 4 bytes @ 0x6
  1351     0026                     	ds	1
  1352     0027                     EUSART_Write_Integer@buffer:
  1353                           
  1354                           ; 20 bytes @ 0x7
  1355     0027                     	ds	3
  1356     002A                     ??_EUSART_Initialize:
  1357                           
  1358                           ; 1 bytes @ 0xA
  1359     002A                     	ds	17
  1360     003B                     EUSART_Write_Integer@ptr:
  1361                           
  1362                           ; 1 bytes @ 0x1B
  1363     003B                     	ds	1
  1364     003C                     EUSART_Write_Integer@temp_ptr:
  1365                           
  1366                           ; 1 bytes @ 0x1C
  1367     003C                     	ds	1
  1368     003D                     ??_main:
  1369                           
  1370                           ; 1 bytes @ 0x1D
  1371     003D                     	ds	2
  1372                           
  1373                           	psect	maintext
  1374     0156                     __pmaintext:	
  1375 ;;
  1376 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1377 ;;
  1378 ;; *************** function _main *****************
  1379 ;; Defined at:
  1380 ;;		line 280 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : B1F/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1398 ;;Total ram usage:        2 bytes
  1399 ;; Hardware stack levels required when called: 4
  1400 ;; This function calls:
  1401 ;;		_EUSART_Initialize
  1402 ;;		_EUSART_Write_Integer
  1403 ;;		_EUSART_Write_Text
  1404 ;;		_initMain
  1405 ;;		_motorStop
  1406 ;;		_motorTurnRight
  1407 ;; This function is called by:
  1408 ;;		Startup code after reset
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412     0156                     _main:	
  1413                           ;psect for function _main
  1414                           
  1415     0156                     l1402:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1418                           
  1419                           
  1420                           ;main.c: 281:     initMain();
  1421     0156  3181  21B7  3181   	fcall	_initMain
  1422                           
  1423                           ;main.c: 284:     EUSART_Initialize(19200);
  1424     0159  3000               	movlw	0
  1425     015A  0020               	movlb	0	; select bank0
  1426     015B  00A9               	movwf	EUSART_Initialize@baudrate+3
  1427     015C  3000               	movlw	0
  1428     015D  00A8               	movwf	EUSART_Initialize@baudrate+2
  1429     015E  304B               	movlw	75
  1430     015F  00A7               	movwf	EUSART_Initialize@baudrate+1
  1431     0160  3000               	movlw	0
  1432     0161  00A6               	movwf	EUSART_Initialize@baudrate
  1433     0162  3182  22CA  3181   	fcall	_EUSART_Initialize
  1434     0165                     l1404:
  1435                           
  1436                           ;main.c: 287:     {;main.c: 288:         _delay((unsigned long)((5000)*(32000000/4000.0)
      +                          ));
  1437     0165  30CB               	movlw	203
  1438     0166  0020               	movlb	0	; select bank0
  1439     0167  00BE               	movwf	??_main+1
  1440     0168  30EC               	movlw	236
  1441     0169  00BD               	movwf	??_main
  1442     016A  3084               	movlw	132
  1443     016B                     u927:
  1444     016B  0B89               	decfsz	9,f
  1445     016C  296B               	goto	u927
  1446     016D  0BBD               	decfsz	??_main,f
  1447     016E  296B               	goto	u927
  1448     016F  0BBE               	decfsz	??_main+1,f
  1449     0170  296B               	goto	u927
  1450     0171  0000               	nop
  1451     0172                     l1406:
  1452                           
  1453                           ;main.c: 290:         motorTurnRight(192);
  1454     0172  30C0               	movlw	192
  1455     0173  00F2               	movwf	motorTurnRight@motorSpeed
  1456     0174  3000               	movlw	0
  1457     0175  00F3               	movwf	motorTurnRight@motorSpeed+1
  1458     0176  3183  237A  3181   	fcall	_motorTurnRight
  1459                           
  1460                           ;main.c: 291:         _delay((unsigned long)((1000)*(32000000/4000.0)));
  1461     0179  3029               	movlw	41
  1462     017A  0020               	movlb	0	; select bank0
  1463     017B  00BE               	movwf	??_main+1
  1464     017C  3096               	movlw	150
  1465     017D  00BD               	movwf	??_main
  1466     017E  307F               	movlw	127
  1467     017F                     u937:
  1468     017F  0B89               	decfsz	9,f
  1469     0180  297F               	goto	u937
  1470     0181  0BBD               	decfsz	??_main,f
  1471     0182  297F               	goto	u937
  1472     0183  0BBE               	decfsz	??_main+1,f
  1473     0184  297F               	goto	u937
  1474     0185                     l1408:
  1475                           
  1476                           ;main.c: 293:         motorStop();
  1477     0185  3183  238E  3181   	fcall	_motorStop
  1478     0188                     l1410:
  1479                           
  1480                           ;main.c: 296:         EUSART_Write_Text("EncoderA: ");
  1481     0188  30A1               	movlw	low (STR_1| (0+32768))
  1482     0189  00F1               	movwf	EUSART_Write_Text@text
  1483     018A  3083               	movlw	high (STR_1| (0+32768))
  1484     018B  00F2               	movwf	EUSART_Write_Text@text+1
  1485     018C  3183  235D  3181   	fcall	_EUSART_Write_Text
  1486     018F                     l1412:
  1487                           
  1488                           ;main.c: 297:         EUSART_Write_Integer(counterA);
  1489     018F  0020               	movlb	0	; select bank0
  1490     0190  0842               	movf	_counterA+1,w	;volatile
  1491     0191  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  1492     0192  0841               	movf	_counterA,w	;volatile
  1493     0193  00FB               	movwf	EUSART_Write_Integer@value_to_send
  1494     0194  3183  231A  3181   	fcall	_EUSART_Write_Integer
  1495     0197                     l1414:
  1496                           
  1497                           ;main.c: 298:         EUSART_Write_Text("\t\t");
  1498     0197  30D2               	movlw	low (STR_2| (0+32768))
  1499     0198  00F1               	movwf	EUSART_Write_Text@text
  1500     0199  3083               	movlw	high (STR_2| (0+32768))
  1501     019A  00F2               	movwf	EUSART_Write_Text@text+1
  1502     019B  3183  235D  3181   	fcall	_EUSART_Write_Text
  1503     019E                     l1416:
  1504                           
  1505                           ;main.c: 301:         EUSART_Write_Text("EncoderB: ");
  1506     019E  30AC               	movlw	low (STR_3| (0+32768))
  1507     019F  00F1               	movwf	EUSART_Write_Text@text
  1508     01A0  3083               	movlw	high (STR_3| (0+32768))
  1509     01A1  00F2               	movwf	EUSART_Write_Text@text+1
  1510     01A2  3183  235D  3181   	fcall	_EUSART_Write_Text
  1511     01A5                     l1418:
  1512                           
  1513                           ;main.c: 302:         EUSART_Write_Integer(counterB);
  1514     01A5  0020               	movlb	0	; select bank0
  1515     01A6  0840               	movf	_counterB+1,w	;volatile
  1516     01A7  00FC               	movwf	EUSART_Write_Integer@value_to_send+1
  1517     01A8  083F               	movf	_counterB,w	;volatile
  1518     01A9  00FB               	movwf	EUSART_Write_Integer@value_to_send
  1519     01AA  3183  231A  3181   	fcall	_EUSART_Write_Integer
  1520     01AD                     l1420:
  1521                           
  1522                           ;main.c: 303:         EUSART_Write_Text("\n");
  1523     01AD  30E1               	movlw	low (STR_4| (0+32768))
  1524     01AE  00F1               	movwf	EUSART_Write_Text@text
  1525     01AF  3083               	movlw	high (STR_4| (0+32768))
  1526     01B0  00F2               	movwf	EUSART_Write_Text@text+1
  1527     01B1  3183  235D  3181   	fcall	_EUSART_Write_Text
  1528     01B4                     l96:	
  1529                           ;main.c: 305:         while(1);
  1530                           
  1531     01B4                     l97:
  1532     01B4  29B4               	goto	l96
  1533     01B5  3180  2822         	ljmp	start
  1534     01B7                     __end_of_main:
  1535                           
  1536                           	psect	text1
  1537     037A                     __ptext1:	
  1538 ;; *************** function _motorTurnRight *****************
  1539 ;; Defined at:
  1540 ;;		line 238 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  motorSpeed      2    2[COMMON] unsigned short 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 2
  1561 ;; This function calls:
  1562 ;;		_leftEnable
  1563 ;;		_leftPWMDuty
  1564 ;;		_rightEnable
  1565 ;;		_rightPWMDuty
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571     037A                     _motorTurnRight:	
  1572                           ;psect for function _motorTurnRight
  1573                           
  1574     037A                     l1346:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _motorTurnRight: [wreg+status,2+status,0+pclath+cstack]
  1577                           
  1578                           
  1579                           ;main.c: 238: void motorTurnRight(uint16_t motorSpeed);main.c: 239: {;main.c: 241:    le
      +                          ftEnable();
  1580     037A  3183  23D8  3183   	fcall	_leftEnable
  1581                           
  1582                           ;main.c: 242:    rightEnable();
  1583     037D  3183  23D5  3183   	fcall	_rightEnable
  1584     0380                     l1348:
  1585                           
  1586                           ;main.c: 245:    leftPWMDuty(motorSpeed);
  1587     0380  0873               	movf	motorTurnRight@motorSpeed+1,w
  1588     0381  00F1               	movwf	leftPWMDuty@duty+1
  1589     0382  0872               	movf	motorTurnRight@motorSpeed,w
  1590     0383  00F0               	movwf	leftPWMDuty@duty
  1591     0384  3183  23CE  3183   	fcall	_leftPWMDuty
  1592     0387                     l1350:
  1593                           
  1594                           ;main.c: 248:    rightPWMDuty(0);
  1595     0387  3000               	movlw	0
  1596     0388  00F0               	movwf	rightPWMDuty@duty
  1597     0389  00F1               	movwf	rightPWMDuty@duty+1
  1598     038A  3183  23CA  3183   	fcall	_rightPWMDuty
  1599     038D                     l87:
  1600     038D  0008               	return
  1601     038E                     __end_of_motorTurnRight:
  1602                           
  1603                           	psect	text2
  1604     03D5                     __ptext2:	
  1605 ;; *************** function _rightEnable *****************
  1606 ;; Defined at:
  1607 ;;		line 187 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		None
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_motorTurnRight
  1632 ;;		_motorTurnLeft
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     03D5                     _rightEnable:	
  1637                           ;psect for function _rightEnable
  1638                           
  1639     03D5                     l1202:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _rightEnable: []
  1642                           
  1643                           
  1644                           ;main.c: 189:     LATDbits.LATD1 = 1;
  1645     03D5  0022               	movlb	2	; select bank2
  1646     03D6  148F               	bsf	15,1	;volatile
  1647     03D7                     l72:
  1648     03D7  0008               	return
  1649     03D8                     __end_of_rightEnable:
  1650                           
  1651                           	psect	text3
  1652     03D8                     __ptext3:	
  1653 ;; *************** function _leftEnable *****************
  1654 ;; Defined at:
  1655 ;;		line 175 in file "main.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		None
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_motorTurnRight
  1680 ;;		_motorTurnLeft
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684     03D8                     _leftEnable:	
  1685                           ;psect for function _leftEnable
  1686                           
  1687     03D8                     l1198:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _leftEnable: []
  1690                           
  1691                           
  1692                           ;main.c: 177:    LATDbits.LATD0 = 1;
  1693     03D8  0022               	movlb	2	; select bank2
  1694     03D9  140F               	bsf	15,0	;volatile
  1695     03DA                     l66:
  1696     03DA  0008               	return
  1697     03DB                     __end_of_leftEnable:
  1698                           
  1699                           	psect	text4
  1700     038E                     __ptext4:	
  1701 ;; *************** function _motorStop *****************
  1702 ;; Defined at:
  1703 ;;		line 259 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 2
  1724 ;; This function calls:
  1725 ;;		_leftDisable
  1726 ;;		_leftPWMDuty
  1727 ;;		_rightDisable
  1728 ;;		_rightPWMDuty
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734     038E                     _motorStop:	
  1735                           ;psect for function _motorStop
  1736                           
  1737     038E                     l1352:	
  1738                           ;incstack = 0
  1739                           ; Regs used in _motorStop: [wreg+status,2+status,0+pclath+cstack]
  1740                           
  1741                           
  1742                           ;main.c: 262:    leftDisable();
  1743     038E  3183  23DE  3183   	fcall	_leftDisable
  1744                           
  1745                           ;main.c: 263:    rightDisable();
  1746     0391  3183  23DB  3183   	fcall	_rightDisable
  1747     0394                     l1354:
  1748                           
  1749                           ;main.c: 266:    leftPWMDuty(0);
  1750     0394  3000               	movlw	0
  1751     0395  00F0               	movwf	leftPWMDuty@duty
  1752     0396  00F1               	movwf	leftPWMDuty@duty+1
  1753     0397  3183  23CE  3183   	fcall	_leftPWMDuty
  1754     039A                     l1356:
  1755                           
  1756                           ;main.c: 269:    rightPWMDuty(0);
  1757     039A  3000               	movlw	0
  1758     039B  00F0               	movwf	rightPWMDuty@duty
  1759     039C  00F1               	movwf	rightPWMDuty@duty+1
  1760     039D  3183  23CA  3183   	fcall	_rightPWMDuty
  1761     03A0                     l90:
  1762     03A0  0008               	return
  1763     03A1                     __end_of_motorStop:
  1764                           
  1765                           	psect	text5
  1766     03CA                     __ptext5:	
  1767 ;; *************** function _rightPWMDuty *****************
  1768 ;; Defined at:
  1769 ;;		line 199 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  duty            2    0[COMMON] unsigned short 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_motorTurnRight
  1794 ;;		_motorStop
  1795 ;;		_motorTurnLeft
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     03CA                     _rightPWMDuty:	
  1800                           ;psect for function _rightPWMDuty
  1801                           
  1802     03CA                     l1206:	
  1803                           ;incstack = 0
  1804                           ; Regs used in _rightPWMDuty: [wreg]
  1805                           
  1806                           
  1807                           ;main.c: 199: void rightPWMDuty(uint16_t duty);main.c: 200: {;main.c: 201:     CCPR1L = 
      +                          duty;
  1808     03CA  0870               	movf	rightPWMDuty@duty,w
  1809     03CB  0025               	movlb	5	; select bank5
  1810     03CC  0091               	movwf	17	;volatile
  1811     03CD                     l78:
  1812     03CD  0008               	return
  1813     03CE                     __end_of_rightPWMDuty:
  1814                           
  1815                           	psect	text6
  1816     03DB                     __ptext6:	
  1817 ;; *************** function _rightDisable *****************
  1818 ;; Defined at:
  1819 ;;		line 193 in file "main.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		None
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_motorStop
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847     03DB                     _rightDisable:	
  1848                           ;psect for function _rightDisable
  1849                           
  1850     03DB                     l1204:	
  1851                           ;incstack = 0
  1852                           ; Regs used in _rightDisable: []
  1853                           
  1854                           
  1855                           ;main.c: 195:     LATDbits.LATD1 = 0;
  1856     03DB  0022               	movlb	2	; select bank2
  1857     03DC  108F               	bcf	15,1	;volatile
  1858     03DD                     l75:
  1859     03DD  0008               	return
  1860     03DE                     __end_of_rightDisable:
  1861                           
  1862                           	psect	text7
  1863     03CE                     __ptext7:	
  1864 ;; *************** function _leftPWMDuty *****************
  1865 ;; Defined at:
  1866 ;;		line 205 in file "main.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  duty            2    0[COMMON] unsigned short 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_motorTurnRight
  1891 ;;		_motorStop
  1892 ;;		_motorTurnLeft
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896     03CE                     _leftPWMDuty:	
  1897                           ;psect for function _leftPWMDuty
  1898                           
  1899     03CE                     l1208:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _leftPWMDuty: [wreg]
  1902                           
  1903                           
  1904                           ;main.c: 205: void leftPWMDuty(uint16_t duty);main.c: 206: {;main.c: 207:     CCPR2L = d
      +                          uty;
  1905     03CE  0870               	movf	leftPWMDuty@duty,w
  1906     03CF  0025               	movlb	5	; select bank5
  1907     03D0  0098               	movwf	24	;volatile
  1908     03D1                     l81:
  1909     03D1  0008               	return
  1910     03D2                     __end_of_leftPWMDuty:
  1911                           
  1912                           	psect	text8
  1913     03DE                     __ptext8:	
  1914 ;; *************** function _leftDisable *****************
  1915 ;; Defined at:
  1916 ;;		line 181 in file "main.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		None
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_motorStop
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944     03DE                     _leftDisable:	
  1945                           ;psect for function _leftDisable
  1946                           
  1947     03DE                     l1200:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _leftDisable: []
  1950                           
  1951                           
  1952                           ;main.c: 183:     LATDbits.LATD0 = 0;
  1953     03DE  0022               	movlb	2	; select bank2
  1954     03DF  100F               	bcf	15,0	;volatile
  1955     03E0                     l69:
  1956     03E0  0008               	return
  1957     03E1                     __end_of_leftDisable:
  1958                           
  1959                           	psect	text9
  1960     01B7                     __ptext9:	
  1961 ;; *************** function _initMain *****************
  1962 ;; Defined at:
  1963 ;;		line 56 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0, pclath, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        2 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 2
  1984 ;; This function calls:
  1985 ;;		_internal_32
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991     01B7                     _initMain:	
  1992                           ;psect for function _initMain
  1993                           
  1994     01B7                     l1272:	
  1995                           ;incstack = 0
  1996                           ; Regs used in _initMain: [wreg+status,2+status,0+pclath+cstack]
  1997                           
  1998                           
  1999                           ;main.c: 58:     internal_32();
  2000     01B7  3183  23C1  3181   	fcall	_internal_32
  2001     01BA                     l1274:
  2002                           
  2003                           ;main.c: 59:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2004     01BA  3005               	movlw	5
  2005     01BB  00F1               	movwf	??_initMain+1
  2006     01BC  300F               	movlw	15
  2007     01BD  00F0               	movwf	??_initMain
  2008     01BE  30F1               	movlw	241
  2009     01BF                     u947:
  2010     01BF  0B89               	decfsz	9,f
  2011     01C0  29BF               	goto	u947
  2012     01C1  0BF0               	decfsz	??_initMain,f
  2013     01C2  29BF               	goto	u947
  2014     01C3  0BF1               	decfsz	??_initMain+1,f
  2015     01C4  29BF               	goto	u947
  2016     01C5  0000               	nop
  2017     01C6                     l1276:
  2018                           
  2019                           ;main.c: 64:     TRISDbits.TRISD1 = 0;
  2020     01C6  0021               	movlb	1	; select bank1
  2021     01C7  108F               	bcf	15,1	;volatile
  2022     01C8                     l1278:
  2023                           
  2024                           ;main.c: 67:     TRISBbits.TRISB0 = 0;
  2025     01C8  100D               	bcf	13,0	;volatile
  2026     01C9                     l1280:
  2027                           
  2028                           ;main.c: 70:     TRISBbits.TRISB1 = 0;
  2029     01C9  108D               	bcf	13,1	;volatile
  2030     01CA                     l1282:
  2031                           
  2032                           ;main.c: 73:     ANSELB = 0;
  2033     01CA  0023               	movlb	3	; select bank3
  2034     01CB  018D               	clrf	13	;volatile
  2035     01CC                     l1284:
  2036                           
  2037                           ;main.c: 76:     TRISDbits.TRISD0 = 0;
  2038     01CC  0021               	movlb	1	; select bank1
  2039     01CD  100F               	bcf	15,0	;volatile
  2040     01CE                     l1286:
  2041                           
  2042                           ;main.c: 77:     TRISDbits.TRISD1 = 0;
  2043     01CE  108F               	bcf	15,1	;volatile
  2044     01CF                     l1288:
  2045                           
  2046                           ;main.c: 84:     CCPTMRSbits.C1TSEL = 0b10;
  2047     01CF  0025               	movlb	5	; select bank5
  2048     01D0  081E               	movf	30,w	;volatile
  2049     01D1  39FC               	andlw	-4
  2050     01D2  3802               	iorlw	2
  2051     01D3  009E               	movwf	30	;volatile
  2052     01D4                     l1290:
  2053                           
  2054                           ;main.c: 85:     CCPTMRSbits.C2TSEL = 0b10;
  2055     01D4  081E               	movf	30,w	;volatile
  2056     01D5  39F3               	andlw	-13
  2057     01D6  3808               	iorlw	8
  2058     01D7  009E               	movwf	30	;volatile
  2059     01D8                     l1292:
  2060                           
  2061                           ;main.c: 99:     T6CONbits.T6CKPS = 0b00;
  2062     01D8  30FC               	movlw	-4
  2063     01D9  0028               	movlb	8	; select bank8
  2064     01DA  059E               	andwf	30,f	;volatile
  2065     01DB                     l1294:
  2066                           
  2067                           ;main.c: 102:     T6CONbits.TMR6ON = 1;
  2068     01DB  151E               	bsf	30,2	;volatile
  2069     01DC                     l1296:
  2070                           
  2071                           ;main.c: 105:     PR6 = 255;
  2072     01DC  30FF               	movlw	255
  2073     01DD  009D               	movwf	29	;volatile
  2074     01DE                     l1298:
  2075                           
  2076                           ;main.c: 114:     CCP1CONbits.DC1B = 00;
  2077     01DE  30CF               	movlw	-49
  2078     01DF  0025               	movlb	5	; select bank5
  2079     01E0  0593               	andwf	19,f	;volatile
  2080     01E1                     l1300:
  2081                           
  2082                           ;main.c: 117:     CCP1CONbits.CCP1M = 0b1100;
  2083     01E1  0813               	movf	19,w	;volatile
  2084     01E2  39F0               	andlw	-16
  2085     01E3  380C               	iorlw	12
  2086     01E4  0093               	movwf	19	;volatile
  2087     01E5                     l1302:
  2088                           
  2089                           ;main.c: 122:     CCP2CONbits.DC2B = 00;
  2090     01E5  30CF               	movlw	-49
  2091     01E6  059A               	andwf	26,f	;volatile
  2092     01E7                     l1304:
  2093                           
  2094                           ;main.c: 125:     CCP2CONbits.CCP2M = 0b1100;
  2095     01E7  081A               	movf	26,w	;volatile
  2096     01E8  39F0               	andlw	-16
  2097     01E9  380C               	iorlw	12
  2098     01EA  009A               	movwf	26	;volatile
  2099     01EB                     l1306:
  2100                           
  2101                           ;main.c: 127:     TRISBbits.TRISB2 = 0;
  2102     01EB  0021               	movlb	1	; select bank1
  2103     01EC  110D               	bcf	13,2	;volatile
  2104     01ED                     l1308:
  2105                           
  2106                           ;main.c: 128:     ANSELBbits.ANSB2 = 0;
  2107     01ED  0023               	movlb	3	; select bank3
  2108     01EE  110D               	bcf	13,2	;volatile
  2109     01EF                     l1310:
  2110                           
  2111                           ;main.c: 134:     TRISAbits.TRISA0 = 1;
  2112     01EF  0021               	movlb	1	; select bank1
  2113     01F0  140C               	bsf	12,0	;volatile
  2114     01F1                     l1312:
  2115                           
  2116                           ;main.c: 135:     TRISAbits.TRISA1 = 1;
  2117     01F1  148C               	bsf	12,1	;volatile
  2118     01F2                     l1314:
  2119                           
  2120                           ;main.c: 137:     ANSELAbits.ANSA0 = 0;
  2121     01F2  0023               	movlb	3	; select bank3
  2122     01F3  100C               	bcf	12,0	;volatile
  2123     01F4                     l1316:
  2124                           
  2125                           ;main.c: 138:     ANSELAbits.ANSA1 = 0;
  2126     01F4  108C               	bcf	12,1	;volatile
  2127     01F5                     l1318:
  2128                           
  2129                           ;main.c: 141:     IOCANbits.IOCAN0 = 1;
  2130     01F5  0027               	movlb	7	; select bank7
  2131     01F6  1412               	bsf	18,0	;volatile
  2132     01F7                     l1320:
  2133                           
  2134                           ;main.c: 142:     IOCANbits.IOCAN1 = 1;
  2135     01F7  1492               	bsf	18,1	;volatile
  2136     01F8                     l1322:
  2137                           
  2138                           ;main.c: 145:     INTCONbits.IOCIE = 1;
  2139     01F8  158B               	bsf	11,3	;volatile
  2140     01F9                     l1324:
  2141                           
  2142                           ;main.c: 148:     (INTCONbits.GIE = 1);
  2143     01F9  178B               	bsf	11,7	;volatile
  2144     01FA                     l1326:
  2145                           
  2146                           ;main.c: 155:     PPSLOCK = 0x55;
  2147     01FA  3055               	movlw	85
  2148     01FB  003C               	movlb	28	; select bank28
  2149     01FC  008F               	movwf	15	;volsfr
  2150     01FD                     l1328:
  2151                           
  2152                           ;main.c: 156:     PPSLOCK = 0xAA;
  2153     01FD  30AA               	movlw	170
  2154     01FE  008F               	movwf	15	;volsfr
  2155     01FF                     l1330:
  2156                           
  2157                           ;main.c: 157:     PPSLOCKbits.PPSLOCKED = 0x00;
  2158     01FF  100F               	bcf	15,0	;volsfr
  2159     0200                     l1332:
  2160                           
  2161                           ;main.c: 160:     RB0PPSbits.RB0PPS = 0b01100;
  2162     0200  003D               	movlb	29	; select bank29
  2163     0201  0818               	movf	24,w	;volatile
  2164     0202  39E0               	andlw	-32
  2165     0203  380C               	iorlw	12
  2166     0204  0098               	movwf	24	;volatile
  2167     0205                     l1334:
  2168                           
  2169                           ;main.c: 163:     RB1PPSbits.RB1PPS = 0b01101;
  2170     0205  0819               	movf	25,w	;volatile
  2171     0206  39E0               	andlw	-32
  2172     0207  380D               	iorlw	13
  2173     0208  0099               	movwf	25	;volatile
  2174     0209                     l1336:
  2175                           
  2176                           ;main.c: 166:     RB2PPSbits.RB2PPS = 0x14;
  2177     0209  081A               	movf	26,w	;volatile
  2178     020A  39E0               	andlw	-32
  2179     020B  3814               	iorlw	20
  2180     020C  009A               	movwf	26	;volatile
  2181     020D                     l1338:
  2182                           
  2183                           ;main.c: 167:     RXPPSbits.RXPPS = 0x0B;
  2184     020D  003C               	movlb	28	; select bank28
  2185     020E  0824               	movf	36,w	;volatile
  2186     020F  39E0               	andlw	-32
  2187     0210  380B               	iorlw	11
  2188     0211  00A4               	movwf	36	;volatile
  2189     0212                     l1340:
  2190                           
  2191                           ;main.c: 169:     PPSLOCK = 0x55;
  2192     0212  3055               	movlw	85
  2193     0213  008F               	movwf	15	;volsfr
  2194     0214                     l1342:
  2195                           
  2196                           ;main.c: 170:     PPSLOCK = 0xAA;
  2197     0214  30AA               	movlw	170
  2198     0215  008F               	movwf	15	;volsfr
  2199     0216                     l1344:
  2200                           
  2201                           ;main.c: 171:     PPSLOCKbits.PPSLOCKED = 0x01;
  2202     0216  140F               	bsf	15,0	;volsfr
  2203     0217                     l63:
  2204     0217  0008               	return
  2205     0218                     __end_of_initMain:
  2206                           
  2207                           	psect	text10
  2208     03C1                     __ptext10:	
  2209 ;; *************** function _internal_32 *****************
  2210 ;; Defined at:
  2211 ;;		line 32 in file "PIC16F1719_Internal.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		None
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_initMain
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     03C1                     _internal_32:	
  2240                           ;psect for function _internal_32
  2241                           
  2242     03C1                     l1196:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _internal_32: []
  2245                           
  2246                           
  2247                           ;PIC16F1719_Internal.c: 34:     SCS0 = 0;
  2248     03C1  0021               	movlb	1	; select bank1
  2249     03C2  1019               	bcf	25,0	;volatile
  2250                           
  2251                           ;PIC16F1719_Internal.c: 35:     SCS1 = 0;
  2252     03C3  1099               	bcf	25,1	;volatile
  2253                           
  2254                           ;PIC16F1719_Internal.c: 38:     IRCF0 = 0;
  2255     03C4  1199               	bcf	25,3	;volatile
  2256                           
  2257                           ;PIC16F1719_Internal.c: 39:     IRCF1 = 1;
  2258     03C5  1619               	bsf	25,4	;volatile
  2259                           
  2260                           ;PIC16F1719_Internal.c: 40:     IRCF2 = 1;
  2261     03C6  1699               	bsf	25,5	;volatile
  2262                           
  2263                           ;PIC16F1719_Internal.c: 41:     IRCF3 = 1;
  2264     03C7  1719               	bsf	25,6	;volatile
  2265                           
  2266                           ;PIC16F1719_Internal.c: 44:     SPLLEN = 1;
  2267     03C8  1799               	bsf	25,7	;volatile
  2268     03C9                     l192:
  2269     03C9  0008               	return
  2270     03CA                     __end_of_internal_32:
  2271                           
  2272                           	psect	text11
  2273     035D                     __ptext11:	
  2274 ;; *************** function _EUSART_Write_Text *****************
  2275 ;; Defined at:
  2276 ;;		line 127 in file "EUSART.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  text            2    1[COMMON] PTR unsigned char 
  2279 ;;		 -> STR_4(2), STR_3(11), STR_2(3), STR_1(11), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  i               2    4[COMMON] int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2294 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2295 ;;Total ram usage:        5 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 2
  2298 ;; This function calls:
  2299 ;;		_EUSART_Write
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305     035D                     _EUSART_Write_Text:	
  2306                           ;psect for function _EUSART_Write_Text
  2307                           
  2308     035D                     l1376:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;EUSART.c: 127: void EUSART_Write_Text(char *text);EUSART.c: 128: {;EUSART.c: 129:   int
      +                           i;;EUSART.c: 130:   for(i=0;text[i]!='\0';i++)
  2314     035D  01F4               	clrf	EUSART_Write_Text@i
  2315     035E  01F5               	clrf	EUSART_Write_Text@i+1
  2316     035F  2B6E               	goto	l1382
  2317     0360                     l1378:
  2318                           
  2319                           ;EUSART.c: 131:    EUSART_Write(text[i]);
  2320     0360  0871               	movf	EUSART_Write_Text@text,w
  2321     0361  0774               	addwf	EUSART_Write_Text@i,w
  2322     0362  0084               	movwf	4
  2323     0363  0872               	movf	EUSART_Write_Text@text+1,w
  2324     0364  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2325     0365  0085               	movwf	5
  2326     0366  0800               	movf	0,w	;code access
  2327     0367  3183  23B7  3183   	fcall	_EUSART_Write
  2328     036A                     l1380:
  2329     036A  3001               	movlw	1
  2330     036B  07F4               	addwf	EUSART_Write_Text@i,f
  2331     036C  3000               	movlw	0
  2332     036D  3DF5               	addwfc	EUSART_Write_Text@i+1,f
  2333     036E                     l1382:
  2334     036E  0871               	movf	EUSART_Write_Text@text,w
  2335     036F  0774               	addwf	EUSART_Write_Text@i,w
  2336     0370  0084               	movwf	4
  2337     0371  0872               	movf	EUSART_Write_Text@text+1,w
  2338     0372  3D75               	addwfc	EUSART_Write_Text@i+1,w
  2339     0373  0085               	movwf	5
  2340     0374  0012               	moviw fsr0++
  2341     0375  1D03               	btfss	3,2
  2342     0376  2B78               	goto	u871
  2343     0377  2B79               	goto	u870
  2344     0378                     u871:
  2345     0378  2B60               	goto	l1378
  2346     0379                     u870:
  2347     0379                     l159:
  2348     0379  0008               	return
  2349     037A                     __end_of_EUSART_Write_Text:
  2350                           
  2351                           	psect	text12
  2352     031A                     __ptext12:	
  2353 ;; *************** function _EUSART_Write_Integer *****************
  2354 ;; Defined at:
  2355 ;;		line 185 in file "EUSART.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  value_to_sen    2   11[COMMON] int 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  buffer         20    7[BANK0 ] unsigned char [20]
  2360 ;;  temp_ptr        1   28[BANK0 ] PTR unsigned char 
  2361 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2362 ;;  ptr             1   27[BANK0 ] PTR unsigned char 
  2363 ;;		 -> EUSART_Write_Integer@buffer(20), 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2374 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2376 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2377 ;;Total ram usage:       25 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 3
  2380 ;; This function calls:
  2381 ;;		_EUSART_Write
  2382 ;;		_itoa
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388     031A                     _EUSART_Write_Integer:	
  2389                           ;psect for function _EUSART_Write_Integer
  2390                           
  2391     031A                     l1384:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _EUSART_Write_Integer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2394                           
  2395                           
  2396                           ;EUSART.c: 185: void EUSART_Write_Integer(int value_to_send);EUSART.c: 186: {;EUSART.c: 
      +                          187:     char buffer[20];;EUSART.c: 188:     char *ptr = buffer;
  2397     031A  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2398     031B  0020               	movlb	0	; select bank0
  2399     031C  00BB               	movwf	EUSART_Write_Integer@ptr
  2400     031D                     l1386:
  2401                           
  2402                           ;EUSART.c: 190:     itoa(&ptr, value_to_send);
  2403     031D  087C               	movf	EUSART_Write_Integer@value_to_send+1,w
  2404     031E  00FA               	movwf	itoa@d+1
  2405     031F  087B               	movf	EUSART_Write_Integer@value_to_send,w
  2406     0320  00F9               	movwf	itoa@d
  2407     0321  303B               	movlw	(low (EUSART_Write_Integer@ptr| 0))& (0+255)
  2408     0322  3180  202D  3183   	fcall	_itoa
  2409     0325                     l1388:
  2410                           
  2411                           ;EUSART.c: 193:     char *temp_ptr = buffer;
  2412     0325  3027               	movlw	(low (EUSART_Write_Integer@buffer| 0))& (0+255)
  2413     0326  0020               	movlb	0	; select bank0
  2414     0327  00BC               	movwf	EUSART_Write_Integer@temp_ptr
  2415                           
  2416                           ;EUSART.c: 194:     while (*temp_ptr != '\0') {
  2417     0328  2B35               	goto	l1394
  2418     0329                     l1390:
  2419                           
  2420                           ;EUSART.c: 195:         EUSART_Write(*temp_ptr++);
  2421     0329  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2422     032A  0086               	movwf	6
  2423     032B  0187               	clrf	7
  2424     032C  0801               	movf	1,w
  2425     032D  3183  23B7  3183   	fcall	_EUSART_Write
  2426     0330                     l1392:
  2427     0330  3001               	movlw	1
  2428     0331  00FD               	movwf	??_EUSART_Write_Integer
  2429     0332  087D               	movf	??_EUSART_Write_Integer,w
  2430     0333  0020               	movlb	0	; select bank0
  2431     0334  07BC               	addwf	EUSART_Write_Integer@temp_ptr,f
  2432     0335                     l1394:
  2433                           
  2434                           ;EUSART.c: 194:     while (*temp_ptr != '\0') {
  2435     0335  083C               	movf	EUSART_Write_Integer@temp_ptr,w
  2436     0336  0086               	movwf	6
  2437     0337  0187               	clrf	7
  2438     0338  0801               	movf	1,w
  2439     0339  1D03               	btfss	3,2
  2440     033A  2B3C               	goto	u881
  2441     033B  2B3D               	goto	u880
  2442     033C                     u881:
  2443     033C  2B29               	goto	l1390
  2444     033D                     u880:
  2445     033D                     l175:
  2446     033D  0008               	return
  2447     033E                     __end_of_EUSART_Write_Integer:
  2448                           
  2449                           	psect	text13
  2450     002D                     __ptext13:	
  2451 ;; *************** function _itoa *****************
  2452 ;; Defined at:
  2453 ;;		line 149 in file "EUSART.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  buf             1    wreg     PTR PTR unsigned char 
  2456 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2457 ;;  d               2    9[COMMON] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  buf             1    4[BANK0 ] PTR PTR unsigned char 
  2460 ;;		 -> EUSART_Write_Integer@ptr(1), 
  2461 ;;  num             2    0[BANK0 ] int 
  2462 ;;  div             2    5[BANK0 ] int 
  2463 ;;  temp            2    2[BANK0 ] int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2476 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:        9 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 2
  2480 ;; This function calls:
  2481 ;;		___awdiv
  2482 ;;		___awmod
  2483 ;;		___wmul
  2484 ;; This function is called by:
  2485 ;;		_EUSART_Write_Integer
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     002D                     _itoa:	
  2490                           ;psect for function _itoa
  2491                           
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _itoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2495                           ;itoa@buf stored from wreg
  2496     002D  0020               	movlb	0	; select bank0
  2497     002E  00A4               	movwf	itoa@buf
  2498     002F                     l1214:
  2499                           
  2500                           ;EUSART.c: 149: void itoa(char **buf, int d);EUSART.c: 150: {;EUSART.c: 151:     int div
      +                           = 1;
  2501     002F  3001               	movlw	1
  2502     0030  00A5               	movwf	itoa@div
  2503     0031  3000               	movlw	0
  2504     0032  00A6               	movwf	itoa@div+1
  2505                           
  2506                           ;EUSART.c: 152:     if (d < 0)
  2507     0033  1FFA               	btfss	itoa@d+1,7
  2508     0034  2836               	goto	u721
  2509     0035  2837               	goto	u720
  2510     0036                     u721:
  2511     0036  2845               	goto	l1220
  2512     0037                     u720:
  2513     0037                     l1216:
  2514                           
  2515                           ;EUSART.c: 153:     {;EUSART.c: 154:         *((*buf)++) = '-';
  2516     0037  0824               	movf	itoa@buf,w
  2517     0038  0086               	movwf	6
  2518     0039  0187               	clrf	7
  2519     003A  3F40               	moviw [0]fsr1
  2520     003B  0084               	movwf	4
  2521     003C  0185               	clrf	5
  2522     003D  0A81               	incf	1,f
  2523     003E  302D               	movlw	45
  2524     003F  0080               	movwf	0
  2525     0040                     l1218:
  2526                           
  2527                           ;EUSART.c: 155:         d = -d;
  2528     0040  09F9               	comf	itoa@d,f
  2529     0041  09FA               	comf	itoa@d+1,f
  2530     0042  0AF9               	incf	itoa@d,f
  2531     0043  1903               	skipnz
  2532     0044  0AFA               	incf	itoa@d+1,f
  2533     0045                     l1220:
  2534                           
  2535                           ;EUSART.c: 158:     int temp = d;
  2536     0045  087A               	movf	itoa@d+1,w
  2537     0046  00A3               	movwf	itoa@temp+1
  2538     0047  0879               	movf	itoa@d,w
  2539     0048  00A2               	movwf	itoa@temp
  2540                           
  2541                           ;EUSART.c: 159:     while (temp / 10)
  2542     0049  286B               	goto	l163
  2543     004A                     l1222:
  2544                           
  2545                           ;EUSART.c: 160:     {;EUSART.c: 161:         temp /= 10;
  2546     004A  300A               	movlw	10
  2547     004B  00F0               	movwf	___awdiv@divisor
  2548     004C  3000               	movlw	0
  2549     004D  00F1               	movwf	___awdiv@divisor+1
  2550     004E  0020               	movlb	0	; select bank0
  2551     004F  0823               	movf	itoa@temp+1,w
  2552     0050  00F3               	movwf	___awdiv@dividend+1
  2553     0051  0822               	movf	itoa@temp,w
  2554     0052  00F2               	movwf	___awdiv@dividend
  2555     0053  3182  2218  3180   	fcall	___awdiv
  2556     0056  0871               	movf	?___awdiv+1,w
  2557     0057  0020               	movlb	0	; select bank0
  2558     0058  00A3               	movwf	itoa@temp+1
  2559     0059  0870               	movf	?___awdiv,w
  2560     005A  00A2               	movwf	itoa@temp
  2561                           
  2562                           ;EUSART.c: 162:         div *= 10;
  2563     005B  300A               	movlw	10
  2564     005C  00F0               	movwf	___wmul@multiplier
  2565     005D  3000               	movlw	0
  2566     005E  00F1               	movwf	___wmul@multiplier+1
  2567     005F  0826               	movf	itoa@div+1,w
  2568     0060  00F3               	movwf	___wmul@multiplicand+1
  2569     0061  0825               	movf	itoa@div,w
  2570     0062  00F2               	movwf	___wmul@multiplicand
  2571     0063  3183  233E  3180   	fcall	___wmul
  2572     0066  0871               	movf	?___wmul+1,w
  2573     0067  0020               	movlb	0	; select bank0
  2574     0068  00A6               	movwf	itoa@div+1
  2575     0069  0870               	movf	?___wmul,w
  2576     006A  00A5               	movwf	itoa@div
  2577     006B                     l163:	
  2578                           ;EUSART.c: 163:     }
  2579                           
  2580                           
  2581                           ;EUSART.c: 159:     while (temp / 10)
  2582     006B  300A               	movlw	10
  2583     006C  00F0               	movwf	___awdiv@divisor
  2584     006D  3000               	movlw	0
  2585     006E  00F1               	movwf	___awdiv@divisor+1
  2586     006F  0823               	movf	itoa@temp+1,w
  2587     0070  00F3               	movwf	___awdiv@dividend+1
  2588     0071  0822               	movf	itoa@temp,w
  2589     0072  00F2               	movwf	___awdiv@dividend
  2590     0073  3182  2218  3180   	fcall	___awdiv
  2591     0076  0870               	movf	?___awdiv,w
  2592     0077  0471               	iorwf	?___awdiv+1,w
  2593     0078  1D03               	btfss	3,2
  2594     0079  287B               	goto	u731
  2595     007A  287C               	goto	u730
  2596     007B                     u731:
  2597     007B  284A               	goto	l1222
  2598     007C                     u730:
  2599     007C  28B7               	goto	l1228
  2600     007D                     l1224:
  2601                           
  2602                           ;EUSART.c: 166:     {;EUSART.c: 167:         int num = d / div;
  2603     007D  0826               	movf	itoa@div+1,w
  2604     007E  00F1               	movwf	___awdiv@divisor+1
  2605     007F  0825               	movf	itoa@div,w
  2606     0080  00F0               	movwf	___awdiv@divisor
  2607     0081  087A               	movf	itoa@d+1,w
  2608     0082  00F3               	movwf	___awdiv@dividend+1
  2609     0083  0879               	movf	itoa@d,w
  2610     0084  00F2               	movwf	___awdiv@dividend
  2611     0085  3182  2218  3180   	fcall	___awdiv
  2612     0088  0871               	movf	?___awdiv+1,w
  2613     0089  0020               	movlb	0	; select bank0
  2614     008A  00A1               	movwf	itoa@num+1
  2615     008B  0870               	movf	?___awdiv,w
  2616     008C  00A0               	movwf	itoa@num
  2617                           
  2618                           ;EUSART.c: 168:         d %= div;
  2619     008D  0826               	movf	itoa@div+1,w
  2620     008E  00F1               	movwf	___awmod@divisor+1
  2621     008F  0825               	movf	itoa@div,w
  2622     0090  00F0               	movwf	___awmod@divisor
  2623     0091  087A               	movf	itoa@d+1,w
  2624     0092  00F3               	movwf	___awmod@dividend+1
  2625     0093  0879               	movf	itoa@d,w
  2626     0094  00F2               	movwf	___awmod@dividend
  2627     0095  3182  2277  3180   	fcall	___awmod
  2628     0098  0871               	movf	?___awmod+1,w
  2629     0099  00FA               	movwf	itoa@d+1
  2630     009A  0870               	movf	?___awmod,w
  2631     009B  00F9               	movwf	itoa@d
  2632                           
  2633                           ;EUSART.c: 169:         div /= 10;
  2634     009C  300A               	movlw	10
  2635     009D  00F0               	movwf	___awdiv@divisor
  2636     009E  3000               	movlw	0
  2637     009F  00F1               	movwf	___awdiv@divisor+1
  2638     00A0  0020               	movlb	0	; select bank0
  2639     00A1  0826               	movf	itoa@div+1,w
  2640     00A2  00F3               	movwf	___awdiv@dividend+1
  2641     00A3  0825               	movf	itoa@div,w
  2642     00A4  00F2               	movwf	___awdiv@dividend
  2643     00A5  3182  2218  3180   	fcall	___awdiv
  2644     00A8  0871               	movf	?___awdiv+1,w
  2645     00A9  0020               	movlb	0	; select bank0
  2646     00AA  00A6               	movwf	itoa@div+1
  2647     00AB  0870               	movf	?___awdiv,w
  2648     00AC  00A5               	movwf	itoa@div
  2649     00AD                     l1226:
  2650                           
  2651                           ;EUSART.c: 170:         *((*buf)++) = num + '0';
  2652     00AD  0824               	movf	itoa@buf,w
  2653     00AE  0086               	movwf	6
  2654     00AF  0187               	clrf	7
  2655     00B0  3F40               	moviw [0]fsr1
  2656     00B1  0084               	movwf	4
  2657     00B2  0185               	clrf	5
  2658     00B3  0A81               	incf	1,f
  2659     00B4  0820               	movf	itoa@num,w
  2660     00B5  3E30               	addlw	48
  2661     00B6  0080               	movwf	0
  2662     00B7                     l1228:
  2663                           
  2664                           ;EUSART.c: 165:     while (div != 0)
  2665     00B7  0020               	movlb	0	; select bank0
  2666     00B8  0825               	movf	itoa@div,w
  2667     00B9  0426               	iorwf	itoa@div+1,w
  2668     00BA  1D03               	btfss	3,2
  2669     00BB  28BD               	goto	u741
  2670     00BC  28BE               	goto	u740
  2671     00BD                     u741:
  2672     00BD  287D               	goto	l1224
  2673     00BE                     u740:
  2674     00BE                     l1230:
  2675                           
  2676                           ;EUSART.c: 172:     *(*buf) = '\0';
  2677     00BE  0824               	movf	itoa@buf,w
  2678     00BF  0086               	movwf	6
  2679     00C0  0187               	clrf	7
  2680     00C1  0801               	movf	1,w
  2681     00C2  0086               	movwf	6
  2682     00C3  0187               	clrf	7
  2683     00C4  0181               	clrf	1
  2684     00C5                     l169:
  2685     00C5  0008               	return
  2686     00C6                     __end_of_itoa:
  2687                           
  2688                           	psect	text14
  2689     033E                     __ptext14:	
  2690 ;; *************** function ___wmul *****************
  2691 ;; Defined at:
  2692 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  multiplier      2    0[COMMON] unsigned int 
  2695 ;;  multiplicand    2    2[COMMON] unsigned int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  product         2    4[COMMON] unsigned int 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2    0[COMMON] unsigned int 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2711 ;;Total ram usage:        6 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_itoa
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721     033E                     ___wmul:	
  2722                           ;psect for function ___wmul
  2723                           
  2724     033E                     l1100:	
  2725                           ;incstack = 0
  2726                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2727                           
  2728     033E  01F4               	clrf	___wmul@product
  2729     033F  01F5               	clrf	___wmul@product+1
  2730     0340                     l1102:
  2731     0340  1C70               	btfss	___wmul@multiplier,0
  2732     0341  2B43               	goto	u481
  2733     0342  2B44               	goto	u480
  2734     0343                     u481:
  2735     0343  2B48               	goto	l278
  2736     0344                     u480:
  2737     0344                     l1104:
  2738     0344  0872               	movf	___wmul@multiplicand,w
  2739     0345  07F4               	addwf	___wmul@product,f
  2740     0346  0873               	movf	___wmul@multiplicand+1,w
  2741     0347  3DF5               	addwfc	___wmul@product+1,f
  2742     0348                     l278:
  2743     0348  3001               	movlw	1
  2744     0349                     u495:
  2745     0349  35F2               	lslf	___wmul@multiplicand,f
  2746     034A  0DF3               	rlf	___wmul@multiplicand+1,f
  2747     034B  0B89               	decfsz	9,f
  2748     034C  2B49               	goto	u495
  2749     034D                     l1106:
  2750     034D  3001               	movlw	1
  2751     034E                     u505:
  2752     034E  36F1               	lsrf	___wmul@multiplier+1,f
  2753     034F  0CF0               	rrf	___wmul@multiplier,f
  2754     0350  0B89               	decfsz	9,f
  2755     0351  2B4E               	goto	u505
  2756     0352                     l1108:
  2757     0352  0870               	movf	___wmul@multiplier,w
  2758     0353  0471               	iorwf	___wmul@multiplier+1,w
  2759     0354  1D03               	btfss	3,2
  2760     0355  2B57               	goto	u511
  2761     0356  2B58               	goto	u510
  2762     0357                     u511:
  2763     0357  2B40               	goto	l1102
  2764     0358                     u510:
  2765     0358                     l1110:
  2766     0358  0875               	movf	___wmul@product+1,w
  2767     0359  00F1               	movwf	?___wmul+1
  2768     035A  0874               	movf	___wmul@product,w
  2769     035B  00F0               	movwf	?___wmul
  2770     035C                     l280:
  2771     035C  0008               	return
  2772     035D                     __end_of___wmul:
  2773                           
  2774                           	psect	text15
  2775     0277                     __ptext15:	
  2776 ;; *************** function ___awmod *****************
  2777 ;; Defined at:
  2778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  divisor         2    0[COMMON] int 
  2781 ;;  dividend        2    2[COMMON] int 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  sign            1    6[COMMON] unsigned char 
  2784 ;;  counter         1    5[COMMON] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  2    0[COMMON] int 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2798 ;;Total ram usage:        7 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_itoa
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0277                     ___awmod:	
  2809                           ;psect for function ___awmod
  2810                           
  2811     0277                     l1158:	
  2812                           ;incstack = 0
  2813                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2814                           
  2815     0277  01F6               	clrf	___awmod@sign
  2816     0278                     l1160:
  2817     0278  1FF3               	btfss	___awmod@dividend+1,7
  2818     0279  2A7B               	goto	u621
  2819     027A  2A7C               	goto	u620
  2820     027B                     u621:
  2821     027B  2A83               	goto	l1166
  2822     027C                     u620:
  2823     027C                     l1162:
  2824     027C  09F2               	comf	___awmod@dividend,f
  2825     027D  09F3               	comf	___awmod@dividend+1,f
  2826     027E  0AF2               	incf	___awmod@dividend,f
  2827     027F  1903               	skipnz
  2828     0280  0AF3               	incf	___awmod@dividend+1,f
  2829     0281                     l1164:
  2830     0281  01F6               	clrf	___awmod@sign
  2831     0282  0AF6               	incf	___awmod@sign,f
  2832     0283                     l1166:
  2833     0283  1FF1               	btfss	___awmod@divisor+1,7
  2834     0284  2A86               	goto	u631
  2835     0285  2A87               	goto	u630
  2836     0286                     u631:
  2837     0286  2A8C               	goto	l1170
  2838     0287                     u630:
  2839     0287                     l1168:
  2840     0287  09F0               	comf	___awmod@divisor,f
  2841     0288  09F1               	comf	___awmod@divisor+1,f
  2842     0289  0AF0               	incf	___awmod@divisor,f
  2843     028A  1903               	skipnz
  2844     028B  0AF1               	incf	___awmod@divisor+1,f
  2845     028C                     l1170:
  2846     028C  0870               	movf	___awmod@divisor,w
  2847     028D  0471               	iorwf	___awmod@divisor+1,w
  2848     028E  1903               	btfsc	3,2
  2849     028F  2A91               	goto	u641
  2850     0290  2A92               	goto	u640
  2851     0291                     u641:
  2852     0291  2ABB               	goto	l1188
  2853     0292                     u640:
  2854     0292                     l1172:
  2855     0292  01F5               	clrf	___awmod@counter
  2856     0293  0AF5               	incf	___awmod@counter,f
  2857     0294  2A9E               	goto	l1178
  2858     0295                     l1174:
  2859     0295  3001               	movlw	1
  2860     0296                     u655:
  2861     0296  35F0               	lslf	___awmod@divisor,f
  2862     0297  0DF1               	rlf	___awmod@divisor+1,f
  2863     0298  0B89               	decfsz	9,f
  2864     0299  2A96               	goto	u655
  2865     029A                     l1176:
  2866     029A  3001               	movlw	1
  2867     029B  00F4               	movwf	??___awmod
  2868     029C  0874               	movf	??___awmod,w
  2869     029D  07F5               	addwf	___awmod@counter,f
  2870     029E                     l1178:
  2871     029E  1FF1               	btfss	___awmod@divisor+1,7
  2872     029F  2AA1               	goto	u661
  2873     02A0  2AA2               	goto	u660
  2874     02A1                     u661:
  2875     02A1  2A95               	goto	l1174
  2876     02A2                     u660:
  2877     02A2                     l1180:
  2878     02A2  0871               	movf	___awmod@divisor+1,w
  2879     02A3  0273               	subwf	___awmod@dividend+1,w
  2880     02A4  1D03               	skipz
  2881     02A5  2AA8               	goto	u675
  2882     02A6  0870               	movf	___awmod@divisor,w
  2883     02A7  0272               	subwf	___awmod@dividend,w
  2884     02A8                     u675:
  2885     02A8  1C03               	skipc
  2886     02A9  2AAB               	goto	u671
  2887     02AA  2AAC               	goto	u670
  2888     02AB                     u671:
  2889     02AB  2AB0               	goto	l1184
  2890     02AC                     u670:
  2891     02AC                     l1182:
  2892     02AC  0870               	movf	___awmod@divisor,w
  2893     02AD  02F2               	subwf	___awmod@dividend,f
  2894     02AE  0871               	movf	___awmod@divisor+1,w
  2895     02AF  3BF3               	subwfb	___awmod@dividend+1,f
  2896     02B0                     l1184:
  2897     02B0  3001               	movlw	1
  2898     02B1                     u685:
  2899     02B1  36F1               	lsrf	___awmod@divisor+1,f
  2900     02B2  0CF0               	rrf	___awmod@divisor,f
  2901     02B3  0B89               	decfsz	9,f
  2902     02B4  2AB1               	goto	u685
  2903     02B5                     l1186:
  2904     02B5  3001               	movlw	1
  2905     02B6  02F5               	subwf	___awmod@counter,f
  2906     02B7  1D03               	btfss	3,2
  2907     02B8  2ABA               	goto	u691
  2908     02B9  2ABB               	goto	u690
  2909     02BA                     u691:
  2910     02BA  2AA2               	goto	l1180
  2911     02BB                     u690:
  2912     02BB                     l1188:
  2913     02BB  0876               	movf	___awmod@sign,w
  2914     02BC  1903               	btfsc	3,2
  2915     02BD  2ABF               	goto	u701
  2916     02BE  2AC0               	goto	u700
  2917     02BF                     u701:
  2918     02BF  2AC5               	goto	l1192
  2919     02C0                     u700:
  2920     02C0                     l1190:
  2921     02C0  09F2               	comf	___awmod@dividend,f
  2922     02C1  09F3               	comf	___awmod@dividend+1,f
  2923     02C2  0AF2               	incf	___awmod@dividend,f
  2924     02C3  1903               	skipnz
  2925     02C4  0AF3               	incf	___awmod@dividend+1,f
  2926     02C5                     l1192:
  2927     02C5  0873               	movf	___awmod@dividend+1,w
  2928     02C6  00F1               	movwf	?___awmod+1
  2929     02C7  0872               	movf	___awmod@dividend,w
  2930     02C8  00F0               	movwf	?___awmod
  2931     02C9                     l444:
  2932     02C9  0008               	return
  2933     02CA                     __end_of___awmod:
  2934                           
  2935                           	psect	text16
  2936     0218                     __ptext16:	
  2937 ;; *************** function ___awdiv *****************
  2938 ;; Defined at:
  2939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  divisor         2    0[COMMON] int 
  2942 ;;  dividend        2    2[COMMON] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  quotient        2    7[COMMON] int 
  2945 ;;  sign            1    6[COMMON] unsigned char 
  2946 ;;  counter         1    5[COMMON] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2    0[COMMON] int 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2959 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        9 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_itoa
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     0218                     ___awdiv:	
  2971                           ;psect for function ___awdiv
  2972                           
  2973     0218                     l1114:	
  2974                           ;incstack = 0
  2975                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2976                           
  2977     0218  01F6               	clrf	___awdiv@sign
  2978     0219                     l1116:
  2979     0219  1FF1               	btfss	___awdiv@divisor+1,7
  2980     021A  2A1C               	goto	u521
  2981     021B  2A1D               	goto	u520
  2982     021C                     u521:
  2983     021C  2A24               	goto	l1122
  2984     021D                     u520:
  2985     021D                     l1118:
  2986     021D  09F0               	comf	___awdiv@divisor,f
  2987     021E  09F1               	comf	___awdiv@divisor+1,f
  2988     021F  0AF0               	incf	___awdiv@divisor,f
  2989     0220  1903               	skipnz
  2990     0221  0AF1               	incf	___awdiv@divisor+1,f
  2991     0222                     l1120:
  2992     0222  01F6               	clrf	___awdiv@sign
  2993     0223  0AF6               	incf	___awdiv@sign,f
  2994     0224                     l1122:
  2995     0224  1FF3               	btfss	___awdiv@dividend+1,7
  2996     0225  2A27               	goto	u531
  2997     0226  2A28               	goto	u530
  2998     0227                     u531:
  2999     0227  2A31               	goto	l1128
  3000     0228                     u530:
  3001     0228                     l1124:
  3002     0228  09F2               	comf	___awdiv@dividend,f
  3003     0229  09F3               	comf	___awdiv@dividend+1,f
  3004     022A  0AF2               	incf	___awdiv@dividend,f
  3005     022B  1903               	skipnz
  3006     022C  0AF3               	incf	___awdiv@dividend+1,f
  3007     022D                     l1126:
  3008     022D  3001               	movlw	1
  3009     022E  00F4               	movwf	??___awdiv
  3010     022F  0874               	movf	??___awdiv,w
  3011     0230  06F6               	xorwf	___awdiv@sign,f
  3012     0231                     l1128:
  3013     0231  01F7               	clrf	___awdiv@quotient
  3014     0232  01F8               	clrf	___awdiv@quotient+1
  3015     0233                     l1130:
  3016     0233  0870               	movf	___awdiv@divisor,w
  3017     0234  0471               	iorwf	___awdiv@divisor+1,w
  3018     0235  1903               	btfsc	3,2
  3019     0236  2A38               	goto	u541
  3020     0237  2A39               	goto	u540
  3021     0238                     u541:
  3022     0238  2A68               	goto	l1150
  3023     0239                     u540:
  3024     0239                     l1132:
  3025     0239  01F5               	clrf	___awdiv@counter
  3026     023A  0AF5               	incf	___awdiv@counter,f
  3027     023B  2A45               	goto	l1138
  3028     023C                     l1134:
  3029     023C  3001               	movlw	1
  3030     023D                     u555:
  3031     023D  35F0               	lslf	___awdiv@divisor,f
  3032     023E  0DF1               	rlf	___awdiv@divisor+1,f
  3033     023F  0B89               	decfsz	9,f
  3034     0240  2A3D               	goto	u555
  3035     0241                     l1136:
  3036     0241  3001               	movlw	1
  3037     0242  00F4               	movwf	??___awdiv
  3038     0243  0874               	movf	??___awdiv,w
  3039     0244  07F5               	addwf	___awdiv@counter,f
  3040     0245                     l1138:
  3041     0245  1FF1               	btfss	___awdiv@divisor+1,7
  3042     0246  2A48               	goto	u561
  3043     0247  2A49               	goto	u560
  3044     0248                     u561:
  3045     0248  2A3C               	goto	l1134
  3046     0249                     u560:
  3047     0249                     l1140:
  3048     0249  3001               	movlw	1
  3049     024A                     u575:
  3050     024A  35F7               	lslf	___awdiv@quotient,f
  3051     024B  0DF8               	rlf	___awdiv@quotient+1,f
  3052     024C  0B89               	decfsz	9,f
  3053     024D  2A4A               	goto	u575
  3054     024E  0871               	movf	___awdiv@divisor+1,w
  3055     024F  0273               	subwf	___awdiv@dividend+1,w
  3056     0250  1D03               	skipz
  3057     0251  2A54               	goto	u585
  3058     0252  0870               	movf	___awdiv@divisor,w
  3059     0253  0272               	subwf	___awdiv@dividend,w
  3060     0254                     u585:
  3061     0254  1C03               	skipc
  3062     0255  2A57               	goto	u581
  3063     0256  2A58               	goto	u580
  3064     0257                     u581:
  3065     0257  2A5D               	goto	l1146
  3066     0258                     u580:
  3067     0258                     l1142:
  3068     0258  0870               	movf	___awdiv@divisor,w
  3069     0259  02F2               	subwf	___awdiv@dividend,f
  3070     025A  0871               	movf	___awdiv@divisor+1,w
  3071     025B  3BF3               	subwfb	___awdiv@dividend+1,f
  3072     025C                     l1144:
  3073     025C  1477               	bsf	___awdiv@quotient,0
  3074     025D                     l1146:
  3075     025D  3001               	movlw	1
  3076     025E                     u595:
  3077     025E  36F1               	lsrf	___awdiv@divisor+1,f
  3078     025F  0CF0               	rrf	___awdiv@divisor,f
  3079     0260  0B89               	decfsz	9,f
  3080     0261  2A5E               	goto	u595
  3081     0262                     l1148:
  3082     0262  3001               	movlw	1
  3083     0263  02F5               	subwf	___awdiv@counter,f
  3084     0264  1D03               	btfss	3,2
  3085     0265  2A67               	goto	u601
  3086     0266  2A68               	goto	u600
  3087     0267                     u601:
  3088     0267  2A49               	goto	l1140
  3089     0268                     u600:
  3090     0268                     l1150:
  3091     0268  0876               	movf	___awdiv@sign,w
  3092     0269  1903               	btfsc	3,2
  3093     026A  2A6C               	goto	u611
  3094     026B  2A6D               	goto	u610
  3095     026C                     u611:
  3096     026C  2A72               	goto	l1154
  3097     026D                     u610:
  3098     026D                     l1152:
  3099     026D  09F7               	comf	___awdiv@quotient,f
  3100     026E  09F8               	comf	___awdiv@quotient+1,f
  3101     026F  0AF7               	incf	___awdiv@quotient,f
  3102     0270  1903               	skipnz
  3103     0271  0AF8               	incf	___awdiv@quotient+1,f
  3104     0272                     l1154:
  3105     0272  0878               	movf	___awdiv@quotient+1,w
  3106     0273  00F1               	movwf	?___awdiv+1
  3107     0274  0877               	movf	___awdiv@quotient,w
  3108     0275  00F0               	movwf	?___awdiv
  3109     0276                     l431:
  3110     0276  0008               	return
  3111     0277                     __end_of___awdiv:
  3112                           
  3113                           	psect	text17
  3114     03B7                     __ptext17:	
  3115 ;; *************** function _EUSART_Write *****************
  3116 ;; Defined at:
  3117 ;;		line 108 in file "EUSART.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  txData          1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  txData          1    0[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_EUSART_Write_Text
  3142 ;;		_EUSART_Write_Integer
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146     03B7                     _EUSART_Write:	
  3147                           ;psect for function _EUSART_Write
  3148                           
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _EUSART_Write: [wreg]
  3152                           ;EUSART_Write@txData stored from wreg
  3153     03B7  00F0               	movwf	EUSART_Write@txData
  3154     03B8                     l1210:
  3155     03B8                     l150:	
  3156                           ;EUSART.c: 111:     {;EUSART.c: 112:     }
  3157                           
  3158                           
  3159                           ;EUSART.c: 110:     while(0 == PIR1bits.TXIF)
  3160     03B8  0020               	movlb	0	; select bank0
  3161     03B9  1E11               	btfss	17,4	;volatile
  3162     03BA  2BBC               	goto	u711
  3163     03BB  2BBD               	goto	u710
  3164     03BC                     u711:
  3165     03BC  2BB8               	goto	l150
  3166     03BD                     u710:
  3167     03BD                     l1212:
  3168                           
  3169                           ;EUSART.c: 114:     TX1REG = txData;
  3170     03BD  0870               	movf	EUSART_Write@txData,w
  3171     03BE  0023               	movlb	3	; select bank3
  3172     03BF  009A               	movwf	26	;volatile
  3173     03C0                     l153:
  3174     03C0  0008               	return
  3175     03C1                     __end_of_EUSART_Write:
  3176                           
  3177                           	psect	text18
  3178     02CA                     __ptext18:	
  3179 ;; *************** function _EUSART_Initialize *****************
  3180 ;; Defined at:
  3181 ;;		line 36 in file "EUSART.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  baudrate        4    6[BANK0 ] const long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  x               2    9[COMMON] unsigned int 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      unsigned char 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3197 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3198 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3199 ;;Total ram usage:       18 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 2
  3202 ;; This function calls:
  3203 ;;		___aldiv
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209     02CA                     _EUSART_Initialize:	
  3210                           ;psect for function _EUSART_Initialize
  3211                           
  3212     02CA                     l1358:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3215                           
  3216                           
  3217                           ;EUSART.c: 36: char EUSART_Initialize(const long int baudrate);EUSART.c: 37: {;EUSART.c:
      +                           38:     unsigned int x;;EUSART.c: 39:  x = (32000000 - baudrate*64)/(baudrate*64);
  3218     02CA  0020               	movlb	0	; select bank0
  3219     02CB  0826               	movf	EUSART_Initialize@baudrate,w
  3220     02CC  00AA               	movwf	??_EUSART_Initialize
  3221     02CD  0827               	movf	EUSART_Initialize@baudrate+1,w
  3222     02CE  00AB               	movwf	??_EUSART_Initialize+1
  3223     02CF  0828               	movf	EUSART_Initialize@baudrate+2,w
  3224     02D0  00AC               	movwf	??_EUSART_Initialize+2
  3225     02D1  0829               	movf	EUSART_Initialize@baudrate+3,w
  3226     02D2  00AD               	movwf	??_EUSART_Initialize+3
  3227     02D3  3006               	movlw	6
  3228     02D4                     u855:
  3229     02D4  35AA               	lslf	??_EUSART_Initialize,f
  3230     02D5  0DAB               	rlf	??_EUSART_Initialize+1,f
  3231     02D6  0DAC               	rlf	??_EUSART_Initialize+2,f
  3232     02D7  0DAD               	rlf	??_EUSART_Initialize+3,f
  3233     02D8                     u850:
  3234     02D8  0B89               	decfsz	9,f
  3235     02D9  2AD4               	goto	u855
  3236     02DA  082D               	movf	??_EUSART_Initialize+3,w
  3237     02DB  00F3               	movwf	___aldiv@divisor+3
  3238     02DC  082C               	movf	??_EUSART_Initialize+2,w
  3239     02DD  00F2               	movwf	___aldiv@divisor+2
  3240     02DE  082B               	movf	??_EUSART_Initialize+1,w
  3241     02DF  00F1               	movwf	___aldiv@divisor+1
  3242     02E0  082A               	movf	??_EUSART_Initialize,w
  3243     02E1  00F0               	movwf	___aldiv@divisor
  3244     02E2  0826               	movf	EUSART_Initialize@baudrate,w
  3245     02E3  00AE               	movwf	??_EUSART_Initialize+4
  3246     02E4  0827               	movf	EUSART_Initialize@baudrate+1,w
  3247     02E5  00AF               	movwf	??_EUSART_Initialize+5
  3248     02E6  0828               	movf	EUSART_Initialize@baudrate+2,w
  3249     02E7  00B0               	movwf	??_EUSART_Initialize+6
  3250     02E8  0829               	movf	EUSART_Initialize@baudrate+3,w
  3251     02E9  00B1               	movwf	??_EUSART_Initialize+7
  3252     02EA  3006               	movlw	6
  3253     02EB                     u865:
  3254     02EB  35AE               	lslf	??_EUSART_Initialize+4,f
  3255     02EC  0DAF               	rlf	??_EUSART_Initialize+5,f
  3256     02ED  0DB0               	rlf	??_EUSART_Initialize+6,f
  3257     02EE  0DB1               	rlf	??_EUSART_Initialize+7,f
  3258     02EF                     u860:
  3259     02EF  0B89               	decfsz	9,f
  3260     02F0  2AEB               	goto	u865
  3261     02F1  3000               	movlw	0
  3262     02F2  00B2               	movwf	??_EUSART_Initialize+8
  3263     02F3  3048               	movlw	72
  3264     02F4  00B3               	movwf	??_EUSART_Initialize+9
  3265     02F5  30E8               	movlw	232
  3266     02F6  00B4               	movwf	??_EUSART_Initialize+10
  3267     02F7  3001               	movlw	1
  3268     02F8  00B5               	movwf	??_EUSART_Initialize+11
  3269     02F9  082E               	movf	??_EUSART_Initialize+4,w
  3270     02FA  02B2               	subwf	??_EUSART_Initialize+8,f
  3271     02FB  082F               	movf	??_EUSART_Initialize+5,w
  3272     02FC  3BB3               	subwfb	??_EUSART_Initialize+9,f
  3273     02FD  0830               	movf	??_EUSART_Initialize+6,w
  3274     02FE  3BB4               	subwfb	??_EUSART_Initialize+10,f
  3275     02FF  0831               	movf	??_EUSART_Initialize+7,w
  3276     0300  3BB5               	subwfb	??_EUSART_Initialize+11,f
  3277     0301  0835               	movf	??_EUSART_Initialize+11,w
  3278     0302  00F7               	movwf	___aldiv@dividend+3
  3279     0303  0834               	movf	??_EUSART_Initialize+10,w
  3280     0304  00F6               	movwf	___aldiv@dividend+2
  3281     0305  0833               	movf	??_EUSART_Initialize+9,w
  3282     0306  00F5               	movwf	___aldiv@dividend+1
  3283     0307  0832               	movf	??_EUSART_Initialize+8,w
  3284     0308  00F4               	movwf	___aldiv@dividend
  3285     0309  3180  20C6  3182   	fcall	___aldiv
  3286     030C  0871               	movf	?___aldiv+1,w
  3287     030D  00FA               	movwf	EUSART_Initialize@x+1
  3288     030E  0870               	movf	?___aldiv,w
  3289     030F  00F9               	movwf	EUSART_Initialize@x
  3290     0310                     l1360:
  3291                           
  3292                           ;EUSART.c: 41:  SPBRGL = x;
  3293     0310  0879               	movf	EUSART_Initialize@x,w
  3294     0311  0023               	movlb	3	; select bank3
  3295     0312  009B               	movwf	27	;volatile
  3296     0313                     l1362:
  3297                           
  3298                           ;EUSART.c: 42:     BRGH = 0;
  3299     0313  111E               	bcf	30,2	;volatile
  3300     0314                     l1364:
  3301                           
  3302                           ;EUSART.c: 43:     BRG16 = 0;
  3303     0314  119F               	bcf	31,3	;volatile
  3304     0315                     l1366:
  3305                           
  3306                           ;EUSART.c: 44:     SYNC = 0;
  3307     0315  121E               	bcf	30,4	;volatile
  3308     0316                     l1368:
  3309                           
  3310                           ;EUSART.c: 45:     SPEN = 1;
  3311     0316  179D               	bsf	29,7	;volatile
  3312     0317                     l1370:
  3313                           
  3314                           ;EUSART.c: 46:     CREN = 1;
  3315     0317  161D               	bsf	29,4	;volatile
  3316     0318                     l1372:
  3317                           
  3318                           ;EUSART.c: 47:     TXEN = 1;
  3319     0318  169E               	bsf	30,5	;volatile
  3320     0319                     l134:
  3321     0319  0008               	return
  3322     031A                     __end_of_EUSART_Initialize:
  3323                           
  3324                           	psect	text19
  3325     00C6                     __ptext19:	
  3326 ;; *************** function ___aldiv *****************
  3327 ;; Defined at:
  3328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  divisor         4    0[COMMON] long 
  3331 ;;  dividend        4    4[COMMON] long 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  quotient        4    2[BANK0 ] long 
  3334 ;;  sign            1    1[BANK0 ] unsigned char 
  3335 ;;  counter         1    0[BANK0 ] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  4    0[COMMON] long 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3345 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3348 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:       15 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_EUSART_Initialize
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359     00C6                     ___aldiv:	
  3360                           ;psect for function ___aldiv
  3361                           
  3362     00C6                     l1232:	
  3363                           ;incstack = 0
  3364                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3365                           
  3366     00C6  0020               	movlb	0	; select bank0
  3367     00C7  01A1               	clrf	___aldiv@sign
  3368     00C8                     l1234:
  3369     00C8  1FF3               	btfss	___aldiv@divisor+3,7
  3370     00C9  28CB               	goto	u751
  3371     00CA  28CC               	goto	u750
  3372     00CB                     u751:
  3373     00CB  28D9               	goto	l343
  3374     00CC                     u750:
  3375     00CC                     l1236:
  3376     00CC  09F0               	comf	___aldiv@divisor,f
  3377     00CD  09F1               	comf	___aldiv@divisor+1,f
  3378     00CE  09F2               	comf	___aldiv@divisor+2,f
  3379     00CF  09F3               	comf	___aldiv@divisor+3,f
  3380     00D0  0AF0               	incf	___aldiv@divisor,f
  3381     00D1  1903               	skipnz
  3382     00D2  0AF1               	incf	___aldiv@divisor+1,f
  3383     00D3  1903               	skipnz
  3384     00D4  0AF2               	incf	___aldiv@divisor+2,f
  3385     00D5  1903               	skipnz
  3386     00D6  0AF3               	incf	___aldiv@divisor+3,f
  3387     00D7  01A1               	clrf	___aldiv@sign
  3388     00D8  0AA1               	incf	___aldiv@sign,f
  3389     00D9                     l343:
  3390     00D9  1FF7               	btfss	___aldiv@dividend+3,7
  3391     00DA  28DC               	goto	u761
  3392     00DB  28DD               	goto	u760
  3393     00DC                     u761:
  3394     00DC  28EC               	goto	l1242
  3395     00DD                     u760:
  3396     00DD                     l1238:
  3397     00DD  09F4               	comf	___aldiv@dividend,f
  3398     00DE  09F5               	comf	___aldiv@dividend+1,f
  3399     00DF  09F6               	comf	___aldiv@dividend+2,f
  3400     00E0  09F7               	comf	___aldiv@dividend+3,f
  3401     00E1  0AF4               	incf	___aldiv@dividend,f
  3402     00E2  1903               	skipnz
  3403     00E3  0AF5               	incf	___aldiv@dividend+1,f
  3404     00E4  1903               	skipnz
  3405     00E5  0AF6               	incf	___aldiv@dividend+2,f
  3406     00E6  1903               	skipnz
  3407     00E7  0AF7               	incf	___aldiv@dividend+3,f
  3408     00E8                     l1240:
  3409     00E8  3001               	movlw	1
  3410     00E9  00F8               	movwf	??___aldiv
  3411     00EA  0878               	movf	??___aldiv,w
  3412     00EB  06A1               	xorwf	___aldiv@sign,f
  3413     00EC                     l1242:
  3414     00EC  3000               	movlw	0
  3415     00ED  00A5               	movwf	___aldiv@quotient+3
  3416     00EE  3000               	movlw	0
  3417     00EF  00A4               	movwf	___aldiv@quotient+2
  3418     00F0  3000               	movlw	0
  3419     00F1  00A3               	movwf	___aldiv@quotient+1
  3420     00F2  3000               	movlw	0
  3421     00F3  00A2               	movwf	___aldiv@quotient
  3422     00F4                     l1244:
  3423     00F4  0873               	movf	___aldiv@divisor+3,w
  3424     00F5  0472               	iorwf	___aldiv@divisor+2,w
  3425     00F6  0471               	iorwf	___aldiv@divisor+1,w
  3426     00F7  0470               	iorwf	___aldiv@divisor,w
  3427     00F8  1903               	skipnz
  3428     00F9  28FB               	goto	u771
  3429     00FA  28FC               	goto	u770
  3430     00FB                     u771:
  3431     00FB  293D               	goto	l1264
  3432     00FC                     u770:
  3433     00FC                     l1246:
  3434     00FC  01A0               	clrf	___aldiv@counter
  3435     00FD  0AA0               	incf	___aldiv@counter,f
  3436     00FE  290A               	goto	l1250
  3437     00FF                     l1248:
  3438     00FF  3001               	movlw	1
  3439     0100                     u785:
  3440     0100  35F0               	lslf	___aldiv@divisor,f
  3441     0101  0DF1               	rlf	___aldiv@divisor+1,f
  3442     0102  0DF2               	rlf	___aldiv@divisor+2,f
  3443     0103  0DF3               	rlf	___aldiv@divisor+3,f
  3444     0104  0B89               	decfsz	9,f
  3445     0105  2900               	goto	u785
  3446     0106  3001               	movlw	1
  3447     0107  00F8               	movwf	??___aldiv
  3448     0108  0878               	movf	??___aldiv,w
  3449     0109  07A0               	addwf	___aldiv@counter,f
  3450     010A                     l1250:
  3451     010A  1FF3               	btfss	___aldiv@divisor+3,7
  3452     010B  290D               	goto	u791
  3453     010C  290E               	goto	u790
  3454     010D                     u791:
  3455     010D  28FF               	goto	l1248
  3456     010E                     u790:
  3457     010E                     l1252:
  3458     010E  3001               	movlw	1
  3459     010F                     u805:
  3460     010F  35A2               	lslf	___aldiv@quotient,f
  3461     0110  0DA3               	rlf	___aldiv@quotient+1,f
  3462     0111  0DA4               	rlf	___aldiv@quotient+2,f
  3463     0112  0DA5               	rlf	___aldiv@quotient+3,f
  3464     0113  0B89               	decfsz	9,f
  3465     0114  290F               	goto	u805
  3466     0115                     l1254:
  3467     0115  0873               	movf	___aldiv@divisor+3,w
  3468     0116  0277               	subwf	___aldiv@dividend+3,w
  3469     0117  1D03               	skipz
  3470     0118  2923               	goto	u815
  3471     0119  0872               	movf	___aldiv@divisor+2,w
  3472     011A  0276               	subwf	___aldiv@dividend+2,w
  3473     011B  1D03               	skipz
  3474     011C  2923               	goto	u815
  3475     011D  0871               	movf	___aldiv@divisor+1,w
  3476     011E  0275               	subwf	___aldiv@dividend+1,w
  3477     011F  1D03               	skipz
  3478     0120  2923               	goto	u815
  3479     0121  0870               	movf	___aldiv@divisor,w
  3480     0122  0274               	subwf	___aldiv@dividend,w
  3481     0123                     u815:
  3482     0123  1C03               	skipc
  3483     0124  2926               	goto	u811
  3484     0125  2927               	goto	u810
  3485     0126                     u811:
  3486     0126  2930               	goto	l1260
  3487     0127                     u810:
  3488     0127                     l1256:
  3489     0127  0870               	movf	___aldiv@divisor,w
  3490     0128  02F4               	subwf	___aldiv@dividend,f
  3491     0129  0871               	movf	___aldiv@divisor+1,w
  3492     012A  3BF5               	subwfb	___aldiv@dividend+1,f
  3493     012B  0872               	movf	___aldiv@divisor+2,w
  3494     012C  3BF6               	subwfb	___aldiv@dividend+2,f
  3495     012D  0873               	movf	___aldiv@divisor+3,w
  3496     012E  3BF7               	subwfb	___aldiv@dividend+3,f
  3497     012F                     l1258:
  3498     012F  1422               	bsf	___aldiv@quotient,0
  3499     0130                     l1260:
  3500     0130  3001               	movlw	1
  3501     0131                     u825:
  3502     0131  36F3               	lsrf	___aldiv@divisor+3,f
  3503     0132  0CF2               	rrf	___aldiv@divisor+2,f
  3504     0133  0CF1               	rrf	___aldiv@divisor+1,f
  3505     0134  0CF0               	rrf	___aldiv@divisor,f
  3506     0135  0B89               	decfsz	9,f
  3507     0136  2931               	goto	u825
  3508     0137                     l1262:
  3509     0137  3001               	movlw	1
  3510     0138  02A0               	subwf	___aldiv@counter,f
  3511     0139  1D03               	btfss	3,2
  3512     013A  293C               	goto	u831
  3513     013B  293D               	goto	u830
  3514     013C                     u831:
  3515     013C  290E               	goto	l1252
  3516     013D                     u830:
  3517     013D                     l1264:
  3518     013D  0821               	movf	___aldiv@sign,w
  3519     013E  1903               	btfsc	3,2
  3520     013F  2941               	goto	u841
  3521     0140  2942               	goto	u840
  3522     0141                     u841:
  3523     0141  294D               	goto	l1268
  3524     0142                     u840:
  3525     0142                     l1266:
  3526     0142  09A2               	comf	___aldiv@quotient,f
  3527     0143  09A3               	comf	___aldiv@quotient+1,f
  3528     0144  09A4               	comf	___aldiv@quotient+2,f
  3529     0145  09A5               	comf	___aldiv@quotient+3,f
  3530     0146  0AA2               	incf	___aldiv@quotient,f
  3531     0147  1903               	skipnz
  3532     0148  0AA3               	incf	___aldiv@quotient+1,f
  3533     0149  1903               	skipnz
  3534     014A  0AA4               	incf	___aldiv@quotient+2,f
  3535     014B  1903               	skipnz
  3536     014C  0AA5               	incf	___aldiv@quotient+3,f
  3537     014D                     l1268:
  3538     014D  0825               	movf	___aldiv@quotient+3,w
  3539     014E  00F3               	movwf	?___aldiv+3
  3540     014F  0824               	movf	___aldiv@quotient+2,w
  3541     0150  00F2               	movwf	?___aldiv+2
  3542     0151  0823               	movf	___aldiv@quotient+1,w
  3543     0152  00F1               	movwf	?___aldiv+1
  3544     0153  0822               	movf	___aldiv@quotient,w
  3545     0154  00F0               	movwf	?___aldiv
  3546     0155                     l353:
  3547     0155  0008               	return
  3548     0156                     __end_of___aldiv:
  3549                           
  3550                           	psect	intentry
  3551     0004                     __pintentry:	
  3552 ;; *************** function _isr *****************
  3553 ;; Defined at:
  3554 ;;		line 317 in file "main.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		Interrupt level 1
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581     0004                     _isr:
  3582                           
  3583                           ;incstack = 0
  3584     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3585                           
  3586                           ; Regs used in _isr: [wreg]
  3587     0005  3180               	pagesel	$
  3588     0006                     i1l1422:
  3589                           
  3590                           ;main.c: 319:     if (INTCONbits.IOCIF)
  3591     0006  1C0B               	btfss	11,0	;volatile
  3592     0007  2809               	goto	u89_21
  3593     0008  280A               	goto	u89_20
  3594     0009                     u89_21:
  3595     0009  2820               	goto	i1l109
  3596     000A                     u89_20:
  3597     000A                     i1l1424:
  3598                           
  3599                           ;main.c: 320:     {;main.c: 321:         if (IOCAFbits.IOCAF0)
  3600     000A  0027               	movlb	7	; select bank7
  3601     000B  1C13               	btfss	19,0	;volatile
  3602     000C  280E               	goto	u90_21
  3603     000D  280F               	goto	u90_20
  3604     000E                     u90_21:
  3605     000E  2815               	goto	i1l1430
  3606     000F                     u90_20:
  3607     000F                     i1l1426:
  3608                           
  3609                           ;main.c: 322:         {;main.c: 323:             IOCAFbits.IOCAF0 = 0;
  3610     000F  1013               	bcf	19,0	;volatile
  3611     0010                     i1l1428:
  3612                           
  3613                           ;main.c: 324:             counterA++;
  3614     0010  3001               	movlw	1
  3615     0011  0020               	movlb	0	; select bank0
  3616     0012  07C1               	addwf	_counterA,f	;volatile
  3617     0013  3000               	movlw	0
  3618     0014  3DC2               	addwfc	_counterA+1,f	;volatile
  3619     0015                     i1l1430:
  3620                           
  3621                           ;main.c: 327:         if (IOCAFbits.IOCAF1)
  3622     0015  0027               	movlb	7	; select bank7
  3623     0016  1C93               	btfss	19,1	;volatile
  3624     0017  2819               	goto	u91_21
  3625     0018  281A               	goto	u91_20
  3626     0019                     u91_21:
  3627     0019  2820               	goto	i1l109
  3628     001A                     u91_20:
  3629     001A                     i1l1432:
  3630                           
  3631                           ;main.c: 328:         {;main.c: 329:             IOCAFbits.IOCAF1 = 0;
  3632     001A  1093               	bcf	19,1	;volatile
  3633     001B                     i1l1434:
  3634                           
  3635                           ;main.c: 330:             counterB++;
  3636     001B  3001               	movlw	1
  3637     001C  0020               	movlb	0	; select bank0
  3638     001D  07BF               	addwf	_counterB,f	;volatile
  3639     001E  3000               	movlw	0
  3640     001F  3DC0               	addwfc	_counterB+1,f	;volatile
  3641     0020                     i1l109:
  3642     0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3643     0021  0009               	retfie
  3644     0022                     __end_of_isr:
  3645     007E                     btemp	set	126	;btemp
  3646     007E                     int$flags	set	126
  3647     007E                     wtemp0	set	126
  3648                           
  3649                           	psect	config
  3650                           
  3651                           ;Config register CONFIG1 @ 0x8007
  3652                           ;	Oscillator Selection Bits
  3653                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3654                           ;	Watchdog Timer Enable
  3655                           ;	WDTE = OFF, WDT disabled
  3656                           ;	Power-up Timer Enable
  3657                           ;	PWRTE = OFF, PWRT disabled
  3658                           ;	MCLR Pin Function Select
  3659                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input if LVP bit is also 0.
  3660                           ;	Flash Program Memory Code Protection
  3661                           ;	CP = OFF, Program memory code protection is disabled
  3662                           ;	Brown-out Reset Enable
  3663                           ;	BOREN = OFF, Brown-out Reset disabled
  3664                           ;	Clock Out Enable
  3665                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3666                           ;	Internal/External Switchover Mode
  3667                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  3668                           ;	Fail-Safe Clock Monitor Enable
  3669                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3670     8007                     	org	32775
  3671     8007  19A4               	dw	6564
  3672                           
  3673                           ;Config register CONFIG2 @ 0x8008
  3674                           ;	Flash Memory Self-Write Protection
  3675                           ;	WRT = OFF, Write protection off
  3676                           ;	Peripheral Pin Select one-way control
  3677                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3678                           ;	Zero-cross detect disable
  3679                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3680                           ;	Phase Lock Loop enable
  3681                           ;	PLLEN = OFF, 4x PLL is disabled
  3682                           ;	Stack Overflow/Underflow Reset Enable
  3683                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3684                           ;	Brown-out Reset Voltage Selection
  3685                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3686                           ;	Low-Power Brown Out Reset
  3687                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3688                           ;	In-Circuit Debugger Mode
  3689                           ;	DEBUG = 0x1, unprogrammed default
  3690                           ;	Low-Voltage Programming Enable
  3691                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3692     8008                     	org	32776
  3693     8008  1EFF               	dw	7935

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    EUSART_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Integer@temp_ptr	PTR unsigned char  size(1) Largest target is 20
		 -> EUSART_Write_Integer@buffer(BANK0[20]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[3]), STR_3(CODE[11]), STR_4(CODE[2]), 

    itoa@buf	PTR PTR unsigned char  size(1) Largest target is 1
		 -> EUSART_Write_Integer@ptr(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Write_Integer
    _motorTurnRight->_leftPWMDuty
    _motorTurnRight->_rightPWMDuty
    _motorStop->_leftPWMDuty
    _motorStop->_rightPWMDuty
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Write_Integer->_itoa
    _itoa->___awdiv
    _EUSART_Initialize->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_EUSART_Write_Integer
    _EUSART_Write_Integer->_itoa
    _EUSART_Initialize->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4500
                                             29 BANK0      2     2      0
                  _EUSART_Initialize
               _EUSART_Write_Integer
                  _EUSART_Write_Text
                           _initMain
                          _motorStop
                     _motorTurnRight
 ---------------------------------------------------------------------------------
 (1) _motorTurnRight                                       2     0      2     598
                                              2 COMMON     2     0      2
                         _leftEnable
                        _leftPWMDuty
                        _rightEnable
                       _rightPWMDuty
 ---------------------------------------------------------------------------------
 (2) _rightEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leftEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorStop                                            0     0      0     500
                        _leftDisable
                        _leftPWMDuty
                       _rightDisable
                       _rightPWMDuty
 ---------------------------------------------------------------------------------
 (2) _rightPWMDuty                                         2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rightDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leftPWMDuty                                          2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _leftDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMain                                             2     2      0       0
                                              0 COMMON     2     2      0
                        _internal_32
 ---------------------------------------------------------------------------------
 (2) _internal_32                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Text                                    5     3      2     416
                                              1 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write_Integer                                25    23      2    2391
                                             11 COMMON     3     1      2
                                              7 BANK0     22    22      0
                       _EUSART_Write
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 9     7      2    2069
                                              9 COMMON     2     0      2
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     595
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _EUSART_Write_Integer
     _EUSART_Write
     _itoa
       ___awdiv
       ___awmod
       ___wmul
   _EUSART_Write_Text
     _EUSART_Write
   _initMain
     _internal_32
   _motorStop
     _leftDisable
     _leftPWMDuty
     _rightDisable
     _rightPWMDuty
   _motorTurnRight
     _leftEnable
     _leftPWMDuty
     _rightEnable
     _rightPWMDuty

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      23       5       43.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      31      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      31      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 27 22:53:44 2024

                               l63 0217                                 l72 03D7  
                               l81 03D1                                 l90 03A0  
                               l66 03DA                                 l75 03DD  
                               l69 03E0                                 l78 03CD  
                               l87 038D                                 l96 01B4  
                               l97 01B4                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0072                       ?_leftPWMDuty 0070  
                              l134 0319                                l150 03B8  
                              l153 03C0                                l163 006B  
                              l343 00D9                                l431 0276  
                              l175 033D                                l159 0379  
                              l280 035C                                l192 03C9  
                              l353 0155                                l169 00C5  
                              l444 02C9                                l278 0348  
                              u510 0358                                u511 0357  
                              u600 0268                                u520 021D  
                              u601 0267                                u521 021C  
                              u505 034E                                u610 026D  
                              u530 0228                                _PR6 041D  
                              u611 026C                                u531 0227  
                              u540 0239                                u700 02C0  
                              u620 027C                                u541 0238  
                              u701 02BF                                u621 027B  
                              u710 03BD                                u630 0287  
                              u711 03BC                                u631 0286  
                              u560 0249                                u640 0292  
                              u480 0344                                u720 0037  
                              u561 0248                                u641 0291  
                              u481 0343                                u721 0036  
                              u810 0127                                u730 007C  
                              u811 0126                                u555 023D  
                              u731 007B                                u580 0258  
                              u660 02A2                                u740 00BE  
                              u805 010F                                u581 0257  
                              u661 02A1                                u741 00BD  
                              u830 013D                                u750 00CC  
                              u670 02AC                                u831 013C  
                              u815 0123                                u751 00CB  
                              u575 024A                                u671 02AB  
                              u655 0296                                u495 0349  
                              u840 0142                                u760 00DD  
                              u841 0141                                u825 0131  
                              u761 00DC                                u585 0254  
                              u770 00FC                                u850 02D8  
                              u690 02BB                                u771 00FB  
                              u595 025E                                u691 02BA  
                              u675 02A8                                u860 02EF  
                              u685 02B1                                u790 010E  
                              u870 0379                                u791 010D  
                              u855 02D4                                u871 0378  
                              u927 016B                                u880 033D  
                              u785 0100                                u865 02EB  
                              u881 033C                                u937 017F  
                              u947 01BF                       ?_leftDisable 0070  
                              _isr 0004                       ___awmod@sign 0076  
                              wreg 0009                               l1100 033E  
                             l1110 0358                               l1102 0340  
                             l1120 0222                               l1104 0344  
                             l1200 03DE                               l1210 03B8  
                             l1130 0233                               l1122 0224  
                             l1114 0218                               l1106 034D  
                             l1202 03D5                               l1212 03BD  
                             l1140 0249                               l1132 0239  
                             l1124 0228                               l1116 0219  
                             l1108 0352                               l1220 0045  
                             l1300 01E1                               l1204 03DB  
                             l1142 0258                               l1134 023C  
                             l1150 0268                               l1126 022D  
                             l1118 021D                               l1230 00BE  
                             l1222 004A                               l1214 002F  
                             l1310 01EF                               l1302 01E5  
                             l1206 03CA                               l1240 00E8  
                             l1232 00C6                               l1152 026D  
                             l1144 025C                               l1136 0241  
                             l1128 0231                               l1160 0278  
                             l1224 007D                               l1216 0037  
                             l1320 01F7                               l1312 01F1  
                             l1304 01E7                               l1208 03CE  
                             l1250 010A                               l1242 00EC  
                             l1234 00C8                               l1154 0272  
                             l1146 025D                               l1138 0245  
                             l1170 028C                               l1162 027C  
                             l1226 00AD                               l1218 0040  
                             l1330 01FF                               l1322 01F8  
                             l1314 01F2                               l1306 01EB  
                             l1410 0188                               l1402 0156  
                             l1260 0130                               l1252 010E  
                             l1244 00F4                               l1236 00CC  
                             l1148 0262                               l1180 02A2  
                             l1172 0292                               l1164 0281  
                             l1228 00B7                               l1340 0212  
                             l1332 0200                               l1324 01F9  
                             l1316 01F4                               l1308 01ED  
                             l1420 01AD                               l1412 018F  
                             l1404 0165                               l1262 0137  
                             l1254 0115                               l1246 00FC  
                             l1238 00DD                               l1190 02C0  
                             l1182 02AC                               l1174 0295  
                             l1166 0283                               l1158 0277  
                             l1342 0214                               l1334 0205  
                             l1326 01FA                               l1318 01F5  
                             l1350 0387                               l1414 0197  
                             l1406 0172                               l1256 0127  
                             l1248 00FF                               l1264 013D  
                             l1360 0310                               l1192 02C5  
                             l1184 02B0                               l1176 029A  
                             l1168 0287                               l1344 0216  
                             l1336 0209                               l1328 01FD  
                             l1280 01C9                               l1272 01B7  
                             l1352 038E                               l1416 019E  
                             l1408 0185                               l1266 0142  
                             l1258 012F                               l1370 0317  
                             l1362 0313                               l1186 02B5  
                             l1178 029E                               l1338 020D  
                             l1290 01D4                               l1282 01CA  
                             l1274 01BA                               l1354 0394  
                             l1346 037A                               l1418 01A5  
                             l1268 014D                               l1372 0318  
                             l1364 0314                               l1188 02BB  
                             l1380 036A                               l1196 03C1  
                             l1292 01D8                               l1284 01CC  
                             l1276 01C6                               l1356 039A  
                             l1348 0380                               l1366 0315  
                             l1358 02CA                               l1390 0329  
                             l1382 036E                               l1294 01DB  
                             l1286 01CE                               l1278 01C8  
                             l1198 03D8                               l1368 0316  
                             l1392 0330                               l1384 031A  
                             l1376 035D                               l1296 01DC  
                             l1288 01CF                               l1394 0335  
                             l1386 031D                               l1378 0360  
                             l1298 01DE                               l1388 0325  
       EUSART_Write_Integer@buffer 0027                               ?_isr 0070  
                             STR_1 03A1                               STR_2 03D2  
                             STR_3 03AC                               STR_4 03E1  
                             _BRGH 0CF2                               _CREN 0CEC  
                             _SCS0 04C8                               _SCS1 04C9  
                             _SPEN 0CEF                               _TXEN 0CF5  
                             _SYNC 0CF4                               _main 0156  
                             _itoa 002D                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             start 0022                              ??_isr 0070  
                    ?_EUSART_Write 0070                    __end_of___aldiv 0156  
                            ?_main 0070                              ?_itoa 0079  
                  __end_of___awdiv 0277                              _BRG16 0CFB  
                  __end_of___awmod 02CA                    ___awdiv@divisor 0070  
                            _IRCF0 04CB                              _IRCF1 04CC  
                            _IRCF2 04CD                              _IRCF3 04CE  
                            i1l109 0020                    ___awdiv@counter 0075  
                            u90_20 000F                              u90_21 000E  
                            u91_20 001A                              u91_21 0019  
                            u89_20 000A                              u89_21 0009  
                            itoa@d 0079                              status 0003  
                            wtemp0 007E                       ?_internal_32 0070  
                  leftPWMDuty@duty 0070                    __initialization 0024  
                     __end_of_main 01B7                       __end_of_itoa 00C6  
                   ??_EUSART_Write 0070                             ??_main 003D  
                           ??_itoa 007B                       ?_rightEnable 0070  
                           _CCPR1L 0291                             _CCPR2L 0298  
                 ___awdiv@dividend 0072                             _ANSELB 018D  
                           _RC1REG 0199                             i1l1430 0015  
                           i1l1422 0006                             i1l1432 001A  
                           i1l1424 000A                             i1l1434 001B  
                           i1l1426 000F                             i1l1428 0010  
                           _SPBRGL 019B                             _TX1REG 019A  
                           _SPLLEN 04CF                          ??___aldiv 0078  
                           ___wmul 033E                          ??___awdiv 0074  
                        ??___awmod 0074                   __end_of_initMain 0218  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075            __end_of__initialization 0029  
                   __pcstackCOMMON 0070                         __pbssBANK0 003F  
             __end_of_EUSART_Write 03C1                      ?_rightPWMDuty 0070  
                       __pmaintext 0156                            ?___wmul 0070  
                    ?_rightDisable 0070                         __pintentry 0004  
                          _PPSLOCK 0E0F                         _leftEnable 03D8  
                        ?_initMain 0070                     ??_rightPWMDuty 0072  
                   ??_rightDisable 0070                            ___aldiv 00C6  
                          ___awdiv 0218                            ___awmod 0277  
                          __ptext1 037A                            __ptext2 03D5  
                          __ptext3 03D8                            __ptext4 038E  
                          __ptext5 03CA                            __ptext6 03DB  
                          __ptext7 03CE                            __ptext8 03DE  
                          __ptext9 01B7                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074                          _IOCAFbits 0393  
                        _IOCANbits 0392                          _T6CONbits 041E  
             end_of_initialization 0029                         ??_initMain 0070  
                          itoa@div 0025                            itoa@buf 0024  
                          itoa@num 0020                  __end_of_motorStop 03A1  
                _EUSART_Initialize 02CA                 ?_EUSART_Initialize 0026  
                 ___aldiv@quotient 0022                 EUSART_Initialize@x 0079  
              ??_EUSART_Initialize 002A                          _TRISAbits 008C  
                        _TRISBbits 008D                          _TRISDbits 008F  
                      ?_leftEnable 0070                          _RXPPSbits 0E24  
        __end_of_EUSART_Initialize 031A                        _CCP1CONbits 0293  
                      _CCP2CONbits 029A       __end_of_EUSART_Write_Integer 033E  
                   __end_of___wmul 035D                      ??_leftPWMDuty 0072  
                     _EUSART_Write 03B7                      ??_leftDisable 0070  
              start_initialization 0024               __end_of_rightPWMDuty 03CE  
EUSART_Write_Integer@value_to_send 007B                        __end_of_isr 0022  
             __end_of_rightDisable 03DE                  _EUSART_Write_Text 035D  
               ?_EUSART_Write_Text 0071                           ??___wmul 0074  
                      _CCPTMRSbits 029E                     _motorTurnRight 037A  
              ??_EUSART_Write_Text 0073                          ___latbits 0003  
                    __pcstackBANK0 0020                __end_of_leftPWMDuty 03D2  
              __end_of_leftDisable 03E1          __end_of_EUSART_Write_Text 037A  
                    ??_internal_32 0070             __end_of_motorTurnRight 038E  
                         ?___aldiv 0070                           ?___awdiv 0070  
                         ?___awmod 0070           motorTurnRight@motorSpeed 0072  
        EUSART_Initialize@baudrate 0026               _EUSART_Write_Integer 031A  
                    ??_rightEnable 0070                    ___aldiv@divisor 0070  
                  ___aldiv@counter 0020                     ___wmul@product 0074  
                         _LATDbits 010F                           _PIR1bits 0011  
          EUSART_Write_Integer@ptr 003B                    ?_motorTurnRight 0072  
                        _motorStop 038E                __end_of_internal_32 03CA  
                      _leftPWMDuty 03CE                  ___wmul@multiplier 0070  
                      _leftDisable 03DE              ?_EUSART_Write_Integer 007B  
                     ??_leftEnable 0070                __end_of_rightEnable 03D8  
     EUSART_Write_Integer@temp_ptr 003C                       _rightPWMDuty 03CA  
                       ?_motorStop 0070                       _rightDisable 03DB  
                 rightPWMDuty@duty 0070                 __end_of_leftEnable 03DB  
                       _ANSELAbits 018C                         _ANSELBbits 018D  
                         __ptext10 03C1                           __ptext11 035D  
                         __ptext12 031A                           __ptext13 002D  
                         __ptext14 033E                           __ptext15 0277  
                         __ptext16 0218                           __ptext17 03B7  
                         __ptext18 02CA                           __ptext19 00C6  
                         _counterA 0041                           _counterB 003F  
                         _initMain 01B7                        _internal_32 03C1  
                       _RB0PPSbits 0E98                         _RB1PPSbits 0E99  
                       _RB2PPSbits 0E9A                         _RC1STAbits 019D  
                         int$flags 007E             ??_EUSART_Write_Integer 007D  
                       _INTCONbits 000B                           itoa@temp 0022  
                      _rightEnable 03D5                           intlevel1 0000  
                      _PPSLOCKbits 0E0F                        ??_motorStop 0072  
                    __pstringtext1 03A1                      __pstringtext2 03AC  
                    __pstringtext3 03D2                      __pstringtext4 03E1  
                    __pstringtext5 0000              EUSART_Write_Text@text 0071  
                     ___aldiv@sign 0021                 EUSART_Write@txData 0070  
                 ??_motorTurnRight 0074                 EUSART_Write_Text@i 0074  
